<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- @version $Revision: $ $Date: $ $Author: $ $State: $ -->
	<!-- @formatter:off -->
	<parent>
		<groupId>com.nabla</groupId>
		<artifactId>users</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.nabla.project</groupId>
	<artifactId>dependencies</artifactId>
	<packaging>pom</packaging>
	<name>Dependencies pom file</name>
	<description>The Dependencies pom file is a superpom to centralize all third parties</description>
	<url>http://maven.nabla.mobi/dependencies</url>
	<inceptionYear>2018</inceptionYear>
	<organization>
		<name>Nabla Software</name>
		<url>http://home.nabla.mobi/</url>
	</organization>
	<licenses>
		<license>
			<!--<name>GNU Lesser General Public License, Version 2.1</name>-->
			<name>The Nabla Projec</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<!-- TODO remove hard coded LICENSE-1.0.txt -->
			<!--<url>../build-tools/src/main/resources/project/LICENSE-1.0.txt</url>-->
			<!--<distribution>repo</distribution>-->
			<distribution>perso</distribution>
			<comments>This program is the property of Nabla, it runs under a BSD license</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>albandri</id>
			<name>Andrieu Alban</name>
			<email>alban.andrieu@nabla.mobi</email>
			<url>http://plus.google.com/116805748993308767756/about</url>
			<organization>Nabla</organization>
			<roles>
				<role>Java Developer</role>
				<role>C++ Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<!--
                Contributors are like developers yet play an ancillary role in a
                project's lifecycle.
        -->
	<contributors>
		<contributor>
			<name>Alban Andrieu</name>
			<email>alban.andrieu@nabla.mobi</email>
			<url>http://plus.google.com/116805748993308767756/about</url>
			<organization>Nabla</organization>
			<roles>
				<role>Project Leader</role>
				<role>Project Manager</role>
				<role>Architect</role>
				<role>Technical Analyst</role>
			</roles>
			<timezone>+1</timezone>
		</contributor>
	</contributors>
	<!--
                Mailing lists are a great tool for keeping in touch with people about
                a project. Most mailing lists are for developers and users.
        -->
	<mailingLists>
		<mailingList>
			<name>${project.name} Nabla dev mailing list</name>
			<post>dev@nabla.mobi</post>
			<!--<archive>https://alban.andrieu.nabladev.net/servlets/SummarizeList?listName=dev</archive> -->
		</mailingList>
	</mailingLists>
	<prerequisites>
		<maven>3.5.0</maven>
	</prerequisites>
	<issueManagement>
		<!--
                <system>bugzilla</system>
                <url>http://localhost</url>
                <system>Google Code</system>
                <url>http://code.google.com/p/alban/issues/list</url>
                -->
		<system>GitHub</system>
		<url>https://github.com/AlbanAndrieu/nabla/issues</url>
	</issueManagement>
	<ciManagement>
		<!--
                <system>hudson</system>
                <url>http://localhost:8070/hudson/</url>
                -->
		<system>Jenkins</system>
		<!--<url>${JENKINS_URL}/job/${JOB_NAME}</url>-->
		<url>${JOB_URL}</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<sendOnError>true</sendOnError>
				<sendOnFailure>true</sendOnFailure>
				<sendOnSuccess>false</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<configuration>
					<address>dev@nabla.mobi</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>
	<!-- Keep Alphabetical Order. Capital Letter goes first -->
	<properties>
		<acegi.security.version>1.0.1</acegi.security.version>
		<acegi.version>1.0.5</acegi.version>
		<acegijsf.version>1.1.2</acegijsf.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<activemq.core.version>5.7.0</activemq.core.version>
		<ajax4jsf.version>1.0.6</ajax4jsf.version>
		<!--<akka.version>2.3.7</akka.version>-->
		<akka.version>2.5.10</akka.version>
		<amp.fullSource>false</amp.fullSource>
		<!-- APPFUSE settings -->
		<amp.genericCore>true</amp.genericCore>
		<!-- BEGIN of Thirdparties versions stick to project recommandations -->
		<andromda.version>3.6-SNAPSHOT</andromda.version>
		<annogen.version>0.1.0</annogen.version>
		<ant.contrib.version>20020829</ant.contrib.version>
		<!--<ant.nodeps.version>${ant.version}</ant.nodeps.version>-->
		<ant.trax.version>1.7.0</ant.trax.version>
		<!-- necessary to force the relocation to org.jdom <jdom.version>${org.jdom.version}</jdom.version>-->
		<ant.version>1.10.5</ant.version>
		<antlr.version>2.7.7</antlr.version>
		<aopalliance.version>1.0</aopalliance.version>
		<appfuse.version>2.1.0-M1</appfuse.version>
		<application.server>jboss</application.server>
		<appsensor.core.version>2.3.2</appsensor.core.version>
		<asm.ow2.version>7.1</asm.ow2.version>
		<!-- error running openejb -->
		<asm.version>3.3.1</asm.version>
		<aspectj.version>1.8.13</aspectj.version>
		<aspectj.weaver.version>${aspectj.version}</aspectj.weaver.version>
		<atmosphere.version>2.5.13</atmosphere.version>
		<avalon.framework.version>4.1.3</avalon.framework.version>
		<axiom.api.version>1.2.10</axiom.api.version>
		<axiom.dom.version>${axiom.api.version}</axiom.dom.version>
		<axiom.impl.version>${axiom.api.version}</axiom.impl.version>
		<axis.jaxrpc.version>1.4</axis.jaxrpc.version>
		<axis.version>1.4</axis.version>
		<axis2.version>1.2</axis2.version>
		<backport.util.concurrent.version>3.1</backport.util.concurrent.version>
		<batik.ext.version>${batik.version}</batik.ext.version>
		<!--<xml.apis.version>2.0.2</xml.apis.version>-->
		<batik.version>1.7</batik.version>
		<bean.matchers.version>0.8.1</bean.matchers.version>
		<blazeds.version>3.2.0.3978</blazeds.version>
		<bouncycastle.version>1.46</bouncycastle.version>
		<build.support.version>1.4</build.support.version>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<!--<bundle.symbolicName>${project.groupId}.tests.webapp</bundle.symbolicName>-->
		<bundle.namespace>${project.groupId}</bundle.namespace>
		<!-- check overrided pom.xml in server -->
		<!-- used by osgi.bnd with maven-bundle-plugin -->
		<bundle.symbolicName>${project.artifactId}</bundle.symbolicName>
		<c3p0.version>0.8.5.2</c3p0.version>
		<camel.version>2.13.0</camel.version>
		<cargo.core.uberjar.version>1.7.11</cargo.core.uberjar.version>
		<!-- TODO move to profile jmeter -->
		<cargo.host>localhost</cargo.host>
		<cargo.port>80</cargo.port>
		<!-- Testing dependency versions -->
		<cargo.version>1.0</cargo.version>
		<castor.version>1.3.1</castor.version>
		<!--<cglib.nodep.version>2.1_3</cglib.nodep.version>-->
		<cglib.nodep.version>2.2.2</cglib.nodep.version>
		<!-- works with cglib -->
		<cglib.version>2.2</cglib.version>
		<classworlds.version>1.1</classworlds.version>
		<clickstream.version>1.0.2</clickstream.version>
		<!-- Test Coverage/Sonar - Clover - Do not change this version without checking if everything is working well -->
		<clover.cenqua.version>3.3.0</clover.cenqua.version>
		<!-- old version which moved to com.atlassian.clover Â» clover -->
		<clover.version>4.1.2</clover.version>
		<cobertura.format>xml</cobertura.format>
		<commons.beanutils.version>1.8.3</commons.beanutils.version>
		<commons.cli.version>1.2</commons.cli.version>
		<commons.codec.version>1.7</commons.codec.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.configuration.version>1.6</commons.configuration.version>
		<commons.dbcp>1.2.2</commons.dbcp>
		<commons.dbcp.version>1.4</commons.dbcp.version>
		<commons.digester.version>2.1</commons.digester.version>
		<commons.discovery.version>0.4</commons.discovery.version>
		<commons.fileupload.version>1.2.2</commons.fileupload.version>
		<commons.httpclient.version>3.1</commons.httpclient.version>
		<commons.io.version>2.1</commons.io.version>
		<!-- common parties versions -->
		<commons.lang.version>2.6</commons.lang.version>
		<commons.lang3.version>3.0</commons.lang3.version>
		<commons.logging.version>1.1.1</commons.logging.version>
		<commons.math.version>2.2</commons.math.version>
		<commons.math3.version>3.6.1</commons.math3.version>
		<commons.pool.version>1.4</commons.pool.version>
		<commons.validator.version>1.3.1</commons.validator.version>
		<concurrent.junit.version>1.0.2</concurrent.junit.version>
		<concurrent.version>1.3.4</concurrent.version>
		<!-- TODO overrided in filter -->
		<copyright.year>2015</copyright.year>
		<corejsf.validator.version>1.0</corejsf.validator.version>
		<cssparser.version>0.9.25</cssparser.version>
		<cucumber.feature></cucumber.feature>
		<cucumber.features.dir>src/test/resources/features</cucumber.features.dir>
		<cucumber.tags>~@no-tag-specified</cucumber.tags>
		<cucumber.version>1.2.5</cucumber.version>
		<cxf.common.schemas.version>2.3.11</cxf.common.schemas.version>
		<cxf.common.utilities.version>2.5.11</cxf.common.utilities.version>
		<cxf.rt.core.version>${cxf.version}</cxf.rt.core.version>
		<!--<cxf.version>2.7.14</cxf.version>-->
		<!-- version of cxf that is working with jetty 8 -->
		<!--<cxf.jetty.version>8.1.15.v20140411</cxf.jetty.version>  version of jetty used by cxf 2.7.14 -->
		<!--<cxf.version>3.1.6</cxf.version> TODO TEST upgrade -->
		<cxf.version>2.7.18</cxf.version>
		<!-- APPFUSE Persistence settings -->
		<dao.framework>jpa</dao.framework>
		<!--<clover.version>4.0.6</clover.version>-->
		<dbunit.version>2.5.4</dbunit.version>
		<displaytag.version>1.2</displaytag.version>
		<documentation.output.directory>${project.build.directory}/docs</documentation.output.directory>
		<dom4j.version>1.6.1</dom4j.version>
		<doxia.core.version>1.8</doxia.core.version>
		<doxia.module.twiki.version>${doxia.version}</doxia.module.twiki.version>
		<doxia.version>1.8.1</doxia.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<drools.version>6.2.0.CR4</drools.version>-->
		<drools.api.version>5.2.0.M1</drools.api.version>
		<drools.transformer.xstream.version>5.1.0.M2</drools.transformer.xstream.version>
		<!--<webdriver.chrome.driver>/var/lib/chromedriver</webdriver.chrome.driver>-->
		<!-- warning overrided in customs/pom.xml depending on architecture -->
		<!--<webdriver.firefox.bin>/usr/lib/firefox/firefox</webdriver.firefox.bin>-->
		<!-- warning overrided in customs/pom.xml depending on architecture -->
		<!--<arquillian>arq-jbossas-managed</arquillian>-->
		<!-- warning overrided in customs/pom.xml depending on architecture -->
		<drools.version>7.6.0.Final</drools.version>
		<dwr.version>2.0.1</dwr.version>
		<!-- NOT needed instead remove jmock-junit4 because it does not work with jacoco
                <jmock.version>2.6.0</jmock.version>
                -->
		<easymock.version>3.5.1</easymock.version>
		<ehcache.core.version>2.6.11</ehcache.core.version>
		<ehcache.jar.version>1.5.0</ehcache.jar.version>
		<ehcache.terracotta.version>2.1.1</ehcache.terracotta.version>
		<!--
                <ehcache.version>2.5.0</ehcache.version>
                <ehcache.jar.version>2.7.4</ehcache.jar.version>
                -->
		<!--<ehcache.version>2.4.7</ehcache.version>-->
		<ehcache.version>2.10.4</ehcache.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<ejb3.persistence.version>1.0.2.GA</ejb3.persistence.version>
		<ejml.version>0.24</ejml.version>
		<el.api.version>2.2.1-b04</el.api.version>
		<el.api.version>2.2.1-b04</el.api.version>
		<el.impl.version>2.2</el.impl.version>
		<el.ri.version>1.0</el.ri.version>
		<el.version>1.2</el.version>
		<embed.mongo.version>1.46.1</embed.mongo.version>
		<!-- TODO remove overrided to 1.0.1-SNAPSHOT-->
		<environment>development</environment>
		<errai.jboss7.support.version>2.0.Beta4</errai.jboss7.support.version>
		<!-- OK <errai.version>2.0.Beta3</errai.version>-->
		<errai.version>2.3.2.Final</errai.version>
		<esper.version>4.11.0</esper.version>
		<express-jar.artifactId>ehcache</express-jar.artifactId>
		<ezmorph.version>1.0.6</ezmorph.version>
		<facelets.version>1.1.13</facelets.version>
		<fasterxml.jackson.version>2.9.4</fasterxml.jackson.version>
		<fastinfoset.version>1.2.13</fastinfoset.version>
		<feed4junit.version>1.2.0</feed4junit.version>
		<fitnesse.version>20150814</fitnesse.version>
		<flex.automation.version>${flex.sdk.version}</flex.automation.version>
		<flex.messaging.common.version>3.3.0.4852</flex.messaging.common.version>
		<!-- flex versions -->
		<flex.pmd.version>1.2</flex.pmd.version>
		<flex.sdk.version>4.6.b.23201</flex.sdk.version>
		<flexlib.version>2.5</flexlib.version>
		<flexunit.version>4.0-rc-1</flexunit.version>
		<fop.version>0.95-1</fop.version>
		<!-- OK see http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<gwt.version>2.6.0</gwt.version>-->
		<gae.version>1.5.3</gae.version>
		<gatling.uncommons.maths.version>1.2.3</gatling.uncommons.maths.version>
		<!--<gatling.version>2.2.0</gatling.version>-->
		<gatling.version>2.2.4</gatling.version>
		<geronimo.activation.spec.version>1.1</geronimo.activation.spec.version>
		<geronimo.annotation.spec.version>1.1.1</geronimo.annotation.spec.version>
		<geronimo.ejb.2.1.spec.version>1.1</geronimo.ejb.2.1.spec.version>
		<geronimo.ejb.3.0.spec.version>1.0</geronimo.ejb.3.0.spec.version>
		<geronimo.j2ee.specs.version>1.1</geronimo.j2ee.specs.version>
		<geronimo.jaxws.2.1.spec.version>1.0</geronimo.jaxws.2.1.spec.version>
		<geronimo.jaxws.2.2.spec.version>1.0</geronimo.jaxws.2.2.spec.version>
		<geronimo.jms.version>1.1.1</geronimo.jms.version>
		<geronimo.jsp.2.1.spec.version>1.0.1</geronimo.jsp.2.1.spec.version>
		<geronimo.servlet.2.5.spec.version>1.2</geronimo.servlet.2.5.spec.version>
		<geronimo.servlet.3.0.spec.version>1.0</geronimo.servlet.3.0.spec.version>
		<geronimo.stax.api.spec.version>1.0.1</geronimo.stax.api.spec.version>
		<geronimo.version>1.0</geronimo.version>
		<geronimo.ws.metadata.spec.version>1.1.3</geronimo.ws.metadata.spec.version>
		<glassfish.embedded.all.version>3.1.2</glassfish.embedded.all.version>
		<!-- The groovy dependency (groovy-all -> groovy.version) version should match the compiler version -->
		<gluegen.rt.main.version>2.3.2</gluegen.rt.main.version>
		<!--<gmaven.runtime.number.version>1.7</gmaven.runtime.number.version>-->
		<gmaven.runtime.number.version>2.0</gmaven.runtime.number.version>
		<gmaven.runtime.version>${maven.gmaven.plugin.version}</gmaven.runtime.version>
		<google.api.client.version>1.0.10-alpha</google.api.client.version>
		<googlecode.jmockit.version>1.7</googlecode.jmockit.version>
		<gr.spinellis.UmlGraph.version>4.6.0</gr.spinellis.UmlGraph.version>
		<gridgain.platform.version>${gridgain.version}test</gridgain.platform.version>
		<gridgain.version>6.5.6</gridgain.version>
		<groovy.cps.version>1.12</groovy.cps.version>
		<groovy.eclipse.batch.version>2.5.7-01</groovy.eclipse.batch.version>
		<groovy.eclipse.compiler.version>3.4.0-01</groovy.eclipse.compiler.version>
		<!-- works with cxf 2.7.14 -->
		<groovy.version>2.4.12</groovy.version>
		<groovydoc.directory.name>groovydocs</groovydoc.directory.name>
		<!--<guava.version>14.0.1</guava.version>-->
		<!-- WARNING 16.0-rc1 does not work with selenium -->
		<!--<guava.version>17.0</guava.version> does not work in visma -->
		<!--<guava.version>18.0</guava.version>-->
		<guava.version>24.0-jre</guava.version>
		<guice.version>4.1.0</guice.version>
		<gwt.seam.version>${project.version}</gwt.seam.version>
		<gwt.test.utils.version>0.38</gwt.test.utils.version>
		<gwt.version>2.8.2</gwt.version>
		<!-- <gwtp.all.version>1.0.2</gwtp.all.version> OK -->
		<gwtp.all.version>1.6</gwtp.all.version>
		<hamcrest.all.version>1.3</hamcrest.all.version>
		<hamcrest.core.version>${hamcrest.all.version}</hamcrest.core.version>
		<hamcrest.version>${hamcrest.all.version}</hamcrest.version>
		<hessian.version>4.0.51</hessian.version>
		<!--<hibernate.annotations.version>3.3.1.GA</hibernate.annotations.version>-->
		<hibernate.annotations.version>3.4.0.GA</hibernate.annotations.version>
		<!-- works with hibernate.core.version 3.3.2.GA -->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--OK <hibernate.commons.annotations.version>4.0.1.Final</hibernate.commons.annotations.version>-->
		<!-- works with hibernate.core.version 4.1.8.Final -->
		<hibernate.common.commons.annotations.version>4.0.1.Final</hibernate.common.commons.annotations.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<hibernate.commons.annotations.version>3.3.0.ga</hibernate.commons.annotations.version>-->
		<!-- Do not use 3.3.0.ga See https://jira.springsource.org/browse/SPR-7701, http://forum.springsource.org/showthread.php?89693-AnnotationSessionFactoryBean-needs-MetadataProvider -->
		<hibernate.commons.annotations.version>3.2.0.Final</hibernate.commons.annotations.version>
		<!-- https://community.jboss.org/wiki/HibernateCompatibilityMatrix -->
		<!--<hibernate3.version>3.6.8.Final</hibernate3.version>-->
		<!-- for hibernate-core and hibernate-entitymanager -->
		<!--OK <hibernate.core.version>3.3.2.GA</hibernate.core.version>-->
		<!--<hibernate.core.version>3.6.8.Final</hibernate.core.version>-->
		<hibernate.core.version>4.2.0.Final</hibernate.core.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<hibernate.ehcache.version>4.1.1.Final</hibernate.ehcache.version>-->
		<hibernate.ehcache.version>4.2.0.Final</hibernate.ehcache.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<hibernate.entitymanager.version>${hibernate.core.version}</hibernate.entitymanager.version>
		<!--<hibernate.infinispan.version>${hibernate.core.version}</hibernate.infinispan.version>-->
		<!--OK <hibernate.infinispan.version>3.6.8.Final</hibernate.infinispan.version>-->
		<hibernate.infinispan.version>${hibernate.core.version}</hibernate.infinispan.version>
		<!-- for hibernate-jpa-2.0-api -->
		<hibernate.jpa.api.version>${hibernate.jpa20.api.version}</hibernate.jpa.api.version>
		<!-- for hibernate-jpa-2.1-api -->
		<hibernate.jpa20.api.version>1.0.1.Final</hibernate.jpa20.api.version>
		<hibernate.jpa21.api.version>1.0.0.Final</hibernate.jpa21.api.version>
		<!--<hibernate.jpamodelgen.version>1.1.1.Final</hibernate.jpamodelgen.version>-->
		<!--<hibernate.jpamodelgen.version>1.2.0.Final</hibernate.jpamodelgen.version>-->
		<hibernate.jpamodelgen.version>4.3.6.Final</hibernate.jpamodelgen.version>
		<hibernate.legacy.core.version>3.3.2.GA</hibernate.legacy.core.version>
		<!-- TODO TEST ME <hibernate.legacy.core.version>3.6.10.Final</hibernate.legacy.core.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--OK 3.3.2.GA <hibernate.legacy.entitymanager.version>${hibernate.legacy.core.version}</hibernate.legacy.entitymanager.version>-->
		<hibernate.legacy.entitymanager.version>3.4.0.GA</hibernate.legacy.entitymanager.version>
		<hibernate.legacy.search.version>3.1.1.GA</hibernate.legacy.search.version>
		<!--<hibernate.legacy.validator.version>3.1.0.GA</hibernate.legacy.validator.version>-->
		<!-- works with hibernate.core.version 3.3.2.GA -->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<hibernate.legacy.validator.version>4.1.0.Final</hibernate.legacy.validator.version>
		<!--OK <hibernate.version>3.2.6.ga</hibernate.version> TODO REMOVE-->
		<hibernate.legacy.version>3.2.7.ga</hibernate.legacy.version>
		<hibernate.search.version>4.3.0.Final</hibernate.search.version>
		<hibernate.tools.version>3.2.0.ga</hibernate.tools.version>
		<!--<hibernate.validator.legacy.version>3.1.0.GA</hibernate.validator.legacy.version>-->
		<hibernate.validator.legacy.version>4.0.2.GA</hibernate.validator.legacy.version>
		<!-- works with hibernate.core.version 3.3.2.GA -->
		<!--<hibernate.validator.version>4.0.2.GA</hibernate.validator.version>-->
		<!-- works with hibernate.core.version 3.6.8.GA -->
		<!--<hibernate.validator.version>4.3.0.Final</hibernate.validator.version>-->
		<!-- works with hibernate.core.version 4.1.8.Final -->
		<!--<hibernate.validator.version>4.3.1.Final</hibernate.validator.version>-->
		<!-- works with hibernate.core.version 4.1.8.Final -->
		<hibernate.validator.version>4.2.0.Final</hibernate.validator.version>
		<!--<hibernate3.maven.plugin.version>3.0</hibernate3.maven.plugin.version>-->
		<hibernate3.maven.plugin.version>2.2</hibernate3.maven.plugin.version>
		<!-- TODO fix env setting for overrided home.dir -->
		<!--<home.dir>${env.HOME}</home.dir>
                <home.dir>C:\workspace\users\albandri10</home.dir>
                -->
		<home.dir>${env.WORKSPACE}</home.dir>
		<htmlunit.version>1.11</htmlunit.version>
		<!--  groovy-eclipse 2.9.2 only support 2.4.8 -->
		<http.builder.version>0.6</http.builder.version>
		<httpclient.version>4.5.6</httpclient.version>
		<httpcore.version>4.4.10</httpcore.version>
		<!--<httpcore.version>4.2.3</httpcore.version>-->
		<httpunit.version>1.7</httpunit.version>
		<ibatis.version>2.3.0</ibatis.version>
		<icefaces.version>1.8.2</icefaces.version>
		<ilog-elixir.version>3.0.21588</ilog-elixir.version>
		<inject.version>1</inject.version>
		<isorelax.version>1.0</isorelax.version>
		<itext.version>4.2.2</itext.version>
		<!--<itext.version>2.1.7</itext.version>-->
		<izpack.compiler.version>${izpack.version}</izpack.compiler.version>
		<izpack.standalone.compiler.version>4.3.5</izpack.standalone.compiler.version>
		<!--<izpack.version>5.0.0-rc4</izpack.version> buggy version-->
		<!-- <izpack.version>5.0.6</izpack.version> OK -->
		<!--<izpack.version>5.0.0-beta11</izpack.version> TESTED OK-->
		<izpack.version>5.0.10</izpack.version>
		<jackson.version>1.9.13</jackson.version>
		<jacoco.agent.version>${jacoco.version}</jacoco.agent.version>
		<jacoco.version>0.8.5</jacoco.version>
		<!-- Hibernate Search does not work with Lucene 2.9.4 3.0.0 -->
		<jakarta.httpcore.version>4.0-alpha4</jakarta.httpcore.version>
		<jarjar.version>0.6</jarjar.version>
		<javassist.version>3.12.1.GA</javassist.version>
		<javax.activation.version>1.1.1</javax.activation.version>
		<javax.annotation.api>1.2</javax.annotation.api>
		<javax.ejb.api.version>3.0</javax.ejb.api.version>
		<javax.j2ee.version>1.3.1</javax.j2ee.version>
		<javax.jms.version>1.1</javax.jms.version>
		<javax.mail.version>1.5.0-b01</javax.mail.version>
		<javax.persistence.version>1.0.2</javax.persistence.version>
		<!-- jetty 8 migration implies migrate to servlet api 3. The official maven
                artifact name changed to javax.servlet:javax.servlet-api:3.0.1 -->
		<javax.servlet.api.version>4.0.1</javax.servlet.api.version>
		<javax.stax.api.version>1.0-2</javax.stax.api.version>
		<javax.transaction.version>1.1</javax.transaction.version>
		<javax.websocket.api>1.0</javax.websocket.api>
		<javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>
		<jaws.version>1.0</jaws.version>
		<jaxb.api.version>${jaxb.version}</jaxb.api.version>
		<jaxb.core.version>${jaxb.version}</jaxb.core.version>
		<jaxb.impl.version>${jaxb.version}</jaxb.impl.version>
		<jaxb.version>2.2.11</jaxb.version>
		<jaxen.version>1.1.4</jaxen.version>
		<jaxrs.doclet.version>0.0.4-SNAPSHOT</jaxrs.doclet.version>
		<jaxws.rt.version>2.2.8</jaxws.rt.version>
		<jaxws.tools.version>2.2.5</jaxws.tools.version>
		<jboss.annotations.api.spec.version>1.0.0.Final</jboss.annotations.api.spec.version>
		<jboss.annotations.ejb3.version>4.2.3.GA</jboss.annotations.ejb3.version>
		<jboss.cache.version>1.4.1.SP9</jboss.cache.version>
		<jboss.common.core.version>2.2.20.GA</jboss.common.core.version>
		<jboss.common.version>2.0.4.GA</jboss.common.version>
		<jboss.dist.path>${env.JBOSS_HOME}</jboss.dist.path>
		<jboss.ejb.api.spec.version>1.0.1.Final</jboss.ejb.api.spec.version>
		<jboss.ejb3.persistence.version>4.0.5-GA</jboss.ejb3.persistence.version>
		<jboss.el.version>1.0_02.CR6</jboss.el.version>
		<jboss.embeddable.version>1.0.0.Alpha9</jboss.embeddable.version>
		<jboss.interceptors.api.spec.version>1.0.0.Final</jboss.interceptors.api.spec.version>
		<jboss.jaxrs.api.spec.version>1.0.0.Final</jboss.jaxrs.api.spec.version>
		<!-- <jboss.logging.version>3.1.0.GA</jboss.logging.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<jboss.logging.version>3.1.2.GA</jboss.logging.version>
		<jboss.microcontainer.version>alpha_9</jboss.microcontainer.version>
		<jboss.version>${jboss4.version}</jboss.version>
		<jboss4.version>4.2.2.GA</jboss4.version>
		<jboss5.version>5.1.0.GA</jboss5.version>
		<jboss7.version>7.2.0.Final</jboss7.version>
		<jbossall.client.version>${jboss4.version}</jbossall.client.version>
		<jbossws.client.version>2.0.1.SP2</jbossws.client.version>
		<jbossws.framework.version>3.0.1-GA</jbossws.framework.version>
		<jbossws.native.client.version>3.2.0.GA</jbossws.native.client.version>
		<jbpm.bom.version>7.34.0.Final</jbpm.bom.version>
		<jbpm.identity.version>3.3.1</jbpm.identity.version>
		<jbpm.jpdl.version>3.2.3</jbpm.jpdl.version>
		<!--<jbpm.version>3.3.1.GA</jbpm.version>-->
		<jbpm.version>7.34.0.Final</jbpm.version>
		<jcip.annotations.version>1.0-1</jcip.annotations.version>
		<jdbc.derby.version>10.14.1.0</jdbc.derby.version>
		<!--TODO same as jdbc.sybase.version <jconn.version>6.0</jconn.version>-->
		<jdbc.h2.version>1.4.190</jdbc.h2.version>
		<jdbc.hsqldb.version>1.8.0.10</jdbc.hsqldb.version>
		<!-- deprecated, please move to above org.hsqldb -->
		<!--<jconnect.version>6.0.5.26312</jconnect.version>-->
		<!--<jdbc.jconnect.version>7.0.7</jdbc.jconnect.version>-->
		<jdbc.jtds.version>1.3.1</jdbc.jtds.version>
		<jdbc.mysql.version>6.0.6</jdbc.mysql.version>
		<jdbc.oracle.version>10.2.0.4.0</jdbc.oracle.version>
		<jdbc.org.hsqldb.version>2.4.0</jdbc.org.hsqldb.version>
		<jdbc.postgresql.version>9.3-1102.jdbc41</jdbc.postgresql.version>
		<jdbc.sybase.version>7.0.7</jdbc.sybase.version>
		<!-- TODO overrided in filter -->
		<jdkLevel>1.8</jdkLevel>
		<jdkVersion>1.8.0</jdkVersion>
		<jersey.bom.version>${jersey.version}</jersey.bom.version>
		<jersey.version>2.22</jersey.version>
		<jersey1.version>1.19</jersey1.version>
		<jettison.version>1.3.8</jettison.version>
		<jetty.runner.version>${jetty8.version}</jetty.runner.version>
		<!-- 9.3.3.v20150827 required java8 -->
		<jetty.version>${jetty9.version}</jetty.version>
		<jetty.websocket.version>${jetty8.version}</jetty.websocket.version>
		<jetty6.version>6.1.25</jetty6.version>
		<jetty7.version>7.6.5.v20120716</jetty7.version>
		<!-- 7.6.3.v20120416 TODO remove jetty 6 -->
		<jetty8.version>8.1.15.v20140411</jetty8.version>
		<!-- version of jetty used by cxf 2.7.14 -->
		<jetty9.version>9.2.5.v20141112</jetty9.version>
		<jfree.jcommon.version>1.0.16</jfree.jcommon.version>
		<jfreechart-demo.version>1.0.13</jfreechart-demo.version>
		<!--<jfreechart.version>1.0.7</jfreechart.version>-->
		<jfreechart.version>1.0.13</jfreechart.version>
		<jline.version>2.14.4</jline.version>
		<jmdns.version>1.0</jmdns.version>
		<!-- googlecode.jmockit moved to org.jmockit -->
		<jmockit.version>1.38</jmockit.version>
		<joda.time.version>2.9.9</joda.time.version>
		<jpa.version>1.0</jpa.version>
		<jsf.api.version>${jsf.version}</jsf.api.version>
		<!--<org.apache.myfaces.trinidad.version>2.0.0</org.apache.myfaces.trinidad.version>-->
		<jsf.facelets.version>1.1.15</jsf.facelets.version>
		<jsf.impl.version>${jsf.version}</jsf.impl.version>
		<jsf.version>1.2_15</jsf.version>
		<json.lib.version>2.3</json.lib.version>
		<json4s.version>3.3.0.RC2</json4s.version>
		<!--<jsonassert.version>1.2.3</jsonassert.version>-->
		<jsonassert.version>1.5.0</jsonassert.version>
		<jsp.api.version>2.2.1-b03</jsp.api.version>
		<jsp.version>2.0</jsp.version>
		<jspc.compiler.tomcat6.version>2.0-alpha-3</jspc.compiler.tomcat6.version>
		<jsr305.version>3.0.2</jsr305.version>
		<!-- works with cxf 2.7.14 -->
		<jsr311.api.version>1.1.1</jsr311.api.version>
		<jstl.version>1.2</jstl.version>
		<jtidy.version>4aug2000r7-dev-hudson-1</jtidy.version>
		<!--<junit.version>4.12</junit.version> does not work in visma -->
		<junit.version>4.12</junit.version>
		<junitperf.version>1.9.1</junitperf.version>
		<!--<lifecycle.mapping.version>1.0.0-RC1</lifecycle.mapping.version> eclipse is complaining-->
		<lifecycle.mapping.version>1.0.0</lifecycle.mapping.version>
		<log4j.version>1.2.17</log4j.version>
		<log4jdbc.remix.version>0.2.7</log4jdbc.remix.version>
		<logback.version>1.1.7</logback.version>
		<lombok.version>1.16.20</lombok.version>
		<lucene.version>3.6.2</lucene.version>
		<maven.animal.sniffer.plugin.version>1.18</maven.animal.sniffer.plugin.version>
		<maven.ant.plugin.version>2.4</maven.ant.plugin.version>
		<!--<maven.antlr3.plugin.version>3.1.1.2</maven.antlr3.plugin.version>-->
		<maven.antlr3.plugin.version>${org.antlr.version}</maven.antlr3.plugin.version>
		<!-- maybe needed to be downgraded <maven.release.plugin.version>2.3.2</maven.release.plugin.version>-->
		<maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
		<maven.apache.rat.plugin.version>0.11</maven.apache.rat.plugin.version>
		<maven.apt.plugin.version>1.0-alpha-5</maven.apt.plugin.version>
		<maven.archetype.plugin.version>3.0.1</maven.archetype.plugin.version>
		<maven.archiver.plugin.version>2.5</maven.archiver.plugin.version>
		<maven.artifact.plugin.version>${maven.version}</maven.artifact.plugin.version>
		<maven.aspectj.plugin.version>1.11</maven.aspectj.plugin.version>
		<maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
		<maven.axistools.plugin.version>1.4</maven.axistools.plugin.version>
		<maven.bees.plugin.version>1.3.2</maven.bees.plugin.version>
		<maven.benerator.plugin.version>0.7.7</maven.benerator.plugin.version>
		<!--<maven.build.helper.plugin.version>1.12</maven.build.helper.plugin.version>-->
		<maven.build.helper.plugin.version>3.0.0</maven.build.helper.plugin.version>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<maven.buildmetadata.plugin.version>1.1.5</maven.buildmetadata.plugin.version>
		<maven.buildnumber.plugin.version>1.4</maven.buildnumber.plugin.version>
		<maven.bundle.plugin.version>4.2.0</maven.bundle.plugin.version>
		<maven.cargo.maven2.plugin.version>${cargo.core.uberjar.version}</maven.cargo.maven2.plugin.version>
		<maven.changelog.plugin.version>2.3</maven.changelog.plugin.version>
		<maven.changes.plugin.version>2.12</maven.changes.plugin.version>
		<maven.checkmarx.plugin.version>9.00.2</maven.checkmarx.plugin.version>
		<!--<maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>-->
		<maven.checkstyle.plugin.version>3.0.0</maven.checkstyle.plugin.version>
		<maven.classpath.fitnesse.version>1.7</maven.classpath.fitnesse.version>
		<maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
		<maven.cli.plugin.version>1.0.11</maven.cli.plugin.version>
		<maven.clirr.plugin.version>2.8</maven.clirr.plugin.version>
		<maven.clover.plugin.version>${clover.version}</maven.clover.plugin.version>
		<maven.cobertura.plugin.version>2.7</maven.cobertura.plugin.version>
		<maven.codenarc.plugin.version>0.22-1</maven.codenarc.plugin.version>
		<maven.compiler.debug>true</maven.compiler.debug>
		<maven.compiler.fork>false</maven.compiler.fork>
		<maven.compiler.optimize>false</maven.compiler.optimize>
		<!--<maven.compiler.plugin.version>3.2</maven.compiler.plugin.version> issue with jpamodelgen-->
		<!--<maven.compiler.plugin.version>3.6.2</maven.compiler.plugin.version> OK-->
		<!--<maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version> OK -->
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.compiler.source>${jdkLevel}</maven.compiler.source>
		<maven.compiler.target>${jdkLevel}</maven.compiler.target>
		<maven.cxx.plugin.version>0.0.5-SNAPSHOT</maven.cxx.plugin.version>
		<maven.dashboard.plugin.version>1.0.0-beta-1</maven.dashboard.plugin.version>
		<maven.dbunit.plugin.version>1.0-beta-3</maven.dbunit.plugin.version>
		<maven.default.skin.version>1.2</maven.default.skin.version>
		<maven.dependency.check.plugin.version>5.3.0</maven.dependency.check.plugin.version>
		<maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
		<maven.dependencypath.plugin.version>1.1.1</maven.dependencypath.plugin.version>
		<maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
		<maven.directory.plugin>0.1</maven.directory.plugin>
		<maven.doap.plugin.version>1.2</maven.doap.plugin.version>
		<maven.docbkx.plugin.version>2.0.8</maven.docbkx.plugin.version>
		<!--<maven.ear.plugin.version>2.9.1</maven.ear.plugin.version>-->
		<maven.ear.plugin.version>2.10.1</maven.ear.plugin.version>
		<maven.eclipse.plugin.version>2.10</maven.eclipse.plugin.version>
		<maven.ejb.plugin.version>2.5.1</maven.ejb.plugin.version>
		<maven.emma.plugin.version>1.0-alpha-3</maven.emma.plugin.version>
		<maven.enforcer.extra.plugin.version>1.0-beta-6</maven.enforcer.extra.plugin.version>
		<maven.enforcer.no.package.cycles.plugin.version>1.0.5</maven.enforcer.no.package.cycles.plugin.version>
		<maven.enforcer.plugin.version>1.4.1</maven.enforcer.plugin.version>
		<maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
		<maven.fabric8-docker-maven.plugin.version>0.26.1</maven.fabric8-docker-maven.plugin.version>
		<maven.failsafe.plugin.version>${maven.surefire.plugin.version}</maven.failsafe.plugin.version>
		<maven.findbugs.plugin.version>3.0.5</maven.findbugs.plugin.version>
		<maven.flex.pmd.plugin.version>1.2</maven.flex.pmd.plugin.version>
		<maven.flexmojos.plugin.version>4.2-beta</maven.flexmojos.plugin.version>
		<maven.frontend.plugin.version>1.9.1</maven.frontend.plugin.version>
		<maven.gae.plugin.version>0.7.3</maven.gae.plugin.version>
		<maven.gatling.plugin.version>${gatling.version}</maven.gatling.plugin.version>
		<maven.git-commit-id.plugin.version>2.2.4</maven.git-commit-id.plugin.version>
		<maven.gmaven.plugin.version>1.5</maven.gmaven.plugin.version>
		<maven.gmavenplus.plugin.version>1.8.1</maven.gmavenplus.plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<maven.groovy.plugin.version>1.5</maven.groovy.plugin.version>
		<maven.grunt.plugin.version>1.5.1</maven.grunt.plugin.version>
		<maven.gui.plugin.version>1.0</maven.gui.plugin.version>
		<maven.gwt.plugin.version>${gwt.version}</maven.gwt.plugin.version>
		<maven.h2.plugin.version>1.0</maven.h2.plugin.version>
		<maven.help.plugin.version>3.1.0</maven.help.plugin.version>
		<!--<maven.hotdeploy.plugin.version>0.3.3</maven.hotdeploy.plugin.version>-->
		<maven.idea.plugin.version>2.3-20100704</maven.idea.plugin.version>
		<maven.install.plugin.version>2.5.2</maven.install.plugin.version>
		<maven.invoker.plugin.version>3.1.0</maven.invoker.plugin.version>
		<maven.izpack.plugin.version>5.1.3</maven.izpack.plugin.version>
		<maven.jacoco.gwt.plugin.version>0.5.4.201202141554</maven.jacoco.gwt.plugin.version>
		<!--TODO <maven.jacoco.plugin.version>${jacoco.version}</maven.jacoco.plugin.version>-->
		<!-- http://stackoverflow.com/questions/30459260/jacoco-sonarqube-incompatible-version-1007 -->
		<maven.jacoco.plugin.version>${jacoco.version}</maven.jacoco.plugin.version>
		<maven.jalopy.plugin.version>1.0-alpha-1</maven.jalopy.plugin.version>
		<!--<maven.jar.plugin.version>2.4</maven.jar.plugin.version> does not work in eclipse org.codehaus.plexus.archiver.jar.Manifest.merge(org.codehaus.plexus.archiver.jar.Manifest) see : http://dev.eclipse.org/mhonarc/lists/m2e-users/msg02273.html-->
		<maven.jar.plugin.version>3.1.0</maven.jar.plugin.version>
		<maven.java.formatter.plugin.version>0.4</maven.java.formatter.plugin.version>
		<maven.javadoc.plugin.version>3.0.1</maven.javadoc.plugin.version>
		<maven.javadoc.skip>false</maven.javadoc.skip>
		<maven.javancss.plugin.version>2.1</maven.javancss.plugin.version>
		<maven.jaxb.plugin.version>1.1.1</maven.jaxb.plugin.version>
		<maven.jaxb2.plugin.version>0.11.0</maven.jaxb2.plugin.version>
		<maven.jaxrs.analyzer.plugin.version>0.17</maven.jaxrs.analyzer.plugin.version>
		<maven.jaxws.plugin.version>2.2</maven.jaxws.plugin.version>
		<maven.jboss.as.plugin.version>7.9.Final</maven.jboss.as.plugin.version>
		<maven.jboss.packaging.plugin.version>2.2</maven.jboss.packaging.plugin.version>
		<!--<maven.jboss.plugin.version>1.4.1</maven.jboss.plugin.version>-->
		<!-- only version 1.4.1 supports hard deploying multiple files -->
		<maven.jboss.plugin.version>1.5.1</maven.jboss.plugin.version>
		<maven.jdepend.plugin.version>2.0</maven.jdepend.plugin.version>
		<!-- TODO remove or 7.0.0.pre5-->
		<!--<maven.jetty.eclipse.plugin.version>9.3.0.M1</maven.jetty.eclipse.plugin.version>-->
		<maven.jetty.eclipse.plugin.version>${jetty9.version}</maven.jetty.eclipse.plugin.version>
		<maven.jetty.mortbay.plugin.version>${jetty.version}</maven.jetty.mortbay.plugin.version>
		<maven.jmeter.analysis.plugin.version>1.0.6</maven.jmeter.analysis.plugin.version>
		<!--<maven.jmeter.plugin.version>2.1.0</maven.jmeter.plugin.version> -->
		<maven.jmeter.graph.plugin.version>0.1.0</maven.jmeter.graph.plugin.version>
		<maven.jmeter.plugin.version>1.10.1</maven.jmeter.plugin.version>
		<maven.jrebel.plugin.version>1.1.10</maven.jrebel.plugin.version>
		<maven.js.plugin.version>1.3.1</maven.js.plugin.version>
		<maven.jspc.plugin.version>2.0-alpha-3</maven.jspc.plugin.version>
		<maven.jstools.plugin.version>0.7</maven.jstools.plugin.version>
		<maven.jxr.plugin.version>2.5</maven.jxr.plugin.version>
		<maven.karma.plugin.version>1.8</maven.karma.plugin.version>
		<maven.license.plugin.version>1.10.b1</maven.license.plugin.version>
		<!--<maven.jdeps.plugin.version>3.0-SNAPSHOT</maven.jdeps.plugin.version>-->
		<maven.marschall.jdeps.plugin.version>0.4.2</maven.marschall.jdeps.plugin.version>
		<maven.mem.tracker.maven.plugin.version>1.0.0</maven.mem.tracker.maven.plugin.version>
		<!--<maven.minify.plugin.version>1.7.6</maven.minify.plugin.version>-->
		<maven.minify.plugin.version>1.3.5.1</maven.minify.plugin.version>
		<maven.native2ascii.maven.plugin.version>1.0-beta-1</maven.native2ascii.maven.plugin.version>
		<maven.nbm.plugin.version>3.14-bitstrings-1-SNAPSHOT</maven.nbm.plugin.version>
		<maven.nexus.staging.plugin.version>1.6.8</maven.nexus.staging.plugin.version>
		<maven.one.plugin.version>1.3</maven.one.plugin.version>
		<maven.org.liquibase.plugin.version>3.8.6</maven.org.liquibase.plugin.version>
		<maven.patch.plugin.version>1.2</maven.patch.plugin.version>
		<maven.pax.plugin.version>1.6.0</maven.pax.plugin.version>
		<maven.pitest.plugin.version>1.5.0</maven.pitest.plugin.version>
		<maven.plexus.util.plugin.version>1.1</maven.plexus.util.plugin.version>
		<maven.plugin.api.plugin.version>${maven.version}</maven.plugin.api.plugin.version>
		<maven.plugin.plugin.plugin.version>3.5</maven.plugin.plugin.plugin.version>
		<maven.pmd.plugin.version>3.10.0</maven.pmd.plugin.version>
		<maven.processor.plugin.version>3.3.3</maven.processor.plugin.version>
		<maven.proguard.plugin.version>2.0.14</maven.proguard.plugin.version>
		<maven.project.info.reports.plugin.version>2.9</maven.project.info.reports.plugin.version>
		<!-- Plugin version definitions -->
		<maven.project.version>3.0-alpha-2</maven.project.version>
		<maven.properties.plugin.version>1.0.0</maven.properties.plugin.version>
		<maven.qalab.plugin.version>2.2</maven.qalab.plugin.version>
		<maven.rar.plugin.version>2.4</maven.rar.plugin.version>
		<maven.rat.plugin.version>1.0-alpha-3</maven.rat.plugin.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<maven.remote.resources.plugin.version>1.5</maven.remote.resources.plugin.version>
		<maven.replacer.plugin.version>1.4.1</maven.replacer.plugin.version>
		<maven.repository.plugin.version>2.4</maven.repository.plugin.version>
		<maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
		<maven.sablecc.plugin.version>2.2</maven.sablecc.plugin.version>
		<maven.scala.plugin.version>3.2.2</maven.scala.plugin.version>
		<maven.scalatest.plugin.version>1.0</maven.scalatest.plugin.version>
		<maven.scm.plugin.version>1.10.0</maven.scm.plugin.version>
		<maven.scm.provider.jgit.version>1.9.5</maven.scm.provider.jgit.version>
		<maven.selenium.plugin.version>2.3</maven.selenium.plugin.version>
		<maven.shade.plugin.version>3.1.1</maven.shade.plugin.version>
		<maven.shared.jar.version>1.0</maven.shared.jar.version>
		<maven.site.github.plugin.version>0.12</maven.site.github.plugin.version>
		<!--<maven.site.old.plugin.version>2.3</maven.site.old.plugin.version>-->
		<maven.site.plugin.version>3.8.2</maven.site.plugin.version>
		<maven.sonar.plugin.version>3.7.0.1746</maven.sonar.plugin.version>
		<maven.sonar.report.plugin.version>2.2.1</maven.sonar.report.plugin.version>
		<maven.sortpom.google.plugin.version>2.3.1</maven.sortpom.google.plugin.version>
		<maven.sortpom.plugin.version>2.11.0</maven.sortpom.plugin.version>
		<!--
                <maven.downloads.github.plugin.version>0.6</maven.downloads.github.plugin.version>
                -->
		<maven.source.plugin.version>3.0.1</maven.source.plugin.version>
		<maven.spotbugs.plugin.version>3.1.12.2</maven.spotbugs.plugin.version>
		<maven.sql.plugin.version>1.5</maven.sql.plugin.version>
		<maven.surefire.plugin.version>2.21.0</maven.surefire.plugin.version>
		<maven.surefire.report.plugin.version>${maven.surefire.plugin.version}</maven.surefire.report.plugin.version>

		<maven.swagger.plugin.version>3.1.8</maven.swagger.plugin.version>
		<maven.taglist.plugin.version>2.4</maven.taglist.plugin.version>
		<maven.tattletale.plugin.version>1.2.0.Beta2</maven.tattletale.plugin.version>
		<maven.test.failure.skip>true</maven.test.failure.skip>
		<maven.test.it.skip>${maven.test.skip}</maven.test.it.skip>
		<maven.test.skip>false</maven.test.skip>
		<maven.test.ut.skip>${maven.test.skip}</maven.test.ut.skip>
		<maven.tomcat.plugin.version>1.2-SNAPSHOT</maven.tomcat.plugin.version>
		<maven.tomcat7.plugin.version>2.2</maven.tomcat7.plugin.version>
		<maven.toolchains.plugin.version>3.0.0</maven.toolchains.plugin.version>
		<maven.torque.plugin.version>3.3-RC2</maven.torque.plugin.version>
		<maven.vaadin.plugin.version>8.4.3</maven.vaadin.plugin.version>
		<maven.verifier.plugin.version>1.1</maven.verifier.plugin.version>
		<!--<maven.version>2.2.1</maven.version>
        <maven.version>3.0.4</maven.version>
        -->
		<maven.version>3.3.9</maven.version>
		<maven.versioneye.plugin.version>3.11.4</maven.versioneye.plugin.version>
		<maven.versions.plugin.version>2.7</maven.versions.plugin.version>
		<maven.war.plugin.version>3.2.2</maven.war.plugin.version>
		<maven.whitesource.plugin.version>19.5.1</maven.whitesource.plugin.version>
		<maven.wro4j.plugin.version>1.8.0</maven.wro4j.plugin.version>
		<maven.xdoclet.plugin.version>1.0</maven.xdoclet.plugin.version>
		<maven.xml.plugin.version>1.0.2</maven.xml.plugin.version>
		<maven.zap.plugin.version>1.2-SNAPSHOT</maven.zap.plugin.version>
		<mimepull.version></mimepull.version>
		<mockito.version>1.10.19</mockito.version>
		<!-- WARNING jmockit does not work wit jacoco coverage -->
		<mockrunner.version>1.0.0</mockrunner.version>
		<mongo.version>3.6.3</mongo.version>
		<mq.version>1.0</mq.version>
		<msv.version>1.0</msv.version>
		<!--<myfaces.version>1.2.11</myfaces.version> does not work-->
		<!--<myfaces.version>2.1.13</myfaces.version>-->
		<myfaces.extval.version>1.2.5</myfaces.extval.version>
		<!--<richfaces.version>3.3.3.Final</richfaces.version>-->
		<myfaces.version>1.2.9</myfaces.version>
		<neethi.version>3.0.3</neethi.version>
		<nekohtml.version>1.9.12</nekohtml.version>
		<net.sf.hibernate.version>2.1.8</net.sf.hibernate.version>
		<net.sf.proguard.version>5.1</net.sf.proguard.version>
		<net.sourceforge.nekohtml.version>1.9.22</net.sourceforge.nekohtml.version>
		<netty.version>3.8.0.Final</netty.version>
		<newrelic.version>3.47.0</newrelic.version>
		<node.version>8.5.0</node.version>
		<!--<npm.version>4.2.0</npm.version>-->
		<!--<node.version>7.8.0</node.version>-->
		<!--<npm.version>5.4.2</npm.version>-->
		<npm.version>5.6.0</npm.version>
		<objectify.version>4.0b1</objectify.version>
		<odmg.version>3.0</odmg.version>
		<ojdbc.oracle.version>1.4</ojdbc.oracle.version>
		<opencsv.version>2.1</opencsv.version>
		<openejb.core.version>3.1.4</openejb.core.version>
		<!--<org.mvel.mvel2.version>2.1.9.Final</org.mvel.mvel2.version>-->
		<openejb.javaee.api.version>5.0-3</openejb.javaee.api.version>
		<openjpa.all.version>0.9.7-incubating-SNAPSHOT</openjpa.all.version>
		<openjpa.version>1.2.1</openjpa.version>
		<org.antlr.version>3.5.2</org.antlr.version>
		<!--<myfaces.extval.version>2.0.5</myfaces.extval.version>-->
		<org.apache.myfaces.tomahawk.version>1.1.11</org.apache.myfaces.tomahawk.version>
		<org.apache.myfaces.trinidad.version>1.2.14</org.apache.myfaces.trinidad.version>
		<org.apache.poi.version>3.17</org.apache.poi.version>
		<org.assertj.version>3.4.1</org.assertj.version>
		<org.beanshell.bsh.version>2.0b5</org.beanshell.bsh.version>
		<org.ehcache.version>3.4.0</org.ehcache.version>
		<org.javassist.version>3.20.0-GA</org.javassist.version>
		<!--<org.jboss.arquillian.version>1.1.9.Final</org.jboss.arquillian.version>-->
		<!-- NOK <org.jboss.arquillian.version>1.1.4.Final</org.jboss.arquillian.version> NOK with 1.1.4.Final java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor -->
		<!-- NOK with 1.1.0.Final <org.jboss.arquillian.bom.version>${org.jboss.arquillian.version}</org.jboss.arquillian.bom.version>-->
		<org.jboss.arquillian.bom.version>${org.jboss.arquillian.version}</org.jboss.arquillian.bom.version>
		<org.jboss.arquillian.core.version>${org.jboss.arquillian.version}</org.jboss.arquillian.core.version>
		<!--<org.jboss.arquillian.glassfish.embedded.version>1.0.0.CR3</org.jboss.arquillian.glassfish.embedded.version>-->
		<org.jboss.arquillian.glassfish.embedded.version>2.1.0.Beta1</org.jboss.arquillian.glassfish.embedded.version>
		<org.jboss.arquillian.jacoco.version>1.0.0.Alpha8</org.jboss.arquillian.jacoco.version>
		<org.jboss.arquillian.jetty.embedded.version>1.0.0.CR3</org.jboss.arquillian.jetty.embedded.version>
		<org.jboss.arquillian.jsfunit.version>1.0.0.Alpha4.SP1</org.jboss.arquillian.jsfunit.version>
		<!-- WARNING shrinkwrap-descriptors-spi 2.0.0 with DescriptorImporterBase class and shrinkwrap-descriptors-api-base with DescriptorImporter interface are incompatible with shrinkwrap-descriptors-api 0.1.7 DescriptorImporter interface because the latter lacks the fromStream method. -->
		<org.jboss.arquillian.junit.version>${org.jboss.arquillian.bom.version}</org.jboss.arquillian.junit.version>
		<org.jboss.arquillian.tomcat.embedded.version>1.0.1.Final</org.jboss.arquillian.tomcat.embedded.version>
		<!--<org.jboss.arquillian.version>1.1.0.Final</org.jboss.arquillian.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--OK<org.jboss.arquillian.version>1.0.0.CR7</org.jboss.arquillian.version>-->
		<!--<org.jboss.arquillian.version>1.1.8.Final</org.jboss.arquillian.version>-->
		<org.jboss.arquillian.version>1.3.0.Final</org.jboss.arquillian.version>
		<!--NOK with arq-jbossas-managed <org.jboss.as.arquillian.container.version>7.2.0.Final</org.jboss.as.arquillian.container.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<org.jboss.arquillian.spi.version>1.0.0.Alpha5</org.jboss.arquillian.spi.version>-->
		<org.jboss.arquillian.weld.ee.embedded.version>1.0.0.CR5</org.jboss.arquillian.weld.ee.embedded.version>
		<org.jboss.as.arquillian.container.version>${jboss7.version}</org.jboss.as.arquillian.container.version>
		<!--<org.jboss.bom.jboss.javaee6.with.hibernate.version>1.0.0.Final</org.jboss.bom.jboss.javaee6.with.hibernate.version>-->
		<org.jboss.bom.jboss.javaee6.with.hibernate.version>1.0.7.Final</org.jboss.bom.jboss.javaee6.with.hibernate.version>
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!-- OK <org.jboss.spec.jboss.javaee6.version>1.0.0.Final</org.jboss.spec.jboss.javaee6.version>-->
		<!-- Define the version of Tomcat' Java EE 6 APIs we want to import. Any
                  dependencies from org.jboss.spec will have their version defined by this
                  BOM -->
		<!--<javax.javaee.api.version>6.0</javax.javaee.api.version>-->
		<!-- Alternatively, comment out the above line, and un-comment the line
                  below to use version 3.0.0.Beta1-redhat-1 which is a release certified to
                  work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven
                  repository. -->
		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import.  -->
		<!-- NOK <org.jboss.bom.version>1.0.7.Final</org.jboss.bom.version>-->
		<!--OK <org.jboss.bom.version>1.0.0.M6</org.jboss.bom.version>-->
		<!-- NOK <org.jboss.bom.version>1.0.0.Final</org.jboss.bom.version>-->
		<org.jboss.bom.jboss.javaee6.with.tools.version>1.0.0.M6</org.jboss.bom.jboss.javaee6.with.tools.version>
		<org.jboss.shrinkwrap.bom.version>${version.shrinkwrap_shrinkwrap}</org.jboss.shrinkwrap.bom.version>
		<org.jboss.shrinkwrap.descriptors.bom.version>${version.shrinkwrap_descriptors}</org.jboss.shrinkwrap.descriptors.bom.version>
		<org.jboss.shrinkwrap.resolver.bom.version>${version.shrinkwrap_resolver}</org.jboss.shrinkwrap.resolver.bom.version>
		<org.jboss.shrinkwrap.resolver.version>${org.jboss.shrinkwrap.resolver.bom.version}</org.jboss.shrinkwrap.resolver.version>
		<org.jboss.spec.javax.faces.jsf.api.2.0.version>1.0.0.Final</org.jboss.spec.javax.faces.jsf.api.2.0.version>
		<org.jboss.spec.javax.faces.jsf.api.2.1.version>2.1.28.Final</org.jboss.spec.javax.faces.jsf.api.2.1.version>
		<org.jboss.spec.javax.jboss.el.api.2.2.version>1.0.0.Final</org.jboss.spec.javax.jboss.el.api.2.2.version>
		<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any
                  dependencies from org.jboss.spec will have their version defined by this
                  BOM -->
		<org.jboss.spec.jboss.javaee6.version>3.0.3.Final</org.jboss.spec.jboss.javaee6.version>
		<org.jboss.weld.core.version>1.1.9.Final</org.jboss.weld.core.version>
		<org.jdom.version>1.1.3</org.jdom.version>
		<org.mvel.mvel2.version>2.0.10</org.mvel.mvel2.version>
		<!-- NOK with 1.1.4.Final java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor -->
		<org.openejb.arquillian.tomee.embedded.version>1.7.1</org.openejb.arquillian.tomee.embedded.version>
		<org.quartz.version>2.3.0</org.quartz.version>
		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import.  -->
		<org.richfaces.bom.version>4.3.6.Final</org.richfaces.bom.version>
		<org.umlgraph.doclet.version>5.1</org.umlgraph.doclet.version>
		<org.umlgraph.umlgraph.version>5.6.6</org.umlgraph.umlgraph.version>
		<oro.version>2.0.8</oro.version>
		<oscache.version>2.4.1</oscache.version>
		<owasp.java.html.sanitizer.version>20160924.1</owasp.java.html.sanitizer.version>
		<package.tomcat.zip.version>${tomcat.version}</package.tomcat.zip.version>
		<performancetest.connectTimeout>1000</performancetest.connectTimeout>
		<performancetest.loopCount>5</performancetest.loopCount>
		<performancetest.responseTimeout>3000</performancetest.responseTimeout>
		<!--
                <performancetest.threadCount>20</performancetest.threadCount>
                <performancetest.loopCount>10</performancetest.loopCount>
                -->
		<performancetest.threadCount>5</performancetest.threadCount>
		<performancetest.webservice.host>${cargo.host}</performancetest.webservice.host>
		<performancetest.webservice.path>/</performancetest.webservice.path>
		<performancetest.webservice.port>${cargo.port}</performancetest.webservice.port>
		<plexus.archiver.version>3.5</plexus.archiver.version>
		<plexus.container.default.version>1.7.1</plexus.container.default.version>
		<plexus.util.version>3.1.0</plexus.util.version>
		<poi.version>3.1-FINAL</poi.version>
		<portals.bridges.portletfilter.version>1.0.4</portals.bridges.portletfilter.version>
		<portlet.api.version>1.0</portlet.api.version>
		<!-- issue with clover, use 1.9.5 instead -->
		<!--<mockito.version>1.9.5</mockito.version>-->
		<powermock.mockito.version>1.6.4</powermock.mockito.version>
		<product.branch.version>${env.VERSION}</product.branch.version>
		<product.dependencies>${product.name} ${product.patch.version}</product.dependencies>
		<!-- default value that can be overrided -->
		<product.id>nabla</product.id>
		<product.load.number>${env.EXECUTOR_NUMBER}</product.load.number>
		<product.major.version>${project.version}</product.major.version>
		<product.name>nabla</product.name>
		<product.patch.number>${env.BUILD_NUMBER}</product.patch.number>
		<product.patch.version>${product.status.number}.${product.load.number}.${product.patch.number}</product.patch.version>
		<product.push.number>${env.BUILD_ID}</product.push.number>
		<product.push.version>${product.patch.version}.${product.push.number}</product.push.version>
		<product.sourceDirectory>${home.dir}/${product.name}</product.sourceDirectory>
		<product.status.number>1</product.status.number>
		<product.thirdparty>${env.THIRDPARTY_ROOT}</product.thirdparty>
		<product.title>${product.name} Application : ${env.BUILD_TAG}</product.title>
		<product.username>${env.UNIX_USERNAME}</product.username>
		<product.version>${product.major.version}${product.push.version}</product.version>
		<product.workspace>${product.username}${product.major.version}</product.workspace>
		<!--
                        French Encoding in some files: can't use UTF-8, TODO update source
                        files
                -->
		<!-- Explicitly declaring the source encoding eliminates the following
                  message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
                  resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.svn.path>trunk</project.svn.path>
		<protobuf.version>2.5.0</protobuf.version>
		<protoj.nodep.version>1.9.0</protoj.nodep.version>
		<quartz.version>1.5.2</quartz.version>
		<refresher.version>1.1.0</refresher.version>
		<saaj.api.version>1.3</saaj.api.version>
		<saaj.impl.version>1.3.2</saaj.impl.version>
		<saucelabs.junit.version>2.1.23</saucelabs.junit.version>
		<saucelabs.selenium.version>2.6</saucelabs.selenium.version>
		<saxon.version>8.7</saxon.version>
		<scala.short.version>2.11</scala.short.version>
		<!-- for gatling to work -->
		<scala.suffix>_2.11</scala.suffix>
		<scala.version>2.11.7</scala.version>
		<!--
                <scala.dep.version>${scala-short.version}.6</scala.dep.version>
                <scala.lib.version>${scala-short.version}.6</scala.lib.version>
                -->
		<scalatest.version>2.1.3</scalatest.version>
		<!-- used for dtd in mda -->
		<!--<scm.base>svn:svn://ALBAN-PC/svn/repo/main/user/trunk</scm.base> -->
		<scm.base>scm:git:git://github.com/AlbanAndrieu/nabla.git</scm.base>
		<scope.compile>compile</scope.compile>
		<scope.provided>provided</scope.provided>
		<scope.runtime>runtime</scope.runtime>
		<scope.type>${scope.provided}</scope.type>
		<seam.embedded.version>beta3.SP15</seam.embedded.version>
		<!--<seam.bom.version>3.1.0.Final</seam.bom.version>-->
		<seam.international.version>3.0.0.Alpha1</seam.international.version>
		<seam.utils.version>1.0</seam.utils.version>
		<seam.version>2.3.1.Final</seam.version>
		<selenium.android.driver.version>2.39.0</selenium.android.driver.version>
		<!--Same as Jenkins version -->
		<!--<selenium.version>3.0.1</selenium.version>-->
		<!--<selenium.driver.version>2.9.0</selenium.driver.version>-->
		<selenium.driver.version>${selenium.version}</selenium.driver.version>
		<selenium.firefox.driver.version>${selenium.version}</selenium.firefox.driver.version>
		<selenium.htmlunit.version>2.52.0</selenium.htmlunit.version>
		<selenium.iphone.driver.version>2.39.0</selenium.iphone.driver.version>
		<selenium.safari.driver.version>${selenium.version}</selenium.safari.driver.version>
		<!-- check compatibility http://selenium.googlecode.com/git/java/CHANGELOG -->
		<selenium.version>3.13.0</selenium.version>
		<servlet.api.version>2.5</servlet.api.version>
		<shale.version>1.0.4</shale.version>
		<shiro.version>1.2.5</shiro.version>
		<sitemesh.version>2.2.1</sitemesh.version>
		<!-- see http://repo1.maven.org/maven2/org/slf4j/slf4j-parent/1.7.16/slf4j-parent-1.7.16.pom for compliance with log4j and logback version -->
		<slf4j.version>1.7.25</slf4j.version>
		<!-- -Dsonar.scm.enabled=false -Dsonar.scm-stats.enabled=false -Dissueassignplugin.enabeld=false -Dsonar.pitest.mode=skip -Dsonar.scm.user.secured=false -->
		<!--
        <sonar.branch.name>branch-develop</sonar.branch.name>
        <sonar.branch.target>master</sonar.branch.target>
        -->
		<sonar.build-stability.password.secured>admin</sonar.build-stability.password.secured>
		<sonar.build-stability.url>Jenkins:$BUILD_URL/..</sonar.build-stability.url>
		<sonar.build-stability.username.secured>microsoft</sonar.build-stability.username.secured>
		<!-- The system property jacoco.outputDir needs to be override on the command line
                with an absolute path if you want to merge results from all modules.
                Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
                mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
                Note that unfortunately using the following does not work because of

                http://jira.codehaus.org/browse/SONAR-3427:

                <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
                -->
		<!--<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>-->
		<!-- Jacoco output file for UTs -->
		<!-- <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>-->
		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
		<!-- <sonar.jacoco.reportPaths>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPaths>-->
		<!-- Jacoco output file for ITs -->
		<!--<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>-->
		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
		<!--<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath> -->
		<!--<jacoco.skip>true</jacoco.skip>-->
		<!--<sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>-->
		<!--<sonar.jacoco.excludes>com/nabla/project/application/model/dao/person/**:com/nabla/pack2/**:</sonar.jacoco.excludes>-->
		<sonar.clover.version>${clover.version}</sonar.clover.version>
		<!--<sonar.groovy.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.groovy.cobertura.reportPath>-->
		<sonar.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
		<sonar.cpd.cross_project>true</sonar.cpd.cross_project>
		<sonar.cpd.exclusions>**/generated/**</sonar.cpd.exclusions>
		<sonar.dependencyCheck.reportPath>${basedir}/target/dependency-check-report.xml</sonar.dependencyCheck.reportPath>
		<!--<sonar.exclusions>file:/generated/,**/generated/**</sonar.exclusions>-->
		<!-- see http://docs.codehaus.org/display/SONAR/Narrowing+the+Focus
                http://docs.codehaus.org/display/SONAR/Switch+Off+Violations+Plugin -->
		<!--**/*.xhtml, **/*.html-->
		<sonar.exclusions>test/**, src/test/**, **/generated/**, **/pom.xml, **/bower_components/**, **/node_modules/**, **/node/**, **/libs/**, **/lib/**, **/docs/**, **/*.cache.html, **/*.nocache.js, **/*.min.js, **/*.min.css, **/*.gwt.xml, **/web.xml, **/web-jsf.xml, **/faces-config.xml, **/*.as, **/logback.xml, **/log4j.xml, , **/jetty-*.xml, **/Gruntfile.js, **/lcov-report/**</sonar.exclusions>
		<sonar.findbugs.excludesFilters>*/generated/**</sonar.findbugs.excludesFilters>
		<sonar.findbugs.timeout>1800000</sonar.findbugs.timeout>
		<!-- value in miliseconds = 30 minutes (20 minutes was not enough) -->
		<!--<sonar.jacoco.excludes>**/generated/**,**/*.less,**/*.css</sonar.jacoco.excludes>-->
		<!-- Issue
                Jenkins Sonar Job : CI URL: Jenkins Received 404 when trying to access
                I'm facing the same issue. If it can help, here a workaround: in Jenkins > Manage Jenkins > Configure Global Security, grant Anonymous user to read both Overall and Job.
                -->
		<sonar.github.oauth>06895b871e3f2775b7497e809222be22770d0c05</sonar.github.oauth>
		<sonar.global.exclusions>**/generated/**</sonar.global.exclusions>
		<sonar.groovy.codenarc.reportPath>target/CodeNarcReport.xml</sonar.groovy.codenarc.reportPath>
		<!--<sonar.surefire.reportsPath>${project.build.directory}/clover/surefire-reports</sonar.surefire.reportsPath> -->
		<!--<sonar.host.url>http://home.nabla.mobi:9000</sonar.host.url>-->
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<!--<sonar.sources>src/main/java,src/main/js,src/main/webapp,src/generated/java,src/generated/js, **/web.xml, **/*.xhtml</sonar.sources>-->
		<!-- DO NOT SET below sonar properties for all projects
                <sonar.sources>src/main,app</sonar.sources>
                <sonar.tests>src/test,test</sonar.tests>
                -->
		<!--
        <sonar.issue.ignore.block>e1,e2</sonar.issue.ignore.block>
        <sonar.issue.ignore.block.e1.beginBlockRegexp>@SonarIgnore</sonar.issue.ignore.block.e1.beginBlockRegexp>
        <sonar.issue.ignore.block.e1.endBlockRegexp></sonar.issue.ignore.block.e1.endBlockRegexp>
        <sonar.issue.ignore.block.e2.beginBlockRegexp>Copyright</sonar.issue.ignore.block.e2.beginBlockRegexp>
        <sonar.issue.ignore.block.e2.endBlockRegexp>License 1.0</sonar.issue.ignore.block.e2.endBlockRegexp>
        -->

		<sonar.issue.ignore.allfile>deprecated</sonar.issue.ignore.allfile>
		<sonar.issue.ignore.allfile.deprecated.fileRegexp>@Deprecated</sonar.issue.ignore.allfile.deprecated.fileRegexp>

		<!-- ************************ -->
		<!-- Sonar/Reporting settings -->
		<!-- ************************ -->
		<!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
                because we want to be to able to execute mvn sonar:sonar without passing a profile -->
		<!-- <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin> -->
		<!-- <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin> -->
		<!-- Tells Sonar to use jacoco for coverage results -->
		<!-- Don't let Sonar execute tests. We will ask it to Maven -->
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
		<sonar.jacoco.listeners.version>2.5</sonar.jacoco.listeners.version>
		<sonar.java.target>1.8</sonar.java.target>
		<!--<sonar.javascript.lcov.reportPath>${basedir}/target/lcov*.info</sonar.javascript.lcov.reportPath>-->
		<!--<sonar.javascript.lcov.reportPath>${basedir}/target/lcov.info</sonar.javascript.lcov.reportPath>-->
		<sonar.javascript.forceZeroCoverage>true</sonar.javascript.forceZeroCoverage>
		<sonar.javascript.lcov.itReportPath>${basedir}/target/lcov.info</sonar.javascript.lcov.itReportPath>
		<sonar.javascript.lcov.reportPath>${basedir}/target/lcov-karma.info</sonar.javascript.lcov.reportPath>
		<!--<sonar.language>java</sonar.language>-->
		<!--
                <jetty.context.path.to.replace>jetty.context.path</jetty.context.path.to.replace>
                <jetty.context.path>/nabla</jetty.context.path>
                -->
		<!--<sonar.jdbc.url>jdbc:mysql://home.nabla.mobi:3306/sonar</sonar.jdbc.url>-->
		<!--<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>-->

		<!--
        <sonar.jdbc.driver>org.h2.Driver</sonar.jdbc.driver>
        <sonar.jdbc.password>sonar</sonar.jdbc.password>
        <sonar.jdbc.url>jdbc:h2:tcp://home.nabla.mobi:9092/sonar</sonar.jdbc.url>
        <sonar.jdbc.username>sonar</sonar.jdbc.username>
        <sonar.pdf.password>microsoft</sonar.pdf.password>
        <sonar.pdf.username>admin</sonar.pdf.username>
        -->
		<!--<sonar.skippedModules>cartridges</sonar.skippedModules>-->
		<!--<sonar.projectVersion>jenkins-${env.BUILD_NUMBER}</sonar.projectVersion>-->
		<sonar.links.ci>${env.BUILD_URL}</sonar.links.ci>
		<sonar.links.scm>https://github.com/AlbanAndrieu</sonar.links.scm>
		<sonar.login>50cb615252d00e68f3678b321335a8d1f13a9145</sonar.login>
		<sonar.organization>albanandrieu-github</sonar.organization>

		<sonar.pitest.mode>reuseReport</sonar.pitest.mode>
		<sonar.pitest.reportsDirectory>target/pit-reports</sonar.pitest.reportsDirectory>
		<sonar.scm.disabled>true</sonar.scm.disabled>
		<!--<sonar.dependencyCheck.htmlReportPath>${basedir}/target/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>-->
		<sonar.zaproxy.reportPath>${WORKSPACE}/zaproxy-report.xml</sonar.zaproxy.reportPath>
		<spark.version>4.6.b.23201</spark.version>
		<!--<spring2.version>2.5.6.SEC03</spring2.version>-->
		<!-- TODO remove because it is still required in ~/databases/sample/dao/business/test -->
		<!--<spring.agent.version>${spring2.version}</spring.agent.version>-->
		<spring.legacy.version>3.1.3.RELEASE</spring.legacy.version>
		<spring.mock.version>2.0.8</spring.mock.version>
		<!-- TODO spring3.version -->
		<!-- OK see http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!-- OK <spring.security.web>3.1.3.RELEASE</spring.security.web>-->
		<spring.security.web>3.1.4.RELEASE</spring.security.web>
		<spring.springloaded.version>1.2.8.RELEASE</spring.springloaded.version>
		<!--<spring.test.version>${spring4.version}</spring.test.version>-->
		<spring.test.version>${spring.legacy.version}</spring.test.version>
		<spring.version>${spring5.version}</spring.version>
		<!-- OK <spring3.version>3.1.3.RELEASE</spring3.version>-->
		<spring3.version>3.2.3.RELEASE</spring3.version>
		<!-- TODO spring3.version -->
		<!-- OK see http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!-- spring4 UPGRADE https://github.com/spring-projects/spring-framework/wiki/Migrating-from-earlier-versions-of-the-spring-framework -->
		<!-- Hibernate 3.6+, Quartz 1.8+, Jackson 1.8+, Tiles 2.2+ required -->
		<spring4.version>4.0.5.RELEASE</spring4.version>
		<spring5.version>5.0.4.RELEASE</spring5.version>
		<!--<spring.jpa.version>2.0.6</spring.jpa.version>-->
		<springmodules.validation.version>0.8</springmodules.validation.version>
		<!--<settings.localRepository>${env.M2_REPO}</settings.localRepository>-->
		<!--<deploy.dir>${home.dir}/fullsite</deploy.dir>-->
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<stax.api.version>1.0.1</stax.api.version>
		<stax.util.version>20070216</stax.util.version>
		<struts.menu.version>2.4.3</struts.menu.version>
		<struts.version>1.2.9</struts.version>
		<sun.jsf.version>2.2.16</sun.jsf.version>
		<swagger.doclet.version>1.0.5</swagger.doclet.version>
		<swagger.version>1.5.3</swagger.version>
		<tacos.version>4.1.0</tacos.version>
		<taglibs.version>1.1.2</taglibs.version>
		<tapestry.flash.version>1.0.0</tapestry.flash.version>
		<tapestry.spring.version>1.0.0</tapestry.spring.version>
		<tapestry.version>4.1.3</tapestry.version>
		<target.dir>target</target.dir>
		<!-- default value that can be overrided -->
		<target.version>${project.version}</target.version>
		<!--<target.version>RELEASE</target.version>-->
		<tattletale-destination-directory>${project.build.directory}/site/tattletale</tattletale-destination-directory>
		<tattletale-source-directory>${project.build.directory}/tattletale-source</tattletale-source-directory>
		<testng.version>6.14.2</testng.version>
		<tibjms.version>4.2.0</tibjms.version>
		<!--<tibrv.version>8.1.2</tibrv.version>-->
		<tibrv.version>8.2.2</tibrv.version>
		<!--<xerces.version>2.10.0</xerces.version> TODO add dependency batik to avoid java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal -->
		<tomcat.version>6.0.53</tomcat.version>
		<toplink.essentials.version>2.0-40</toplink.essentials.version>
		<unitils.core.version>3.4.6</unitils.core.version>
		<urlrewrite.version>3.0.4</urlrewrite.version>
		<vaadin.invient.charts.version>0.8.6</vaadin.invient.charts.version>
		<vaadin.lazyquerycontainer.version>1.2.9</vaadin.lazyquerycontainer.version>
		<vaadin.serverpush.version>1.0.6</vaadin.serverpush.version>
		<vaadin.version>6.7.4</vaadin.version>
		<!--<validation.api.version>1.0.0.GA</validation.api.version>-->
		<!-- OK see http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<validation.api.version>1.1.0.Final</validation.api.version>
		<velocity.version>1.7</velocity.version>
		<!--<org.jboss.shrinkwrap.descriptors.bom.version>1.2.0-alpha-2</org.jboss.shrinkwrap.descriptors.bom.version>-->
		<version.shrinkwrap_descriptors>2.0.0-alpha-7</version.shrinkwrap_descriptors>
		<!--<org.jboss.shrinkwrap.resolver.bom.version>1.1.0-alpha-3</org.jboss.shrinkwrap.resolver.bom.version>-->
		<version.shrinkwrap_resolver>2.1.1</version.shrinkwrap_resolver>
		<!--<org.jboss.shrinkwrap.bom.version>2.0.0</org.jboss.shrinkwrap.bom.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<!--<org.jboss.shrinkwrap.bom.version>2.1.1</org.jboss.shrinkwrap.bom.version>-->
		<version.shrinkwrap_shrinkwrap>1.2.2</version.shrinkwrap_shrinkwrap>
		<wagon.ftp.plugin.version>3.0.0</wagon.ftp.plugin.version>
		<wagon.ssh.plugin.version>3.0.0</wagon.ssh.plugin.version>
		<wagon.svn.plugin.version>1.12</wagon.svn.plugin.version>
		<wagon.webdav.jackrabbit.version>3.0.0</wagon.webdav.jackrabbit.version>
		<web.framework>struts</web.framework>
		<webtest.version>R_1600</webtest.version>
		<!-- http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
		<weld.servlet.version>1.0.1-Final</weld.servlet.version>
		<wildfly.version>8.0.0.Final</wildfly.version>
		<wiser.version>1.2</wiser.version>
		<woden.impl.om.version>1.0M8</woden.impl.om.version>
		<!-- upgrade needed for jetty 8 -->
		<ws.commons.neethi.version>2.0</ws.commons.neethi.version>
		<ws.version>1.0</ws.version>
		<!--<wsdl4j.version>1.6.3</wsdl4j.version>-->
		<wsdl4j.version>1.6.2</wsdl4j.version>
		<wss4j.version>1.6.5</wss4j.version>
		<!--<servlet.version>2.4</servlet.version>-->
		<wstx.asl.version>3.2.9</wstx.asl.version>
		<xalan.version>2.7.2</xalan.version>
		<xerces.version>2.11.0.SP5</xerces.version>
		<xfire.version>1.2.6</xfire.version>
		<xml.apis.ext.version>1.3.04</xml.apis.ext.version>
		<xml.apis.version>1.4.01</xml.apis.version>
		<!-- for jersey 2.21 -->
		<xml.resolver>1.2</xml.resolver>
		<xml.security.version>1.3.0</xml.security.version>
		<xmlbeans.version>2.6.0</xmlbeans.version>
		<xmlschema.version>1.4.7</xmlschema.version>
		<xmlsec.santuario.version>1.5.6</xmlsec.santuario.version>
		<xmlsec.version>1.4.3</xmlsec.version>
		<xmlunit.version>1.6</xmlunit.version>
		<xmt.version>1.0</xmt.version>
		<xpp3.min.version>1.1.4c</xpp3.min.version>
		<xstream.version>1.4.2</xstream.version>
		<yarn.version>1.3.2</yarn.version>
		<yourkit.version>9.0.8</yourkit.version>
		<!--OK <org.richfaces.bom.version>4.3.3.Final</org.richfaces.bom.version>-->
		<!-- OK http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
	</properties>
	<dependencyManagement>
		<dependencies>
			<!--
                    <dependency>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                        <version>${jdkVersion}</version>
                    </dependency>
                    -->
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${maven.version}</version>
			</dependency>
			<!-- Tomcat -->
			<!--
                        <dependency>
                                <groupId>javax</groupId>
                                <artifactId>javaee-api</artifactId>
                                <version>${javax.javaee.api.version}</version>
                                <scope>provided</scope>
                        </dependency>
                        -->
			<!--
                        <dependency>
                           <groupId>org.jboss.seam</groupId>
                           <artifactId>seam</artifactId>
                           <version>${seam.version}</version>
                           <scope>import</scope>
                           <type>pom</type>
                        </dependency>
                        -->
			<!--
                        <dependency>
                                <groupId>org.jboss.seam</groupId>
                                <artifactId>seam-bom</artifactId>
                                <version>${seam.bom.version}</version>
                                <scope>import</scope>
                                <type>pom</type>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.owasp.appsensor</groupId>
				<artifactId>appsensor-core</artifactId>
				<version>${appsensor.core.version}</version>
				<!-- below duplicated with org.glassfish.hk2:hk2-api from jersey -->
				<exclusions>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>javax.inject</groupId>
					</exclusion>
					<exclusion>
						<artifactId>aopalliance</artifactId>
						<groupId>aopalliance</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-mockito-release-full</artifactId>
				<version>${powermock.mockito.version}</version>
				<classifier>full</classifier>
				<exclusions>
					<exclusion>
						<artifactId>powermock-module-testng</artifactId>
						<groupId>org.powermock</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-charts</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<dependency>
				<!--<groupId>com.excilys.ebi.gatling.highcharts</groupId>-->
				<groupId>io.gatling.highcharts</groupId>
				<artifactId>gatling-charts-highcharts</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<dependency>
				<!--<groupId>com.excilys.ebi.gatling</groupId>-->
				<groupId>io.gatling</groupId>
				<artifactId>gatling-app</artifactId>
				<version>${gatling.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>logback-classic</artifactId>
						<groupId>ch.qos.logback</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jvnet.mimepull</groupId>
				<artifactId>mimepull</artifactId>
				<version>${mimepull.version}</version>
			</dependency>
			<dependency>
				<groupId>org.beanshell</groupId>
				<artifactId>bsh</artifactId>
				<version>${org.beanshell.bsh.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${hamcrest.core.version}</version>
			</dependency>
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
				<!--<scope>compile</scope>-->
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web) Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.legacy.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web) Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc-portlet</artifactId>
				<version>${spring.legacy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.legacy.version}</version>
			</dependency>
			<!-- JMS Library (depends on spring-core, spring-beans, spring-context, spring-context-support, spring-tx) Define this if you use Spring's JMS integration classes (org.springframework.jms.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.legacy.version}</version>
			</dependency>
			<!-- Core utilities used by other modules. Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Expression Language (depends on spring-core) Define this if you use Spring Expression APIs (org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Web application development utilities applicable to both Servlet and Portlet Environments (depends on spring-core, spring-beans, spring-context) Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) This is the central artifact for Spring's Dependency Injection Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration Define this if you need any of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context) Define this if you use Spring Transactions or DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) Define this if you need ORM (org.springframework.orm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>springloaded</artifactId>
				<version>${spring.springloaded.version}</version>
			</dependency>
			<!-- // Spring -->
			<dependency>
				<groupId>com.google.api.client</groupId>
				<artifactId>google-api-client</artifactId>
				<version>${google.api.client.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- For JBoss AS6 and earlier: Avoid NoSuchMethodException: org.hibernate.validator.ClassValidator.<init> -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator-legacy</artifactId>
				<version>${hibernate.validator.legacy.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hibernate-core</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hibernate-commons-annotations</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.ehcache.version}</version>
			</dependency>
			<dependency>
				<!-- moved to org.ow2.asm Â» asm -->
				<groupId>asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.ow2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm-debug-all</artifactId>
				<version>${asm.ow2.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${javax.transaction.version}</version>
			</dependency>
			<!-- GWT validation uses Hibernate Validator, and requires the sources
                          at compile time. -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
				<classifier>sources</classifier>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- https://docs.jboss.org/author/display/ISPN/Using+Infinispan+as+JPA-Hibernate+Second+Level+Cache+Provider -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-infinispan</artifactId>
				<version>${hibernate.infinispan.version}</version>
				<exclusions>
					<!-- Some transitive dependencies of Hibernate 3 are
                                    available in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib,
                                    but instead depend on the modules -->
					<exclusion>
						<artifactId>infinispan-core</artifactId>
						<groupId>org.infinispan</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hibernate-testing</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>ejb3-persistence</artifactId>
				<version>${ejb3.persistence.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-search</artifactId>
				<version>${hibernate.search.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hibernate</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ejb3-persistence</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-annotations</artifactId>
				<version>${hibernate.annotations.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jta</artifactId>
						<groupId>javax.transaction</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-standalone-compiler</artifactId>
				<version>${izpack.standalone.compiler.version}</version>
				<!-- dont want to download this artifact when retrieve the installer as transitive dependency -->
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${org.ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.core.version}</version>
			</dependency>
			<!--
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>${ehcache.jar.version}</version>
                <type>jar</type>
            </dependency>
            -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-terracotta</artifactId>
				<version>${ehcache.terracotta.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${org.javassist.version}</version>
				<!--<scope>provided</scope>-->
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.openjpa</groupId>
				<artifactId>openjpa</artifactId>
				<version>${openjpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk16</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>${aopalliance.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>${javax.persistence.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.ejb</groupId>
				<artifactId>ejb-api</artifactId>
				<version>${javax.ejb.api.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>${jfreechart.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>jfree</groupId>
				<artifactId>jcommon</artifactId>
				<version>${jfree.jcommon.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- POI -->
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi-contrib</artifactId>
				<version>${poi.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>${poi.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${org.apache.poi.version}</version>
			</dependency>
			<!-- // POI -->
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${javax.activation.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${inject.version}</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant</artifactId>
				<version>${ant.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ant</groupId>
				<artifactId>ant-launcher</artifactId>
				<version>${ant.version}</version>
			</dependency>
			<!--
                        <dependency>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                                <version>${ant.version}</version>
                                <scope>compile</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>${org.antlr.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr-runtime</artifactId>
				<version>${org.antlr.version}</version>
			</dependency>
			<dependency>
				<groupId>antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>${antlr.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${lucene.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<version>${lucene.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queries</artifactId>
				<version>${lucene.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<version>${lucene.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-snowball</artifactId>
				<version>${lucene.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<!--
                        <dependency>
                                <groupId>org.apache.lucene</groupId>
                                <artifactId>lucene-similarity</artifactId>
                                <version>${lucene.version}</version>
                                <scope>compile</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-reflect</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json4s</groupId>
				<artifactId>json4s-jackson_${scala.short.version}</artifactId>
				<version>${json4s.version}</version>
			</dependency>
			<!--
                          groovy-all-1.5.4 provided by Seam-2.1.2, seam-2.2.0 and seam-2.2.1 root POM
                          does not work with the gmaven-1.2 and 1.3 plugin, must use groovy-1.7.x.
                        -->
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<!--<classifier>indy</classifier>-->
				<version>${groovy.version}</version>
				<exclusions>
					<!-- groovy-all imports a lot of stuff, would be better to just use specific bits -->
					<exclusion>
						<artifactId>bsf</artifactId>
						<groupId>bsf</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-cli</artifactId>
						<groupId>commons-cli</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hsqldb</artifactId>
						<groupId>hsqldb</groupId>
					</exclusion>
					<exclusion>
						<artifactId>junit</artifactId>
						<groupId>junit</groupId>
					</exclusion>
					<exclusion>
						<artifactId>mx4j</artifactId>
						<groupId>mx4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xml-resolver</artifactId>
						<groupId>xml-resolver</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xstream</artifactId>
						<groupId>com.thoughtworks.xstream</groupId>
					</exclusion>
					<exclusion>
						<artifactId>mockobjects-core</artifactId>
						<groupId>mockobjects</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ant</artifactId>
						<groupId>org.apache.ant</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ant-launcher</artifactId>
						<groupId>org.apache.ant</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ant-junit</artifactId>
						<groupId>org.apache.ant</groupId>
					</exclusion>
					<exclusion>
						<artifactId>castor</artifactId>
						<groupId>castor</groupId>
					</exclusion>
					<exclusion>
						<artifactId>openejb</artifactId>
						<groupId>openejb</groupId>
					</exclusion>
					<exclusion>
						<artifactId>openejb-loader</artifactId>
						<groupId>openejb</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jsp-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xercesImpl</artifactId>
						<groupId>xerces</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jline</artifactId>
						<groupId>jline</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.cloudbees</groupId>
				<artifactId>groovy-cps</artifactId>
				<version>${groovy.cps.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-eclipse-compiler</artifactId>
				<version>${groovy.eclipse.compiler.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-eclipse-batch</artifactId>
				<version>${groovy.eclipse.batch.version}</version>
			</dependency>
			<!-- to generate .png from .svg (because IE 8 can't) -->
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-transcoder</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-codec</artifactId>
				<version>${batik.version}</version>
			</dependency>
			<!-- batik avoid java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal -->
			<dependency>
				<groupId>batik</groupId>
				<artifactId>batik-ext</artifactId>
				<version>${batik.ext.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jogamp.gluegen</groupId>
				<artifactId>gluegen-rt-main</artifactId>
				<version>${gluegen.rt.main.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jogamp.jocl</groupId>
				<artifactId>jocl-main</artifactId>
				<version>${gluegen.rt.main.version}</version>
			</dependency>
			<!-- WS.RS-API REST JERSEY -->
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>${javax.ws.rs-api.version}</version>
			</dependency>
			<!-- // WS.RS-API REST JERSEY -->
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons.validator.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
				<!--<scope>compile</scope>-->
				<!-- JBoss contains a version which causes a classloader conflict unless not bundled>
                            <scope>provided</scope -->
			</dependency>
			<dependency>
				<groupId>commons-digester</groupId>
				<artifactId>commons-digester</artifactId>
				<version>${commons.digester.version}</version>
				<!--<scope>compile</scope>-->
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons.fileupload.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlbeans</groupId>
				<artifactId>xmlbeans</artifactId>
				<version>${xmlbeans.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${commons.cli.version}</version>
				<!--<scope>compile</scope>-->
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils-core</artifactId>
				<version>${commons.beanutils.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils-bean-collections</artifactId>
				<version>${commons.beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>commons-discovery</groupId>
				<artifactId>commons-discovery</artifactId>
				<version>${commons.discovery.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math</artifactId>
				<version>${commons.math.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons.math3.version}</version>
			</dependency>
			<dependency>
				<groupId>concurrent</groupId>
				<artifactId>concurrent</artifactId>
				<version>${concurrent.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>struts</groupId>
				<artifactId>struts</artifactId>
				<version>${struts.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-chain</artifactId>
						<groupId>commons-chain</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-digester</artifactId>
						<groupId>commons-digester</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xalan</artifactId>
						<groupId>xalan</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>struts-menu</groupId>
				<artifactId>struts-menu</artifactId>
				<version>${struts.menu.version}</version>
			</dependency>
			<!-- validation dependencies for hibernate-entitymanager -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation.api.version}</version>
			</dependency>
			<!-- GWT validation also requires the validation API sources at compile
                          time -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation.api.version}</version>
				<classifier>sources</classifier>
			</dependency>
			<!-- richfaces -->
			<!--
                        <dependency>
                          <groupId>org.richfaces.framework</groupId>
                          <artifactId>richfaces-api</artifactId>
                          <version>${richfaces.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>commons-logging</groupId>
                              <artifactId>commons-logging</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>junit</groupId>
                              <artifactId>junit</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.faces</groupId>
                              <artifactId>jsf-impl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-beanutils</groupId>
                              <artifactId>commons-beanutils</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-collections</groupId>
                              <artifactId>commons-collections</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency>

                        <dependency>
                          <groupId>org.richfaces.framework</groupId>
                          <artifactId>richfaces-impl</artifactId>
                          <version>${richfaces.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>commons-logging</groupId>
                              <artifactId>commons-logging</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>junit</groupId>
                              <artifactId>junit</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>xml-apis</groupId>
                              <artifactId>xml-apis</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>org.richfaces.framework</groupId>
                              <artifactId>richfaces-api</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.faces</groupId>
                              <artifactId>jsf-api</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.faces</groupId>
                              <artifactId>jsf-impl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.servlet</groupId>
                              <artifactId>servlet-api</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-digester</groupId>
                              <artifactId>commons-digester</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-beanutils</groupId>
                              <artifactId>commons-beanutils</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency>

                        <dependency>
                          <groupId>org.richfaces.ui</groupId>
                          <artifactId>richfaces-ui</artifactId>
                          <version>${richfaces.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>commons-logging</groupId>
                              <artifactId>commons-logging</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.faces</groupId>
                              <artifactId>jsf-impl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>org.richfaces.framework</groupId>
                              <artifactId>richfaces-api</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>javax.servlet</groupId>
                              <artifactId>jstl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-digester</groupId>
                              <artifactId>commons-digester</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>commons-beanutils</groupId>
                              <artifactId>commons-beanutils</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency>

                        <dependency>
                          <groupId>org.richfaces.samples</groupId>
                          <artifactId>glassX</artifactId>
                          <version>${richfaces.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>javax.servlet</groupId>
                              <artifactId>jstl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>nekohtml</groupId>
                              <artifactId>nekohtml</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency>

                        <dependency>
                          <groupId>org.richfaces.samples</groupId>
                          <artifactId>darkX</artifactId>
                          <version>${richfaces.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>javax.servlet</groupId>
                              <artifactId>jstl</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>nekohtml</groupId>
                              <artifactId>nekohtml</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency
                        -->
			<dependency>
				<groupId>nekohtml</groupId>
				<artifactId>nekohtml</artifactId>
				<version>${nekohtml.version}</version>
				<!--<scope>provided</scope>-->
			</dependency>
			<dependency>
				<groupId>net.sourceforge.nekohtml</groupId>
				<artifactId>nekohtml</artifactId>
				<version>${net.sourceforge.nekohtml.version}</version>
				<!--<scope>provided</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.core</groupId>
				<artifactId>myfaces-api</artifactId>
				<version>${myfaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.core</groupId>
				<artifactId>myfaces-impl</artifactId>
				<version>${myfaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.tomahawk</groupId>
				<artifactId>tomahawk12</artifactId>
				<version>${org.apache.myfaces.tomahawk.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.extensions.validator</groupId>
				<artifactId>myfaces-extval-core</artifactId>
				<version>${myfaces.extval.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
				<artifactId>myfaces-extval-property-validation</artifactId>
				<version>${myfaces.extval.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.extensions.validator.validation-modules</groupId>
				<artifactId>myfaces-extval-bean-validation</artifactId>
				<version>${myfaces.extval.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
				<artifactId>myfaces-extval-generic-support</artifactId>
				<version>${myfaces.extval.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>cglib</artifactId>
						<groupId>cglib</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.extensions.validator.component-support-modules</groupId>
				<artifactId>myfaces-extval-trinidad-support</artifactId>
				<version>${myfaces.extval.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.trinidad</groupId>
				<artifactId>trinidad-api</artifactId>
				<version>${org.apache.myfaces.trinidad.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.trinidad</groupId>
				<artifactId>trinidad-impl</artifactId>
				<version>${org.apache.myfaces.trinidad.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.facelets</groupId>
				<artifactId>jsf-facelets</artifactId>
				<version>${jsf.facelets.version}</version>
			</dependency>
			<!--
                        <dependency>
                                <groupId>com.sun.facelets</groupId>
                                <artifactId>jsf-facelets</artifactId>
                                <version>${jsf.facelets.version}</version>
                                <scope>runtime</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.icefaces</groupId>
				<artifactId>icefaces-comps</artifactId>
				<version>${icefaces.version}</version>
				<!--<scope>runtime</scope>-->
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.icefaces</groupId>
				<artifactId>icefaces-facelets</artifactId>
				<version>${icefaces.version}</version>
				<!--<scope>runtime</scope>-->
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- TODO removed old API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>el-api</artifactId>
				<version>${el.api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.el</groupId>
				<artifactId>el-ri</artifactId>
				<version>${el.ri.version}</version>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>${taglibs.version}</version>
			</dependency>
			<!-- Errai Core and ErraiBus -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-bus</artifactId>
				<version>${errai.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>javax.inject</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jsr250-api</artifactId>
						<groupId>javax.annotation</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-ioc</artifactId>
				<version>${errai.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>javax.inject</artifactId>
						<groupId>javax.inject</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jsr250-api</artifactId>
						<groupId>javax.annotation</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-tools</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<!-- Errai JAX-RS -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jaxrs-client</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-jaxrs-provider</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<!-- Errai CDI Integration Modules -->
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-cdi-client</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-javax-enterprise</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.errai</groupId>
				<artifactId>errai-weld-integration</artifactId>
				<version>${errai.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.weld.servlet</groupId>
				<artifactId>weld-servlet</artifactId>
				<version>${weld.servlet.version}</version>
			</dependency>
			<!--
                        <dependency>
                          <groupId>org.jboss.errai</groupId>
                          <artifactId>jboss7-support</artifactId>
                          <version>${errai.version}</version>
                        </dependency>
                        -->
			<!-- TODO activate it if needed
                        <dependency>
                            <groupId>com.vaadin</groupId>
                            <artifactId>vaadin</artifactId>
                            <version>${vaadin.version}</version>
                            <type>jar</type>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>com.github.wolfie</groupId>
                            <artifactId>refresher</artifactId>
                            <version>${refresher.version}</version>
                            <type>jar</type>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.vaadin.addons</groupId>
                            <artifactId>invient-charts</artifactId>
                            <version>${vaadin.invient.charts.version}</version>
                            <type>jar</type>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.vaadin.addons.lazyquerycontainer</groupId>
                            <artifactId>vaadin-lazyquerycontainer</artifactId>
                            <version>${vaadin.lazyquerycontainer.version}</version>
                            <type>jar</type>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.vaadin.addons</groupId>
                            <artifactId>serverpush</artifactId>
                            <version>${vaadin.serverpush.version}</version>
                        </dependency>
                        -->
			<!-- Atmosphere - for ServerPush -->
			<dependency>
				<groupId>org.atmosphere</groupId>
				<artifactId>atmosphere-gwt-server</artifactId>
				<version>${atmosphere.version}</version>
			</dependency>
			<dependency>
				<groupId>org.atmosphere</groupId>
				<artifactId>atmosphere-gwt-client</artifactId>
				<version>${atmosphere.version}</version>
			</dependency>
			<dependency>
				<groupId>org.atmosphere</groupId>
				<artifactId>atmosphere-runtime</artifactId>
				<version>${atmosphere.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.gwtplatform</groupId>
				<artifactId>gwtp-all</artifactId>
				<version>${gwtp.all.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>com.googlecode.objectify</groupId>
				<artifactId>objectify</artifactId>
				<version>${objectify.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.el</groupId>
				<artifactId>jboss-el</artifactId>
				<version>${jboss.el.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>el-api</artifactId>
						<groupId>javax.el</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>${jboss.logging.version}</version>
			</dependency>
			<!--Fix: java.lang.ClassNotFoundException: org.jboss.util.id.SerialVersion-->
			<dependency>
				<groupId>org.jboss</groupId>
				<artifactId>jboss-common-core</artifactId>
				<version>${jboss.common.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jbpm</groupId>
				<artifactId>jbpm-jpdl</artifactId>
				<version>${jbpm.jpdl.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jbpm</groupId>
				<artifactId>jbpm-identity</artifactId>
				<version>${jbpm.identity.version}</version>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-cache</artifactId>
				<version>${jboss.cache.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-system</artifactId>
						<groupId>jboss</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-jmx</artifactId>
						<groupId>jboss</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--dependency>
                            <groupId>org.jboss.microcontainer</groupId>
                            <artifactId>jboss-ejb3-all</artifactId>
                            <version>${jboss.microcontainer.version}</version>
                            <scope>provided</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.microcontainer</groupId>
                            <artifactId>jms-ra</artifactId>
                            <version>${jboss.microcontainer.version}</version>
                            <scope>provided</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.microcontainer</groupId>
                            <artifactId>jcainflow</artifactId>
                            <version>${jboss.microcontainer.version}</version>
                            <scope>provided</scope>
                        </dependency-->
			<dependency>
				<groupId>org.mvel</groupId>
				<artifactId>mvel2</artifactId>
				<version>${org.mvel.mvel2.version}</version>
			</dependency>
			<!-- spec apis such as javax.persistence, needed to run OpenEjb in tests -->
			<dependency>
				<groupId>org.apache.openejb</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${openejb.javaee.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>jboss-embedded-all</artifactId>
				<version>${seam.embedded.version}</version>
				<!--<scope>compile</scope>-->
				<exclusions>
					<exclusion>
						<artifactId>jboss-deployers-client-spi</artifactId>
						<groupId>org.jboss.microcontainer</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.short.version}</artifactId>
				<version>${scalatest.version}</version>
			</dependency>
			<dependency>
				<groupId>quartz</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${org.quartz.version}</version>
			</dependency>
			<!--
                          Fix transitive dependencies in Seam root pom.
                          Exclusions defined in seam root pom DO NOT inherit so we have to duplicate them :-(

                          Sections marked with ** are additional exclusions not found in the seam root pom

                          The following sites has helped figuring out the transitive dependencies:
                          http://www.reverttoconsole.com/blog/java/maven-transitive-dependencies-with-jboss-seam-richfaces-in-ear-deployement/
                          https://www.jboss.org/community/wiki/RichFacesPhotositedemoapplication/
                          http://www.jboss.org/portletbridge/
                          http://ctpjava.blogspot.com/2009/03/jboss-seam-hot-deploy-with-maven-update.html
                          http://blogs.steeplesoft.com/seam-and-jpa-hibernate-on-oc4j-1013/
                          http://docs.jboss.com/seam/2.1.2.CR2/reference/en-US/html/dependencies.html
                          http://kasper.eobjects.dk/2009/04/seam-ejbs-and-ear-packaging-in-maven.html

                          * To find and list transitive dependencies:
                            mvn install dependency:tree

                          * To write the dependency content into a file, type e.g:
                            mvn install dependency:tree > dependency.txt
                        -->
			<!-- JBoss Seam -->
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam</artifactId>
				<version>${seam.version}</version>
				<type>ejb</type>
				<exclusions>
					<exclusion>
						<artifactId>el-api</artifactId>
						<groupId>javax.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javassist</artifactId>
						<groupId>jboss</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>dom4j</artifactId>
						<groupId>dom4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javassist</artifactId>
						<groupId>javassist</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-seam-pdf</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jsf-facelets</artifactId>
						<groupId>com.sun.facelets</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xstream</artifactId>
						<groupId>com.thoughtworks.xstream</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xpp3_min</artifactId>
						<groupId>xpp3</groupId>
					</exclusion>
					<exclusion>
						<artifactId>testng</artifactId>
						<groupId>org.testng</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-debug</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-seam-pdf</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
					<exclusion>
						<artifactId>el-api</artifactId>
						<groupId>javax.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jsf-facelets</artifactId>
						<groupId>com.sun.facelets</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-ui</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-seam-jul</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-digester</artifactId>
						<groupId>commons-digester</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-pdf</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>itext</artifactId>
						<groupId>com.lowagie</groupId>
					</exclusion>
					<exclusion>
						<artifactId>itext-rtf</artifactId>
						<groupId>com.lowagie</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-mail</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-remoting</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javassist</artifactId>
						<groupId>jboss</groupId>
					</exclusion>
					<exclusion>
						<artifactId>el-api</artifactId>
						<groupId>javax.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>dom4j</artifactId>
						<groupId>dom4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-ioc</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
					<exclusion>
						<artifactId>servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-resteasy</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>jboss-seam-excel</artifactId>
				<version>${seam.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jboss-seam</artifactId>
						<groupId>org.jboss.seam</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-el</artifactId>
						<groupId>org.jboss.el</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--
                        <dependency>
                          <groupId>org.jboss.seam</groupId>
                          <artifactId>jboss-seam-jul</artifactId>
                          <version>${seam.version}</version>
                          <exclusions>
                            <exclusion>
                              <groupId>org.jboss.seam</groupId>
                              <artifactId>jboss-seam</artifactId>
                            </exclusion>
                            <exclusion>
                              <groupId>org.jboss.el</groupId>
                              <artifactId>jboss-el</artifactId>
                            </exclusion>
                          </exclusions>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.jboss.seam.international</groupId>
				<artifactId>seam-international</artifactId>
				<version>${seam.international.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>com.espertech</groupId>
				<artifactId>esper</artifactId>
				<version>${esper.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.efficient-java-matrix-library</groupId>
				<artifactId>ejml</artifactId>
				<version>${ejml.version}</version>
			</dependency>
			<!-- mongo-->
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-core</artifactId>
				<version>${swagger.version}</version>
				<scope>compile</scope>
				<exclusions>
					<exclusion>
						<artifactId>jsr311-api</artifactId>
						<groupId>javax.ws.rs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.gatling.uncommons.maths</groupId>
				<artifactId>uncommons-maths</artifactId>
				<version>${gatling.uncommons.maths.version}</version>
			</dependency>
			<!-- akka-->
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-actor${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-kernel${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-remote${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-osgi${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-cluster${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-slf4j${scala.suffix}</artifactId>
				<version>${akka.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-camel${scala.suffix}</artifactId>
				<version>${akka.version}</version>
			</dependency>
			<!-- Axis2 Dependencies -->
			<!-- TODO Update to 1.3 or later breaks webservice template code -->
			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2</artifactId>
				<version>${axis2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-api</artifactId>
				<version>${axiom.api.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xercesImpl</artifactId>
						<groupId>xerces</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis-ext</artifactId>
				<version>${xml.apis.ext.version}</version>
			</dependency>
			<!-- Apache CXF -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-common-schemas</artifactId>
				<version>${cxf.common.schemas.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-api</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-annotation_1.0_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle-minimal</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-common-utilities</artifactId>
				<version>${cxf.common.utilities.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jaxb-api</artifactId>
						<groupId>javax.xml.bind</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-annotation_1.0_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-stax-api_1.0_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jaxb-api</artifactId>
						<groupId>javax.xml.bind</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-xml</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.rt.core.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jaxb-api</artifactId>
						<groupId>javax.xml.bind</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-databinding-jaxb</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>saaj-api</artifactId>
						<groupId>javax.xml.soap</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-jaxws_2.1_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-simple</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
				<!-- exclude jetty 6 since cxf has been upgraded -->
				<exclusions>
					<exclusion>
						<artifactId>jetty</artifactId>
						<groupId>org.mortbay.jetty</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jetty-util</artifactId>
						<groupId>org.mortbay.jetty</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-addr</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-security</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-tools-common</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>saaj-api</artifactId>
						<groupId>javax.xml.soap</groupId>
					</exclusion>
					<exclusion>
						<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
						<groupId>org.apache.geronimo.specs</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- // Apache CXF -->
			<!-- Apache Shiro -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-guice</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!-- // Apache Shiro -->
			<!-- BlaseDS/Flex -->
			<dependency>
				<groupId>com.adobe.blazeds</groupId>
				<artifactId>blazeds-common</artifactId>
				<version>${blazeds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.adobe.blazeds</groupId>
				<artifactId>blazeds-core</artifactId>
				<version>${blazeds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.adobe.blazeds</groupId>
				<artifactId>blazeds-opt</artifactId>
				<version>${blazeds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.adobe.blazeds</groupId>
				<artifactId>blazeds-proxy</artifactId>
				<version>${blazeds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.adobe.blazeds</groupId>
				<artifactId>blazeds-remoting</artifactId>
				<version>${blazeds.version}</version>
			</dependency>
			<!--
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>flex-framework</artifactId>
                <version>${flex.sdk.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>halo</artifactId>
                <version>${flex.sdk.version}</version>
                <classifier>theme</classifier>
                <type>swc</type>
                <scope>theme</scope>
            </dependency>
            <dependency>
                <groupId>com.adobe.flexunit</groupId>
                <artifactId>flexunit</artifactId>
                <version>${flexunit.version}</version>
                <type>swc</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>automation</artifactId>
                <version>${flex.automation.version}</version>
                <type>swc</type>
            </dependency>
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>automation_dmv</artifactId>
                <version>${flex.automation.version}</version>
                <type>swc</type>
            </dependency>
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>automation_spark</artifactId>
                <version>${flex.automation.version}</version>
                <type>swc</type>
            </dependency>
            <dependency>
                <groupId>com.ilog</groupId>
                <artifactId>ilog-elixir-enterprise</artifactId>
                <version>${ilog-elixir.version}</version>
                <classifier>en_US</classifier>
                <type>rb.swc</type>
            </dependency>
            <dependency>
                <groupId>com.ilog</groupId>
                <artifactId>ilog-elixir-enterprise</artifactId>
                <version>${ilog-elixir.version}</version>
                <type>swc</type>
            </dependency>
            -->
			<!--
            <dependency>
                <groupId>flexlib</groupId>
                <artifactId>flexlib</artifactId>
                <version>${flexlib.version}</version>
                <classifier>flex4</classifier>
                <type>swc</type>
            </dependency>
            -->
			<!-- // BlaseDS/Flex -->
			<!--
            <dependency>
                <groupId>com.adobe.flex.framework</groupId>
                <artifactId>spark</artifactId>
                <version>${spark.version}</version>
                <type>swc</type>
                <scope>theme</scope>-->
			<!-- do not comment, even if maven is complaining -->
			<!--
            </dependency>
            -->
			<!-- Caucho Hessian -->
			<dependency>
				<groupId>com.caucho</groupId>
				<artifactId>hessian</artifactId>
				<version>${hessian.version}</version>
			</dependency>
			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>${wsdl4j.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>wstx-asl</artifactId>
				<version>${wstx.asl.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.schema</groupId>
				<artifactId>XmlSchema</artifactId>
				<version>${xmlschema.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>xml-resolver</groupId>
				<artifactId>xml-resolver</artifactId>
				<version>${xml.resolver}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>com.sun.xml.fastinfoset</groupId>
				<artifactId>FastInfoset</artifactId>
				<version>${fastinfoset.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- WS Security -->
			<dependency>
				<groupId>org.apache</groupId>
				<artifactId>xmlsec</artifactId>
				<version>${xmlsec.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.santuario</groupId>
				<artifactId>xmlsec</artifactId>
				<version>${xmlsec.santuario.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>org.apache.ws.security</groupId>
				<artifactId>wss4j</artifactId>
				<version>${wss4j.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>jsr311-api</artifactId>
				<version>${jsr311.api.version}</version>
			</dependency>
			<!--
            <dependency>
                <groupId>com.adobe.flex.compiler</groupId>
                <artifactId>flex-messaging-common</artifactId>
                <version>${flex.messaging.common.version}</version>
            </dependency>
            -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${json.lib.version}</version>
				<classifier>jdk15</classifier>
			</dependency>
			<dependency>
				<groupId>net.sf.ezmorph</groupId>
				<artifactId>ezmorph</artifactId>
				<version>${ezmorph.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>catalina</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>coyote</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>jasper</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.extras</groupId>
				<artifactId>juli-adapters</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<!-- Database -->
			<!-- DERBY -->
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${jdbc.derby.version}</version>
			</dependency>
			<!-- // DERBY -->
			<!-- Database -->
			<!-- HSQLDB -->
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${jdbc.org.hsqldb.version}</version>
			</dependency>
			<!-- below deprecated moved to org.hsqldb -->
			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${jdbc.hsqldb.version}</version>
			</dependency>
			<!-- // HSQLDB -->
			<!-- SYBASE -->
			<dependency>
				<groupId>com.sybase</groupId>
				<artifactId>jconn3</artifactId>
				<version>${jdbc.sybase.version}</version>
			</dependency>
			<!-- // SYBASE -->
			<!-- JTDS -->
			<dependency>
				<groupId>net.sourceforge.jtds</groupId>
				<artifactId>jtds</artifactId>
				<version>${jdbc.jtds.version}</version>
			</dependency>
			<!-- // JTDS -->
			<!-- H2 -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${jdbc.h2.version}</version>
			</dependency>
			<!-- // H2 -->
			<!-- ORACLE -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc14</artifactId>
				<version>${jdbc.oracle.version}</version>
			</dependency>
			<!--
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>orai18n</artifactId>
                <version>${jdbc.oracle.version}</version>
                <scope>runtime</scope>
            </dependency>
            -->
			<!-- // ORACLE -->
			<!-- POSTGRESQL -->
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${jdbc.postgresql.version}</version>
			</dependency>
			<!-- // POSTGRESQL -->
			<!-- MYSQL -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${jdbc.mysql.version}</version>
			</dependency>
			<!-- // MYSQL -->
			<!-- // Database -->
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus.util.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-container-default</artifactId>
				<version>${plexus.container.default.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-archiver</artifactId>
				<version>${plexus.archiver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven.plugin.api.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-archiver</artifactId>
				<version>${maven.archiver.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven.artifact.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-project</artifactId>
				<version>${maven.project.version}</version>
			</dependency>
			<!-- 3rd Parties: Commercial 3rd parties -->
			<!--
                <dependency>
                    <groupId>com.tibco.tibjms</groupId>
                    <artifactId>tibjms</artifactId>
                    <version>${tibjms.version}</version>
                </dependency>
                <dependency>
                        <groupId>com.tibco</groupId>
                        <artifactId>tibrv</artifactId>
                        <version>${tibrv.version}</version>
                </dependency>
                <dependency>
                        <groupId>com.tibco.tibrv</groupId>
                        <artifactId>tibrv</artifactId>
                        <version>${tibrv.version}</version>
                </dependency>
                <dependency>
                    <groupId>sybase</groupId>
                    <artifactId>jconnect</artifactId>
                    <version>${jconnect.version}</version>
                </dependency>
                -->
			<!-- // 3rd Parties -->
			<!-- Guice -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-assistedinject</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-grapher</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-jmx</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-jndi</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-multibindings</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-persist</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-servlet</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-spring</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-throwingproviders</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>${geronimo.jms.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-servlet_2.5_spec</artifactId>
				<version>${geronimo.servlet.2.5.spec.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-servlet_3.0_spec</artifactId>
				<version>${geronimo.servlet.3.0.spec.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jsp_2.1_spec</artifactId>
				<version>${geronimo.jsp.2.1.spec.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>jms</artifactId>
				<version>${javax.jms.version}</version>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<!-- before it was only servlet-api -->
				<version>${javax.servlet.api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.messaging.saaj</groupId>
				<artifactId>saaj-impl</artifactId>
				<version>${saaj.impl.version}</version>
			</dependency>
			<!-- // Javax -->
			<!-- JAXB -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb.api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${jaxb.core.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb.impl.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>stax-api</artifactId>
						<groupId>javax.xml.stream</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-xjc</artifactId>
				<version>${jaxb.impl.version}</version>
			</dependency>
			<!-- // JAXB -->
			<!-- Jackson -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-smile</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<!-- // Jackson -->
			<!-- Jersey -->
			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>${jettison.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>stax-api</artifactId>
						<groupId>stax</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jettison</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!--
                    <dependency>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-core</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-json</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-client</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-server</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey.contribs</groupId>
                        <artifactId>jersey-apache-client</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey.contribs</groupId>
                        <artifactId>jersey-guice</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey.contribs</groupId>
                        <artifactId>wadl-resourcedoc-doclet</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey.contribs</groupId>
                        <artifactId>jersey-wadl-json-schema</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.jersey.contribs</groupId>
                        <artifactId>jersey-multipart</artifactId>
                        <version>${jersey1.version}</version>
                    </dependency>
                    -->
			<!-- // Jersey -->
			<!-- Jetty 6 -->
			<!--
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty</artifactId>
                        <version>${jetty.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-util</artifactId>
                        <version>${jetty.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>start</artifactId>
                        <version>${jetty.version}</version>
                        <scope>runtime</scope>
                    </dependency>

                    // Use instead org.eclipse.jetty
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-proxy</artifactId>
                        <version>${jetty9.version}</version>
                    </dependency>
                    -->
			<!-- // Jetty 6 -->
			<!-- // Jetty7 -->
			<!--
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-server</artifactId>
                        <version>${jetty7.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlet</artifactId>
                        <version>${jetty7.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlets</artifactId>
                        <version>${jetty7.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-websocket</artifactId>
                        <version>${jetty7.version}</version>
                    </dependency>
                    -->
			<!-- // Jetty7 -->
			<!-- // Jetty8 -->
			<!--
                    <dependency>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-websocket</artifactId>
                        <version>${jetty8.version}</version>
                    </dependency>
                    -->
			<!-- // Jetty8 -->
			<!-- // Jetty8 and Jetty9 -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-security</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-deploy</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-xml</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-continuation</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-io</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-start</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<!-- Jetty 9 -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-api</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<!--
                    <dependency>
                        <groupId>org.eclipse.jetty.websocket</groupId>
                        <artifactId>websocket-api-client</artifactId>
                        <version>${jetty9.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty.websocket</groupId>
                        <artifactId>websocket-api-client-impl</artifactId>
                        <version>${jetty9.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.jetty.websocket</groupId>
                        <artifactId>websocket-api-server-impl</artifactId>
                        <version>${jetty9.version}</version>
                    </dependency>
                    -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-common</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-parent</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-server</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-servlet</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-proxy</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<!-- // Jetty 9 -->
			<dependency>
				<groupId>javax.websocket</groupId>
				<artifactId>javax.websocket-api</artifactId>
				<version>${javax.websocket.api}</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<exclusions>
					<!-- circular dependency -->
					<exclusion>
						<artifactId>logback-classic</artifactId>
						<groupId>ch.qos.logback</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.lazyluke</groupId>
				<artifactId>log4jdbc-remix</artifactId>
				<version>${log4jdbc.remix.version}</version>
			</dependency>
			<!-- // Logging -->
			<!-- TODO activate it if needed
                    <dependency>
                        <groupId>org.gridgain</groupId>
                        <artifactId>gridgain-platform</artifactId>
                        <version>${gridgain.platform.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.gridgain</groupId>
                        <artifactId>gridgain-datagrid</artifactId>
                        <version>${gridgain.version}</version>
                        <type>pom</type>
                    </dependency>
                    -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.weaver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
				<optional>true</optional>
				<!-- needed only for annotations -->
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
				<artifactId>owasp-java-html-sanitizer</artifactId>
				<version>${owasp.java.html.sanitizer.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.ws</groupId>
				<artifactId>jaxws-rt</artifactId>
				<version>${jaxws.rt.version}</version>
			</dependency>
			<!--
                    <dependency>
                        <groupId>com.pmease</groupId>
                        <artifactId>xmt</artifactId>
                        <version>${xmt.version}</version>
                    </dependency>
                    -->
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-core</artifactId>
				<version>${drools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-compiler</artifactId>
				<version>${drools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-api</artifactId>
				<version>${drools.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-decisiontables</artifactId>
				<version>${drools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-templates</artifactId>
				<version>${drools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-transformer-xstream</artifactId>
				<version>${drools.transformer.xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<!--
                    <dependency>
                        <groupId>com.yourkit</groupId>
                        <artifactId>yjp-controller-api-redist</artifactId>
                        <version>${yourkit.version}</version>
                        <scope>test</scope>
                    </dependency>
                    -->
			<dependency>
				<groupId>jaxen</groupId>
				<artifactId>jaxen</artifactId>
				<version>${jaxen.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jaxen</artifactId>
						<groupId>jaxen</groupId>
					</exclusion>
					<!-- http://jira.codehaus.org/browse/JAXEN-217 -->
					<exclusion>
						<artifactId>maven-cobertura-plugin</artifactId>
						<groupId>maven-plugins</groupId>
					</exclusion>
					<exclusion>
						<artifactId>maven-findbugs-plugin</artifactId>
						<groupId>maven-plugins</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda.time.version}</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.stax-utils</groupId>
				<artifactId>stax-utils</artifactId>
				<version>${stax.util.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jsr173-ri</artifactId>
						<groupId>com.bea.xml</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sf.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${neethi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>fop</artifactId>
				<version>${fop.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>${org.jdom.version}</version>
			</dependency>
			<!--
                    <dependency>
                        <groupId>jdom</groupId>-->
			<!-- necessary to force the relocation to org.jdom -->
			<!--
                        <artifactId>jdom</artifactId>
                        <version>${jdom.version}</version>
                    </dependency>
                    -->
			<dependency>
				<groupId>org.jvnet.hudson</groupId>
				<artifactId>jtidy</artifactId>
				<version>${jtidy.version}</version>
			</dependency>
			<dependency>
				<groupId>xpp3</groupId>
				<artifactId>xpp3_min</artifactId>
				<version>${xpp3.min.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax.annotation.api}</version>
			</dependency>
			<!-- // Misc -->
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${org.assertj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>${ehcache.version}</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<!-- TODO use jboss-javaee-6.0-with-tools instead of jboss-javaee-6.0-->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${hibernate.jpa20.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>${hibernate.jpa21.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.core</artifactId>
				<version>${jacoco.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- The newrelic-java.zip dependency. -->
			<dependency>
				<groupId>com.newrelic.agent.java</groupId>
				<artifactId>newrelic-java</artifactId>
				<version>${newrelic.version}</version>
				<type>zip</type>
				<scope>provided</scope>
			</dependency>
			<!--
                        <dependency>
                            <groupId>com.excilys.ebi.gatling</groupId>
                            <artifactId>gatling-recorder</artifactId>
                            <version>${gatling.version}</version>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.glassfish.main.extras</groupId>
				<artifactId>glassfish-embedded-all</artifactId>
				<version>${glassfish.embedded.all.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.faces</groupId>
				<artifactId>jboss-jsf-api_2.1_spec</artifactId>
				<version>${org.jboss.spec.javax.faces.jsf.api.2.1.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.faces</groupId>
				<artifactId>jboss-jsf-api_2.0_spec</artifactId>
				<version>${org.jboss.spec.javax.faces.jsf.api.2.0.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.el</groupId>
				<artifactId>jboss-el-api_2.2_spec</artifactId>
				<version>${org.jboss.spec.javax.jboss.el.api.2.2.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>${xalan.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- see pom in database -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate</artifactId>
				<version>${hibernate.legacy.version}</version>
				<!--<scope>compile</scope> error when deployed in jboss -->
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<artifactId>jta</artifactId>
						<groupId>javax.transaction</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm-attrs</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>cglib</artifactId>
						<groupId>cglib</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate.common</groupId>
				<artifactId>hibernate-commons-annotations</artifactId>
				<version>${hibernate.common.commons.annotations.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- validator-legacy forces an earlier version of annotations. Change scope if < JBoss6 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-commons-annotations</artifactId>
				<version>${hibernate.commons.annotations.version}</version>
				<scope>provided</scope>
				<!-- Some transitive dependencies of Hibernate 3 are available
                                 in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib, but instead
                                 depend on the modules -->
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>persistence-api</artifactId>
						<groupId>javax.persistence</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- JSR-303 (Bean Validation) Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss AS 7 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
				<scope>provided</scope>
				<!-- Some transitive dependencies of Hibernate 3 are available
                                    in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib, but instead
                                    depend on the modules -->
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-logging</artifactId>
						<groupId>org.jboss.logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.entitymanager.version}</version>
				<scope>provided</scope>
				<!-- Some transitive dependencies of Hibernate 3 are available
                                in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib, but instead
                                depend on the modules -->
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ejb3-persistence</artifactId>
						<groupId>org.hibernate</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javassist</artifactId>
						<groupId>jboss</groupId>
					</exclusion>
					<exclusion>
						<artifactId>persistence-api</artifactId>
						<groupId>javax.persistence</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jta</artifactId>
						<groupId>javax.transaction</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>javassist</artifactId>
						<groupId>javassist</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>cglib</artifactId>
						<groupId>cglib</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-logging</artifactId>
						<groupId>org.jboss.logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-interceptors-api_1.1_spec</artifactId>
						<groupId>org.jboss.spec.javax.interceptor</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jboss-transaction-api_1.1_spec</artifactId>
						<groupId>org.jboss.spec.javax.transaction</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- With these dependencies here it is possible to use annotation processing
                        in Eclipse: Project -> Properties -> Java Compiler -> AnnotationProcessing
                        -> Enable Annotation Processing. Set target/generated-sources/annotations
                        as the generated source directory -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>${hibernate.jpamodelgen.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.core.version}</version>
				<scope>provided</scope>
				<!-- Some transitive dependencies of Hibernate 3 are available
                                in JBoss AS 7 as modules, so we don't include them in WEB-INF/lib, but instead
                                depend on the modules -->
				<exclusions>
					<exclusion>
						<artifactId>antlr</artifactId>
						<groupId>antlr</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>dom4j</artifactId>
						<groupId>dom4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>jta</artifactId>
						<groupId>javax.transaction</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>ehcache</artifactId>
						<groupId>net.sf.ehcache</groupId>
					</exclusion>
					<exclusion>
						<artifactId>junit</artifactId>
						<groupId>junit</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>asm-attrs</artifactId>
						<groupId>asm</groupId>
					</exclusion>
					<exclusion>
						<artifactId>cglib</artifactId>
						<groupId>cglib</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- TODO removed old API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- seems to be the same as jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- TODO remove not needed anymore old impl
                        <dependency>
                                <groupId>javax.faces</groupId>
                                <artifactId>jsf-api</artifactId>
                                <version>${jsf.api.version}</version>
                                <scope>provided</scope>
                                -->
			<!-- <scope>compile</scope> compile needed for jetty -->
			<!--
                        </dependency>
                        -->
			<!-- TODO remove not needed anymore old impl
                        <dependency>
                                <groupId>javax.faces</groupId>
                                <artifactId>jsf-impl</artifactId>
                                <version>${jsf.impl.version}</version>
                                <scope>provided</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>com.sun.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<version>${sun.jsf.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.sun.faces</groupId>
				<artifactId>jsf-impl</artifactId>
				<version>${sun.jsf.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-j2ee</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-ejb3-client</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-ejb3x</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss</groupId>
				<artifactId>ejb3-persistence</artifactId>
				<version>${jboss.ejb3.persistence.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-annotations-ejb3</artifactId>
				<version>${jboss.annotations.ejb3.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.interceptor</groupId>
				<artifactId>jboss-interceptors-api_1.1_spec</artifactId>
				<version>${jboss.interceptors.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss AS 7 -->
			<dependency>
				<groupId>org.jboss.spec.javax.annotation</groupId>
				<artifactId>jboss-annotations-api_1.1_spec</artifactId>
				<version>${jboss.annotations.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss AS 7 -->
			<dependency>
				<groupId>org.jboss.spec.javax.ws.rs</groupId>
				<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
				<version>${jboss.jaxrs.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec.javax.ejb</groupId>
				<artifactId>jboss-ejb-api_3.1_spec</artifactId>
				<version>${jboss.ejb.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-serialization</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-remoting</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-aop-jdk50-client</artifactId>
				<version>${jboss4.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss.jboss-embeddable-ejb3</groupId>
				<artifactId>hibernate-all</artifactId>
				<version>${jboss.embeddable.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss.jboss-embeddable-ejb3</groupId>
				<artifactId>jboss-ejb3-all</artifactId>
				<version>${jboss.embeddable.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jboss.jboss-embeddable-ejb3</groupId>
				<artifactId>thirdparty-all</artifactId>
				<version>${jboss.embeddable.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- seam embedded container -->
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>hibernate-all</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml.apis.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- // Guice -->
			<!-- Javax -->
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-activation_1.1_spec</artifactId>
				<version>${geronimo.activation.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-annotation_1.0_spec</artifactId>
				<version>${geronimo.annotation.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ejb_2.1_spec</artifactId>
				<version>${geronimo.ejb.2.1.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ejb_3.0_spec</artifactId>
				<version>${geronimo.ejb.3.0.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee_1.4_spec</artifactId>
				<version>${geronimo.j2ee.specs.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jaxws_2.1_spec</artifactId>
				<version>${geronimo.jaxws.2.1.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jaxws_2.2_spec</artifactId>
				<version>${geronimo.jaxws.2.2.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-stax-api_1.0_spec</artifactId>
				<version>${geronimo.stax.api.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
				<version>${geronimo.ws.metadata.spec.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<!-- This artifact was moved to: javax.servlet Â» javax.servlet-api -->
				<version>${servlet.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.xml.soap</groupId>
				<artifactId>saaj-api</artifactId>
				<version>${saaj.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.xml.stream</groupId>
				<artifactId>stax-api</artifactId>
				<version>${javax.stax.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.newrelic.agent.java</groupId>
				<artifactId>newrelic-agent</artifactId>
				<version>${newrelic.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.fitnesse</groupId>
				<artifactId>fitnesse</artifactId>
				<version>${fitnesse.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.fitnesse.plugins</groupId>
				<artifactId>maven-classpath-plugin</artifactId>
				<version>${maven.classpath.fitnesse.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib.nodep.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.core.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>backport-util-concurrent</groupId>
				<artifactId>backport-util-concurrent</artifactId>
				<version>${backport.util.concurrent.version}</version>
				<scope>runtime</scope>
				<!--<scope>compile</scope>-->
			</dependency>
			<!-- commons-httpclient moved to org.apache.httpcomponents httpclient -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons.httpclient.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons.dbcp.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>${commons.pool.version}</version>
				<scope>runtime</scope>
				<!--<scope>compile</scope>-->
			</dependency>
			<dependency>
				<groupId>oro</groupId>
				<artifactId>oro</artifactId>
				<version>${oro.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
				<scope>runtime</scope>
				<!-- Same jars included twice in the dependencies with different versions -->
				<exclusions>
					<exclusion>
						<artifactId>bcprov-jdk14</artifactId>
						<groupId>org.bouncycastle</groupId>
					</exclusion>
					<exclusion>
						<artifactId>bcmail-jdk14</artifactId>
						<groupId>org.bouncycastle</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>displaytag</groupId>
				<artifactId>displaytag</artifactId>
				<version>${displaytag.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<artifactId>standard</artifactId>
						<groupId>taglibs</groupId>
					</exclusion>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jbossall-client</artifactId>
				<version>${jbossall.client.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!--dependency>
                            <groupId>org.jboss</groupId>
                            <artifactId>jboss-aspect-jdk50-client</artifactId>
                            <version>4.0.5-GA</version>
                            <scope>provided</scope>
                        </dependency-->
			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jnp-client</artifactId>
				<version>${jboss4.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>annogen</groupId>
				<artifactId>annogen</artifactId>
				<version>${annogen.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${ws.commons.neethi.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<artifactId>xercesImpl</artifactId>
						<groupId>xerces</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-impl</artifactId>
				<version>${axiom.impl.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xercesImpl</artifactId>
						<groupId>xerces</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.ws.commons.axiom</groupId>
				<artifactId>axiom-dom</artifactId>
				<version>${axiom.dom.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- // Caucho Hessian -->
			<!--
            <dependency>
                <groupId>httpcomponents-httpcore</groupId>
                <artifactId>jakarta-httpcore</artifactId>
                <version>${jakarta.httpcore.version}</version>
                <scope>runtime</scope>
            </dependency>
            -->
			<dependency>
				<groupId>org.apache.woden</groupId>
				<artifactId>woden-impl-om</artifactId>
				<version>${woden.impl.om.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>stax</groupId>
				<artifactId>stax-api</artifactId>
				<version>${stax.api.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- Log4J Adapter for SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<!-- circular dependency -->
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-jdk14</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
				<exclusions>
					<!-- circular dependency -->
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a
                          Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or a
                          collection) of artifacts. We use this here so that we always get the correct
                          versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can read
                          this as the JBoss stack of the Java EE 6 APIs). You can actually use this
                          stack with any version of JBoss AS that implements Java EE 6, not just JBoss
                          AS 7! -->
			<!-- manage wrong hibernate-jpa-2.0-api with junit openejb
                        <dependency>
                                <groupId>org.jboss.spec</groupId>
                                <artifactId>jboss-javaee-6.0</artifactId>
                                <version>${org.jboss.spec.jboss.javaee6.version}</version>
                                <type>pom</type>
                                <scope>import</scope>
                        </dependency>
                        -->
			<!-- Arquillian : http://arquillian.org/guides/getting_started_fr -->
			<!-- VERSION ARE http://central.maven.org/maven2/org/jboss/bom/jboss-bom-parent/1.0.7.Final/jboss-bom-parent-1.0.7.Final.pom -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
                                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                                of artifacts. We use this here so that we always get the correct versions
                                of artifacts. Here we use the jboss-javaee-6.0-with tools stack (you can
                                read this as the JBoss stack of the Java EE 6 APIs, with some extras tools
                                for your project, such as Arquillian for testing) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${org.jboss.bom.jboss.javaee6.with.tools.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- JBoss distributes a complete set of Java EE 6 APIs including
                            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                            a collection) of artifacts. We use this here so that we always get the correct
                            versions of artifacts. Here we use the jboss-javaee-6.0-with-hibernate stack
                            (you can read this as the JBoss stack of the Java EE Web Profile 6 APIs with
                            extras from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${org.jboss.bom.jboss.javaee6.with.hibernate.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Override dependency resolver with latest version.
                         This must go *BEFORE* the Arquillian BOM. -->
			<dependency>
				<groupId>org.jboss.shrinkwrap</groupId>
				<artifactId>shrinkwrap-bom</artifactId>
				<version>${org.jboss.shrinkwrap.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${org.jboss.shrinkwrap.resolver.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.descriptors</groupId>
				<artifactId>shrinkwrap-descriptors-bom</artifactId>
				<version>${org.jboss.shrinkwrap.descriptors.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- this included in jboss-javaee-6.0-with-tools -->
			<!-- see http://central.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.1.4.Final/arquillian-bom-1.1.4.Final.pom -->
			<!-- NOK with 1.1.4.Final arquillian junit java.lang.RuntimeException: Could not create new instance of class org.jboss.arquillian.test.impl.EventTestRunnerAdaptor -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${org.jboss.arquillian.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.selenium</groupId>
				<artifactId>selenium-bom</artifactId>
				<version>${selenium.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring4.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Similarly to the JBoss Java EE 6 BOM above, the RichFaces BOM specifies the
                            versions of artifacts required for using RichFaces in your project. -->
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${org.richfaces.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<!--<scope>provided</scope>-->
			</dependency>

			<dependency>
				<groupId>org.jbpm</groupId>
				<artifactId>jbpm</artifactId>
				<version>${jbpm.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-firefox-driver</artifactId>
				<version>${selenium.firefox.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-api</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-support</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-safari-driver</artifactId>
				<version>${selenium.safari.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-iphone-driver</artifactId>
				<version>${selenium.iphone.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-ie-driver</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-htmlunit-driver</artifactId>
				<version>${selenium.htmlunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-android-driver</artifactId>
				<version>${selenium.android.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-chrome-driver</artifactId>
				<version>${selenium.driver.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-server</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.saucelabs</groupId>
				<artifactId>sauce_junit</artifactId>
				<version>${saucelabs.junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.saucelabs.selenium</groupId>
				<artifactId>sauce-ondemand-driver</artifactId>
				<version>${saucelabs.selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.saucelabs.selenium</groupId>
				<artifactId>selenium-client-factory</artifactId>
				<version>${saucelabs.selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<version>${jacoco.agent.version}</version>
				<type>jar</type>
				<classifier>runtime</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
			<!-- Concurrent JUnit -->
			<dependency>
				<groupId>com.vmlens</groupId>
				<artifactId>concurrent-junit</artifactId>
				<version>${concurrent.junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- in order to use @net.jcip.annotations.NotThreadSafe in junit test -->
			<dependency>
				<groupId>com.github.stephenc.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>${jcip.annotations.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- TODO activate it if needed
                        <dependency>
                            <groupId>org.gridgain</groupId>
                            <artifactId>gridgain</artifactId>
                            <version>${gridgain.version}</version>
                            <scope>test</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.databene</groupId>
				<artifactId>feed4junit</artifactId>
				<version>${feed4junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>httpunit</groupId>
				<artifactId>httpunit</artifactId>
				<version>${httpunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junitperf</groupId>
				<artifactId>junitperf</artifactId>
				<version>${junitperf.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils-core</artifactId>
				<version>${unitils.core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.skyscreamer</groupId>
				<artifactId>jsonassert</artifactId>
				<version>${jsonassert.version}</version>
				<scope>test</scope>
			</dependency>
			<!--
                        <dependency>
                                <groupId>com.mockrunner</groupId>
                                <artifactId>mockrunner-jdbc</artifactId>
                                <version>${mockrunner.version}</version>
                                <classifier>jdk15</classifier>
                                <scope>test</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- NOT needed instead remove jmock-junit4 because it does not work with jacoco
                        <dependency>
                                <groupId>org.jmock</groupId>
                                <artifactId>jmock-junit4</artifactId>
                                <version>${jmock.version}</version>
                                <scope>test</scope>
                        </dependency>
                        -->
			<!--
                        Please use jmockit instead
                        http://jmockit.github.io/MockingToolkitComparisonMatrix.html
                        -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- googlecode.jmockit moved to org.jmockit
                        <dependency>
                                <groupId>com.googlecode.jmockit</groupId>
                                <artifactId>jmockit</artifactId>
                                <version>${googlecode.jmockit.version}</version>
                                <scope>test</scope>
                        </dependency>
                        -->
			<!-- jmockit must be after junit in the classpath -->
			<dependency>
				<groupId>org.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>${jmockit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>${hamcrest.all.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-core-uberjar</artifactId>
				<version>${cargo.core.uberjar.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-mock</artifactId>
				<version>${spring.mock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>xmlunit</groupId>
				<artifactId>xmlunit</artifactId>
				<version>${xmlunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<!--<classifier>jdk15</classifier>-->
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-core</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-groovy</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-openejb</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-guice</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-weld</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-picocontainer</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy.modules.http-builder</groupId>
				<artifactId>http-builder</artifactId>
				<version>${http.builder.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.bean-matchers</groupId>
				<artifactId>bean-matchers</artifactId>
				<version>${bean.matchers.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>mockito-core</artifactId>
						<groupId>org.mockito</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.google.code.protoj</groupId>
				<artifactId>protoj-nodep</artifactId>
				<version>${protoj.nodep.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.junit</groupId>
				<artifactId>arquillian-junit-container</artifactId>
				<version>${org.jboss.arquillian.junit.version}</version>
				<scope>test</scope>
				<!--
                            <exclusions>
                                <exclusion>
                                    <artifactId>arquillian-core-api</artifactId>
                                    <groupId>org.jboss.arquillian.core</groupId>
                                </exclusion>
                            </exclusions>
                            -->
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.core</groupId>
				<artifactId>arquillian-core-api</artifactId>
				<version>${org.jboss.arquillian.core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.testng</groupId>
				<artifactId>arquillian-testng-container</artifactId>
				<version>${org.jboss.arquillian.junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.protocol</groupId>
				<artifactId>arquillian-protocol-servlet</artifactId>
				<version>${org.jboss.arquillian.junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!--
                        <dependency>
                            <groupId>org.jboss.arquillian</groupId>
                            <artifactId>arquillian-spi</artifactId>
                            <version>${org.jboss.arquillian.spi.version}</version>
                            <scope>test</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-arquillian-container-managed</artifactId>
				<version>${org.jboss.as.arquillian.container.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-arquillian-container-remote</artifactId>
				<version>${org.jboss.as.arquillian.container.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-controller-client</artifactId>
				<version>${org.jboss.as.arquillian.container.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
				<version>${org.jboss.arquillian.weld.ee.embedded.version}</version>
				<scope>test</scope>
			</dependency>
			<!--
                        <dependency>
                            <groupId>org.jboss.arquillian.testenricher</groupId>
                            <artifactId>arquillian-testenricher-cdi</artifactId>
                            <version>1.0.0.CR7</version>
                            <scope>test</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-core</artifactId>
				<version>${org.jboss.weld.core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-jacoco</artifactId>
				<version>${org.jboss.arquillian.jacoco.version}</version>
				<scope>test</scope>
			</dependency>
			<!--
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-api</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-spi</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-api-maven</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-spi-maven</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-api-maven-archive</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jboss.shrinkwrap.resolver</groupId>
                            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
                            <version>${org.jboss.shrinkwrap.resolver.version}</version>
                            <scope>test</scope>
                        </dependency>
                        -->
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-glassfish-embedded-3.1</artifactId>
				<version>${org.jboss.arquillian.glassfish.embedded.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Spring -->
			<!-- to remove for spring 3.x -->
			<!--
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring</artifactId>
                            <version>${spring2.version}</version>
                            <type>jar</type>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-agent</artifactId>
                            <version>${spring.agent.version}</version>
                        </dependency>
                        -->
			<!-- Support for testing Spring applications with tools such as JUnit and TestNG This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.test.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>el-impl</artifactId>
				<version>${el.impl.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>jboss-embedded-api</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam.embedded</groupId>
				<artifactId>thirdparty-all</artifactId>
				<version>${seam.embedded.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- openejb embedded container -->
			<dependency>
				<groupId>org.apache.openejb</groupId>
				<artifactId>openejb-core</artifactId>
				<version>${openejb.core.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>openjpa</artifactId>
						<groupId>org.apache.openjpa</groupId>
					</exclusion>
					<exclusion>
						<artifactId>hsqldb</artifactId>
						<groupId>hsqldb</groupId>
					</exclusion>
					<exclusion>
						<artifactId>junit</artifactId>
						<groupId>junit</groupId>
					</exclusion>
					<exclusion>
						<artifactId>quartz</artifactId>
						<groupId>quartz</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>no.knowit.seam</groupId>
				<artifactId>seam-utils-ejb</artifactId>
				<version>${seam.utils.version}</version>
				<type>ejb</type>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>persistence-api</artifactId>
						<groupId>javax.persistence</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>no.knowit.seam</groupId>
				<artifactId>seam-utils-openejb</artifactId>
				<version>${seam.utils.version}</version>
				<type>ejb</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>de.flapdoodle.embed</groupId>
				<artifactId>de.flapdoodle.embed.mongo</artifactId>
				<version>${embed.mongo.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-testkit${scala.suffix}</artifactId>
				<version>${akka.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- // Jetty8 and Jetty9 -->
			<!-- Jetty for test -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-server-impl</artifactId>
				<version>${jetty9.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<repositories>
		<!--
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>server-forge-release</id>
            <name>External Staging Repository</name>
            <url>dav:https://repository-nabla.forge.cloudbees.com/release</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
                <checksumPolicy>ignore</checksumPolicy>
            </snapshots>
            <id>server-forge-snapshot</id>
            <name>External Snapshot Repository</name>
            <url>dav:https://repository-nabla.forge.cloudbees.com/snapshot</url>
            <layout>default</layout>
        </repository>
        -->
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://albandrieu.com:8081/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>ignore</checksumPolicy>
			</snapshots>
			<id>nexus-snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<url>http://albandrieu.com:8081/nexus/content/repositories/snapshots</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<!--
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>server-forge-release</id>
            <url>dav:https://repository-nabla.forge.cloudbees.com/release</url>
        </pluginRepository>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>cloudbees-public-release</id>
            <url>http://repository-cloudbees.forge.cloudbees.com/public-release</url>
        </pluginRepository>
        -->
		<pluginRepository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>nexus-releases</id>
			<url>http://albandrieu.com:8081/nexus/content/repositories/releases</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>nexus-snapshots</id>
			<url>http://albandrieu.com:8081/nexus/content/repositories/snapshots</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<extensions>
			<!-- WebDAV for remote deployment -->
			<!-- sonar desactivation required -->
			<!-- not working with maven 3 mvn site
          <extension>
                  <groupId>org.apache.maven.wagon</groupId>
                  <artifactId>wagon-webdav</artifactId>
                  <version>${wagon.webdav.plugin.version}</version>
          </extension>
          -->
			<!-- comment to avoid basic authentication scheme selected -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>${wagon.webdav.jackrabbit.version}</version>
			</extension>
			<extension>
				<groupId>org.jvnet.wagon-svn</groupId>
				<artifactId>wagon-svn</artifactId>
				<version>${wagon.svn.plugin.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${wagon.ftp.plugin.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${wagon.ssh.plugin.version}</version>
			</extension>
			<!-- Needed for dashboard-maven-plugin and jalopy-maven-plugin and maven-checkstyle-plugin -->
			<extension>
				<groupId>com.nabla.project</groupId>
				<artifactId>build-tools</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven.eclipse.plugin.version}</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle.mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- sample for some module
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-compiler-plugin</artifactId>
                                        <versionRange>[0.0,)</versionRange>
                                        <goals>
                                            <goal>testCompile</goal>
                                            <goal>compile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.groovy</groupId>
										<artifactId>groovy-eclipse-compiler</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>add-groovy-build-paths</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.zeroturnaround</groupId>
										<artifactId>jrebel-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.kongchen</groupId>
										<artifactId>swagger-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.commonjava.maven.plugins</groupId>
										<artifactId>directory-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>highest-basedir</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.owasp</groupId>
										<artifactId>dependency-check-maven</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.sebastian-daschner</groupId>
										<artifactId>jaxrs-analyzer-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>analyze-jaxrs</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.alchim31.maven</groupId>
										<artifactId>scala-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!--
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[0.0,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                    <action>
                                        <execute>
                                            <runOnIncremental>false</runOnIncremental>
                                        </execute>
                                    </action>
                                </pluginExecution>
                                -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mobilvox.ossi.mojo</groupId>
										<artifactId>maven-js-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>compress-custom</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jvnet.jaxb2.maven2</groupId>
										<artifactId>maven-jaxb2-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-cartridge-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>test</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromdapp-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
											<goal>clean-structure</goal>
											<goal>instrument-scripts</goal>
											<goal>eclipse</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- eclipse has now a m2e connector got to https://marketplace.eclipse.org/content/m2e-connector-maven-dependency-plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>copy</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- see http://stackoverflow.com/questions/8706017/maven-dependency-plugin-goals-copy-dependencies-unpack-is-not-supported-b -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.andromda.maven.plugins</groupId>
										<artifactId>andromda-bootstrap-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>hibernate3-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>hbm2ddl</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.liquibase</groupId>
										<artifactId>liquibase-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>dbDoc</goal>
											<goal>update</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>read-project-properties</goal>
											<goal>write-active-profile-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-shade-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>shade</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>groovy-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>execute</goal>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.gmaven</groupId>
										<artifactId>gmaven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>execute</goal>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.sonatype.flexmojos</groupId>
										<artifactId>flexmojos-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>compile-swf</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>apt-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>process</goal>
											<goal>test-process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-javadoc-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>javadoc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo.jspc</groupId>
										<artifactId>jspc-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>process-sources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.ctp.seam.maven</groupId>
										<artifactId>maven-hotdeploy-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-java2ws-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>java2ws</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<!-- eclipse has now a m2e connector -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
											<goal>parse-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
										<artifactId>maven-java-formatter-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>vaadin-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>update-widgetset</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.kindleit</groupId>
										<artifactId>maven-gae-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>maven-processor-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.antlr</groupId>
										<artifactId>antlr3-maven-plugin</artifactId>
										<versionRange>[${maven.antlr3.plugin.version},)</versionRange>
										<goals>
											<goal>antlr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>xml-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>transform</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.felix</groupId>
										<artifactId>maven-bundle-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jboss.errai</groupId>
										<artifactId>jacoco-gwt-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-codegen-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>wsdl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.eirslett</groupId>
										<artifactId>frontend-maven-plugin</artifactId>
										<versionRange>[0.0,)</versionRange>
										<goals>
											<goal>install-node-and-npm</goal>
											<goal>npm</goal>
											<goal>grunt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${maven.nexus.staging.plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<!-- The Base URL of Nexus instance where we want to stage -->
						<nexusUrl>http://albandrieu.com:8081/nexus</nexusUrl>
						<!-- The server "id" element from settings to use authentication from -->
						<serverId>local-nexus</serverId>
						<tags>
							<localUsername>${env.USER}</localUsername>
							<javaVersion>${java.version}</javaVersion>
						</tags>
						<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
						<skipStaging>true</skipStaging>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${maven.properties.plugin.version}</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- deprecated
                <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>sonar-maven-plugin</artifactId>
                  <version>${maven.sonar.plugin.version}</version>
                </plugin>
                -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${maven.sonar.plugin.version}</version>
				</plugin>
				<plugin>
					<!--<groupId>com.excilys.ebi.gatling</groupId>-->
					<groupId>io.gatling</groupId>
					<artifactId>gatling-maven-plugin</artifactId>
					<version>${maven.gatling.plugin.version}</version>
				</plugin>
				<!-- enable scalatest -->
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>${maven.scalatest.plugin.version}</version>
					<executions>
						<execution>
							<id>test</id>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						<junitxml>.</junitxml>
						<filereports>WDF TestSuite.txt</filereports>
					</configuration>
				</plugin>
				<!-- https://blog.codecentric.de/en/2014/01/automating-jmeter-tests-maven-jenkins/-->
				<!--
        mvn jmeter:gui
        mvn jmeter:jmeter
        -->
				<plugin>
					<groupId>com.lazerycode.jmeter</groupId>
					<artifactId>jmeter-maven-plugin</artifactId>
					<version>${maven.jmeter.plugin.version}</version>
					<executions>
						<execution>
							<id>jmeter-tests</id>
							<!--<phase>verify</phase>-->
							<phase>integration-test</phase>
							<goals>
								<goal>jmeter</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>kg.apc</groupId>
							<artifactId>jmeter-plugins</artifactId>
							<version>1.0.0</version>
							<exclusions>
								<!--
                    Unfortunately some transitive dependencies cannot be found on mvncentral
                    and we have to explicitly exclude them.
                    For a complete list, see https://github.com/mlex/jmeter-maven-example/
                -->
								<exclusion>
									<artifactId>perfmon</artifactId>
									<groupId>kg.apc</groupId>
								</exclusion>
								<exclusion>
									<artifactId>hadoop-core</artifactId>
									<groupId>org.apache.hadoop</groupId>
								</exclusion>
								<exclusion>
									<artifactId>hbase</artifactId>
									<groupId>org.apache.hbase</groupId>
								</exclusion>
								<!--
                    These dependencies would override direct JMeter dependencies,
                    which results in version conflicts (e.g. NoSuchMethodError on jmeter startup
                -->
								<exclusion>
									<artifactId>jorphan</artifactId>
									<groupId>org.apache.jmeter</groupId>
								</exclusion>
								<exclusion>
									<artifactId>bsf-api</artifactId>
									<groupId>org.apache.bsf</groupId>
								</exclusion>
								<exclusion>
									<artifactId>bcmail-jdk15</artifactId>
									<groupId>org.bouncycastle</groupId>
								</exclusion>
								<exclusion>
									<artifactId>bcprov-jdk15</artifactId>
									<groupId>org.bouncycastle</groupId>
								</exclusion>
								<exclusion>
									<artifactId>activation</artifactId>
									<groupId>javax.activation</groupId>
								</exclusion>
								<exclusion>
									<artifactId>commons-logging</artifactId>
									<groupId>commons-logging</groupId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
					<configuration>
						<!--
                By default the test results are saved in a file
                /target/jmeter/results/<testname>-<timestamp>.jtl
                Further processing is easier without timestamp though.
            -->
						<testResultsTimestamp>false</testResultsTimestamp>
						<!--
                To simplify debugging, it is advisable to adapt the loglevel.
                The jmeter logs are written to the file jmeter.log.
            -->
						<overrideRootLogLevel>DEBUG</overrideRootLogLevel>
						<!--
                By default, the console output during a jmeter test run is suppressed.
                We want to display the progress using the listener "Generate Summary Results"
                (which periodically prints stats to stdout). Therefore we have to make sure,
                that the jmeter output is not suppressed.
            -->
						<suppressJMeterOutput>false</suppressJMeterOutput>
						<!--
                If tests fail (e.g. a http-request running into a timeout), the corresponding maven
                goal also fails (and subsequent goals aren't executed anymore). We want to create graphs
                from test-results, no matter if some requests failed or not, so we ignore jmeter failures.
            -->
						<ignoreResultFailures>true</ignoreResultFailures>
						<skipTests>${maven.test.skip}</skipTests>
						<!--<resultsDirectory>${project.base.directory}/target/jmeter/results</resultsDirectory>-->
						<propertiesUser>
							<webservice.host>${performancetest.webservice.host}</webservice.host>
							<webservice.port>${performancetest.webservice.port}</webservice.port>
							<webservice.path>${performancetest.webservice.path}</webservice.path>
							<webservice.connectTimeout>${performancetest.connectTimeout}</webservice.connectTimeout>
							<webservice.responseTimeout>${performancetest.responseTimeout}</webservice.responseTimeout>
							<threadCount>${performancetest.threadCount}</threadCount>
							<loopCount>${performancetest.threadCount}</loopCount>
						</propertiesUser>
						<propertiesJMeter>
							<jmeter.save.saveservice.thread_counts>true</jmeter.save.saveservice.thread_counts>
						</propertiesJMeter>
						<jmeterPlugins>
							<plugin>
								<groupId>kg.apc</groupId>
								<artifactId>jmeter-plugins</artifactId>
							</plugin>
						</jmeterPlugins>
					</configuration>
				</plugin>
				<!-- TODO https://github.com/codecentric/jmeter-graph-maven-plugin -->
				<!-- TODO https://github.com/mlex/jmeter-maven-example/blob/master/src/test/jmeter/SimpleWebservicePerformanceTest.jmx -->
				<plugin>
					<groupId>com.lazerycode.jmeter</groupId>
					<artifactId>jmeter-analysis-maven-plugin</artifactId>
					<version>${maven.jmeter.analysis.plugin.version}</version>
					<configuration>
						<source>${project.build.directory}/jmeter/results/jmeter.jtl</source>
					</configuration>
					<!--
                                    <executions>
                                        <execution>
                                            <id>create-html-report</id>
                                            <phase>integration-test</phase>
                                            <goals>
                                                <goal>analyze</goal>
                                            </goals>
                                        </execution>
                                    </executions>
                                    -->
				</plugin>
				<plugin>
					<groupId>de.codecentric</groupId>
					<artifactId>jmeter-graph-maven-plugin</artifactId>
					<version>${maven.jmeter.graph.plugin.version}</version>
					<executions>
						<execution>
							<id>create-graph-threads</id>
							<!--<phase>verify</phase>-->
							<phase>integration-test</phase>
							<goals>
								<goal>create-graph</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<inputFile>${project.build.directory}/jmeter/results/jmeter.jtl</inputFile>
						<graphs>
							<graph>
								<pluginType>ThreadsStateOverTime</pluginType>
								<width>800</width>
								<height>600</height>
								<outputFile>${project.build.directory}/jmeter/results/jmeter-ThreadsStateOverTime.png</outputFile>
							</graph>
							<graph>
								<pluginType>ResponseTimesOverTime</pluginType>
								<width>800</width>
								<height>600</height>
								<outputFile>${project.build.directory}/jmeter/results/jmeter-ResponseTimesOverTime.png</outputFile>
							</graph>
							<graph>
								<pluginType>TransactionsPerSecond</pluginType>
								<width>800</width>
								<height>600</height>
								<outputFile>${project.build.directory}/jmeter/results/jmeter-TransactionsPerSecond.png</outputFile>
							</graph>
						</graphs>
					</configuration>
				</plugin>
				<!--
                <plugin>
                    <groupId>org.apache.jmeter</groupId>
                    <artifactId>maven-jmeter-plugin</artifactId>
                    <version>1.0-GA</version>
                    <configuration>
                        <reportDir>${project.build.directory}/jmeter-reports</reportDir>
                    </configuration>
                </plugin>
                -->
				<!-- Allow proper editing in IDEs and display warnings for feature and deprecation etc, etc -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${maven.scala.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
					<!--
                                    <configuration>
                                        <args>
                                            <arg>-feature</arg>
                                            <arg>-deprecation</arg>
                                        </args>
                                        <jvmArgs>
                                            <jvmArg>-Xms64m</jvmArg>
                                            <jvmArg>-Xmx1024m</jvmArg>
                                        </jvmArgs>
                                    </configuration>
                                    -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven.gpg.plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--
                <plugin>
                    <groupId>com.ctp.seam.maven</groupId>
                    <artifactId>maven-hotdeploy-plugin</artifactId>
                    <version>${maven.hotdeploy.plugin.version}</version>
                </plugin>
                -->
				<plugin>
					<groupId>org.twdata.maven</groupId>
					<artifactId>maven-cli-plugin</artifactId>
					<version>${maven.cli.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.sebastian-daschner</groupId>
					<artifactId>jaxrs-analyzer-maven-plugin</artifactId>
					<version>${maven.jaxrs.analyzer.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>analyze-jaxrs</goal>
							</goals>
							<configuration>
								<backend>plaintext</backend>
								<deployedDomain>localhost</deployedDomain>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.github.kongchen</groupId>
					<artifactId>swagger-maven-plugin</artifactId>
					<version>${maven.swagger.plugin.version}</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<apiSources>
							<apiSource>
								<springmvc>false</springmvc>
								<!--<locations>com.github.kongchen.swagger.sample.wordnik.resource</locations>-->
								<locations>com.nabla.project.visma</locations>
								<schemes>http,https</schemes>
								<host>localhost:9090</host>
								<basePath>/api</basePath>
								<!--
                                                    <host>petstore.swagger.wordnik.com</host>
                                                    <basePath>/api</basePath>
                                                    -->
								<info>
									<title>Swagger Maven Plugin Sample</title>
									<version>v1</version>
									<description>This is a sample</description>
									<termsOfService>http://www.github.com/kongchen/swagger-maven-plugin</termsOfService>
									<contact>
										<email>kongchen@gmail.com</email>
										<name>Kong Chen</name>
										<url>http://kongch.com</url>
									</contact>
									<license>
										<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
										<name>Apache 2.0</name>
									</license>
								</info>
								<!-- Support classpath or file absolute path here.
                                                    1) classpath e.g: "classpath:/markdown.hbs", "classpath:/templates/hello.html"
                                                    2) file e.g: "${basedir}/src/main/resources/markdown.hbs",
                                                        "${basedir}/src/main/resources/template/hello.html" -->
								<templatePath>${basedir}/templates/strapdown.html.hbs</templatePath>
								<outputPath>${basedir}/build/swagger/document.html</outputPath>
								<swaggerDirectory>${basedir}/build/swagger/swagger-ui</swaggerDirectory>
							</apiSource>
						</apiSources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${maven.frontend.plugin.version}</version>
					<!--
                    <configuration>
                        <nodeVersion>v${node.version}</nodeVersion>
                        <npmVersion>${npm.version}</npmVersion>
                        <yarnVersion>v${yarn.version}</yarnVersion>
                        <nodeDownloadRoot>http://home.nabla.mobi/html/download/nodejs/</nodeDownloadRoot>
                        <npmDownloadRoot>http://home.nabla.mobi/html/download/npm/-/</npmDownloadRoot>
                        <yarnDownloadRoot>http://home.nabla.mobi/html/download//yarn/</yarnDownloadRoot>
                    </configuration>
                    -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant</artifactId>
							<version>${ant.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-trax</artifactId>
							<version>${ant.trax.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-apache-regexp</artifactId>
							<version>${ant.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<compilerVersion>${maven.compiler.source}</compilerVersion>
						<meminitial>128m</meminitial>
						<maxmem>512m</maxmem>
						<fork>${maven.compiler.fork}</fork>
						<debug>${maven.compiler.debug}</debug>
						<debuglevel>lines,vars,source</debuglevel>
						<optimize>${maven.compiler.optimize}</optimize>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<executable>${java.home}/bin/javac</executable> WARNING define in main/pom.xml -->
						<compilerArgument>-Xlint:cast,unchecked,fallthrough,finally,serial</compilerArgument>
						<!--
                                                        <verbose>true</verbose> <excludes>
                                                        <exclude>**/*Point*.java</exclude> </excludes>
                                                -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>${maven.toolchains.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>toolchain</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<toolchains>
							<jdk>
								<version>[1.8,)</version>
								<!--<vendor>sun</vendor>-->
							</jdk>
						</toolchains>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-repository-plugin</artifactId>
					<version>${maven.repository.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven.archetype.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
					<configuration>
						<createChecksum>true</createChecksum>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
					<!--
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-jgit</artifactId>
                            <version>${maven.scm.provider.jgit.version}</version>
                        </dependency>
                    </dependencies>
                    -->
					<configuration>
						<!--<pushChanges>false</pushChanges>-->
						<localCheckout>true</localCheckout>
						<useReleaseProfile>true</useReleaseProfile>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>true</useReleaseProfile>
						<arguments>-Prelease</arguments>
						<!--<preparationGoals>clean install</preparationGoals>-->
						<!--<tagBase>https://alban.googlecode.com/svn/mavenrepo/releases</tagBase>-->
						<tagNameFormat>v@{project.version}</tagNameFormat>
						<checkModificationExcludes>
							<checkModificationExclude>**/*.log</checkModificationExclude>
						</checkModificationExcludes>
						<!--<allowTimestampedSnapshots>true</allowTimestampedSnapshots>-->
						<!--
                        <providerImplementations>
                            <git>jgit</git>
                        </providerImplementations>
                        -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-jdk</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<!-- minimum version is 2.0.7, higher versions allowed -->
										<version>[${maven.version},]</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<message>################################################################################
                                                                                    # To build Na, laenvironment variable JAVA_HOME must
                                                                                    point to JDK ${jdkVersion}
                                                                                    You need at least Java ${jdkLevel}!#
                                                                                    ################################################################################</message>
										<!-- minimum version is 1.5, higher versions allowed -->
										<version>[${jdkVersion},]</version>
									</requireJavaVersion>
									<DependencyConvergence></DependencyConvergence>
									<requirePluginVersions>
										<message>Best Practice is to always define plugin versions!</message>
										<banLatest>true</banLatest>
										<banRelease>true</banRelease>
										<banTimestamps>true</banTimestamps>
										<banSnapshots>false</banSnapshots>
										<phases>clean,deploy,site</phases>
									</requirePluginVersions>
									<requireReleaseDeps>
										<message>No Snapshots Allowed!</message>
										<!--
                                                                            <excludes>
                                                                              <exclude>org.apache.maven:maven-core</exclude>
                                                                              <exclude>org.apache.maven.plugins:*</exclude>
                                                                            </excludes>
                                                                            -->
									</requireReleaseDeps>
									<requireReleaseVersion>
										<message>No Snapshots Allowed!</message>
									</requireReleaseVersion>
									<requireSameVersions>
										<plugins>
											<plugin>org.apache.maven.plugins:maven-surefire-plugin</plugin>
											<plugin>org.apache.maven.plugins:maven-failsafe-plugin</plugin>
											<plugin>org.apache.maven.plugins:maven-surefire-report-plugin</plugin>
										</plugins>
									</requireSameVersions>
									<requireSameVersions>
										<dependencies>
											<dependency>org.apache.maven</dependency>
											<!-- or org.apache.maven:* -->
										</dependencies>
									</requireSameVersions>
									<requireUpperBoundDeps>
										<!-- 'uniqueVersions' (default:false) can be set to true if you want to compare the timestamped SNAPSHOTs  -->
										<!-- <uniqueVersions>true</uniqueVersions> -->
									</requireUpperBoundDeps>
									<NoPackageCyclesRule implementation="de.andrena.tools.nopackagecycles.NoPackageCyclesRule"></NoPackageCyclesRule>
									<banCircularDependencies></banCircularDependencies>
									<banDuplicateClasses>
										<ignoreClasses>
											<ignoreClass>org.apache.juli.*</ignoreClass>
											<ignoreClass>org.apache.commons.*</ignoreClass>
											<ignoreClass>org.aspectj.*</ignoreClass>
										</ignoreClasses>
										<findAllDuplicates>true</findAllDuplicates>
									</banDuplicateClasses>
									<!--
                                                                        <requireDeveloperRoles>
                                                                            <requiredRoles>lead engineer</requiredRoles>
                                                                            <validRoles>java developer</validRoles>
                                                                        </requireDeveloperRoles>
                                                                        <requireContributorRoles>
                                                                            <requiredRoles>business engineer, quality manager</requiredRoles>
                                                                            <validRoles>java developer</validRoles>
                                                                        </requireContributorRoles>
                                                                        -->
									<requireEncoding>
										<encoding>UTF-8</encoding>
										<includes>src/main/resources/**,src/test/resources/**</includes>
									</requireEncoding>
									<enforceBytecodeVersion>
										<ignoredScopes>
											<scope>test</scope>
										</ignoredScopes>
										<maxJdkVersion>${jdk.level}</maxJdkVersion>
									</enforceBytecodeVersion>
									<!--
                                                                        <versionTxtRule implementation="org.eclipse.jetty.toolchain.enforcer.rules.VersionTxtRule" />
                                                                        <versionOsgiRule implementation="org.eclipse.jetty.toolchain.enforcer.rules.RequireOsgiCompatibleVersionRule" />
                                                                        <versionRedhatRule implementation="org.eclipse.jetty.toolchain.enforcer.rules.RequireRedhatCompatibleVersionRule" />
                                                                        <versionDebianRule implementation="org.eclipse.jetty.toolchain.enforcer.rules.RequireDebianCompatibleVersionRule" />
                                                                        -->
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
						<execution>
							<id>ban-junit-dep.jar</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<bannedDependencies>
										<excludes>
											<exclude>junit:junit-dep:*:jar</exclude>
										</excludes>
										<searchTransitive>true</searchTransitive>
										<message>We use junit.jar, not junit-dep.jar (as of junit 4.11, hamcrest is no longer embedded)</message>
									</bannedDependencies>
								</rules>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>de.andrena.tools.nopackagecycles</groupId>
							<artifactId>no-package-cycles-enforcer-rule</artifactId>
							<version>${maven.enforcer.no.package.cycles.plugin.version}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>extra-enforcer-rules</artifactId>
							<version>${maven.enforcer.extra.plugin.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.jetty.toolchain</groupId>
							<artifactId>jetty-build-support</artifactId>
							<version>${build.support.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- allow to create a single jar with all dependencies -->
				<!-- only use for tests and not in production -->
				<!-- command : mvn assembly:assembly -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.plugin.version}</version>
					<executions>
						<execution>
							<id>make-assembly</id>
							<!-- this is used for inheritance merges -->
							<phase>package</phase>
							<!-- append to the packaging phase.
                            <goals>
                                <goal>directory-inline</goal>
                            </goals>
                            -->
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.jetty.toolchain</groupId>
							<artifactId>jetty-assembly-descriptors</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-core</artifactId>
							<version>${doxia.core.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-site-renderer</artifactId>
							<version>${doxia.version}</version>
						</dependency>
						<dependency>
							<groupId>com.nabla.project</groupId>
							<artifactId>skin</artifactId>
							<version>1.0.1-SNAPSHOT</version>
						</dependency>
					</dependencies>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!--
                <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>downloads-maven-plugin</artifactId>
                        <version>${maven.downloads.github.plugin.version}</version>
                </plugin>
                -->
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${maven.site.github.plugin.version}</version>
					<configuration>
						<message>Creating site for ${project.name} ${project.version}</message>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!--
                                        Automatically attach sources to build artifact as
                                        artifact-version-sources.jar and deploy to local repository
                                -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!--
                                        mvn source:jar mvn source:test-jar
                                        -->
					<!--
                                        <executions>
                                                <execution>
                                                        <id>attach-sources</id>
                                                        <phase>verify</phase>
                                                        <goals>
                                                                <goal>jar-no-fork</goal>
                                                        </goals>
                                                </execution>
                                        </executions>
                                        -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-verifier-plugin</artifactId>
					<version>${maven.verifier.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jboss.tattletale</groupId>
					<artifactId>tattletale-maven</artifactId>
					<version>${maven.tattletale.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- make sure our code doesn't have 1.6 dependencies except where we know it see * http://mojo.codehaus.org/animal-sniffer/index.html * http://weblogs.java.net/blog/kohsuke/archive/2008/11/compiling_with.html -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>${maven.animal.sniffer.plugin.version}</version>
					<executions>
						<execution>
							<id>check-java-api</id>
							<phase>test</phase>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<signature>
									<groupId>org.codehaus.mojo.signature</groupId>
									<!--
                                                    <artifactId>java15</artifactId>
                                                    <version>1.0</version>
                                                    -->
									<artifactId>java16</artifactId>
									<version>1.1</version>
								</signature>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Global test exclusions -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<!--<inherited>true</inherited>-->
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!-- Enable or disable JUnit tests -->
						<skipTests>${maven.test.ut.skip}</skipTests>
						<linkXRef>true</linkXRef>
						<!--<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>-->
						<!--<argLine>-Xms64m -Xmx256m -XX:MaxPermSize=256m -Djava.awt.headless=true -XX:-UseSplitVerifier -XX:ReservedCodeCacheSize=128m</argLine>-->
						<runOrder>random</runOrder>
						<!-- more log <argLine>-verbose:class</argLine>-->
						<trimStackTrace>false</trimStackTrace>
						<!--<useFile>false</useFile> -->
						<!-- Continue with other tests if a single method fails -->
						<configFailurePolicy>continue</configFailurePolicy>
						<!-- Enable or disable Stop maven -->
						<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
						<rerunFailingTestsCount>3</rerunFailingTestsCount>
						<useSystemClassLoader>true</useSystemClassLoader>
						<useManifestOnlyJar>false</useManifestOnlyJar>
						<!-- shows total/fail/error summaries on stdout: -->
						<printSummary>true</printSummary>
						<!-- this gives test class name & time elapsed in report files: -->
						<!--<reportFormat>plain</reportFormat> -->
						<reportFormat>xml</reportFormat>
						<!--<classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>-->
						<redirectTestOutputToFile>true</redirectTestOutputToFile>
						<!-- when forked, debugging in Eclipse won't work -->
						<!--<forkMode>never</forkMode>-->
						<!--<forkMode>once</forkMode>  DEPRECATED since version 2.14 -->
						<!--<forkMode>pertest</forkMode>-->
						<!--<forkMode>always</forkMode>-->
						<!-- for parallel test -->
						<!--<parallel>methods</parallel>-->
						<parallel>classes</parallel>
						<threadCount>1</threadCount>
						<forkCount>1</forkCount>
						<reuseForks>false</reuseForks>
						<systemPropertyVariables>
							<!--
                                                        <property>
                                                                <name>application.property.dir</name>
                                                                <value>${product.sourceDirectory}/presentation/ear/etc</value>
                                                        </property>
                                                        <property>
                                                                <name>application.property.name</name>
                                                                <value>product.properties</value>
                                                        </property>
                                                        -->
							<!-- How to prevent tests from running twice -->
							<property>
								<name>net.sourceforge.cobertura.datafile</name>
								<value>~/cobertura.ser</value>
							</property>
							<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
							<webdriver.firefox.bin>${webdriver.firefox.bin}</webdriver.firefox.bin>
							<webdriver.safari.noinstall>true</webdriver.safari.noinstall>
							<!--
                                                        <http.proxyHost>${env.HTTP.PROXYHOST}</http.proxyHost>
                                                        <http.proxyPort>${env.HTTP.PROXYPORT}</http.proxyPort>
                                                        -->
						</systemPropertyVariables>
						<!-- Add source folders to test classpath in order to run gwt-tests as normal junit-tests -->
						<additionalClasspathElements>
							<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
							<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
						</additionalClasspathElements>
						<!-- exclude interface apis -->
						<classpathDependencyExcludes>
							<classpathDependencyExclude>javaee:javaee-api</classpathDependencyExclude>
							<classpathDependencyExclude>javax.jms:jms-api</classpathDependencyExclude>
							<classpathDependencyExclude>javax.servlet:servlet-api</classpathDependencyExclude>
						</classpathDependencyExcludes>
						<!--
                                                <environmentVariables>
                                                    <JBOSS_HOME>${project.build.directory}/jboss-as-${server.version}</JBOSS_HOME>
                                                </environmentVariables>
                                                -->
						<environmentVariables>
							<JBOSS_HOME>${jboss.home}</JBOSS_HOME>
							<GRIDGAIN_HOME>${gridgain-home}</GRIDGAIN_HOME>
						</environmentVariables>
						<!-- Folder for generated testing stuff -->
						<systemProperties>
							<property>
								<name>gwt.args</name>
								<value>-out ${project.build.directory}/${project.build.finalName}</value>
							</property>
							<jboss.version>${server.version}</jboss.version>
						</systemProperties>
						<excludes>
							<exclude>**/*ITest*</exclude>
							<exclude>**/*STest*</exclude>
							<exclude>**/weld/**</exclude>
							<exclude>**/jbossas/**</exclude>
							<exclude>**/*HibernateEnumType*</exclude>
							<!--<exclude implementation="java.lang.String">**/Abstract*.*</exclude>-->
						</excludes>
					</configuration>
					<!--
                                                Skip the normal tests, we'll run them in the integration-test
                                                phase with selenium
                                        -->
					<!--
                                                <configuration> <skip>true</skip> </configuration> <executions>
                                                <execution> <phase>integration-test</phase> <goals>
                                                <goal>test</goal> </goals> <configuration> <skip>false</skip>
                                                </configuration> </execution> </executions>
                                        -->
				</plugin>
				<!-- The build date is available as $buildNumber in my POMs and resource files. -->
				<!-- TODO buildnumber-maven-plugin DOES not WORKS use maven-buildmetadata-plugin instead -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>${maven.buildnumber.plugin.version}</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<format>{0,date,yyyy-MM-dd HH:mm:ss}.{1}</format>
						<items>
							<item>timestamp</item>
							<item>scmVersion</item>
						</items>
						<!--<format>{0,number}</format>-->
						<!--<format>Build: #{0} ({1,date})</format>-->
						<!--<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>-->
						<!--
                                                <items>
                                                        <item>buildNumber\d*</item>
                                                        <item>timestamp</item>
                                                </items>
                                                -->
						<buildNumberPropertyName>buildNumberSeq</buildNumberPropertyName>
						<!--
                                                 doCheck and doUpdate actually talk to repository if it's true,
                                                 Check would check that there are no local changes.
                                                 Update would update it
                                                -->
						<doCheck>true</doCheck>
						<doUpdate>true</doUpdate>
						<revisionOnScmFailure>1.0</revisionOnScmFailure>
						<getRevisionOnlyOnce>true</getRevisionOnlyOnce>
					</configuration>
				</plugin>
				<!-- dectivate : validation error in eclipse and does not work with maven-bundle-plugin
                                <plugin>
                                  <groupId>de.smartics.maven.plugin</groupId>
                                  <artifactId>maven-buildmetadata-plugin</artifactId>
                                  <version>${maven.buildmetadata.plugin.version}</version>
                                </plugin>
                                -->
				<!--
                                <plugin>
                                  <groupId>org.codehaus.sonar-plugins</groupId>
                                  <artifactId>maven-report</artifactId>
                                  <version>${maven.sonar.report.plugin.version}</version>
                                </plugin>
                                -->
				<plugin>
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>${maven.license.plugin.version}</version>
					<configuration>
						<properties>
							<year>\${build.copyright.year}</year>
						</properties>
					</configuration>
				</plugin>
				<!--
                                  see: http://docs.codehaus.org/display/GMAVEN/Home
                                -->
				<!-- TODO DEPRECATED SOON
                                http://docs.groovy-lang.org/latest/html/documentation/tools-groovyeclipse.html
                                -->
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>${maven.gmaven.plugin.version}</version>
					<!--
                                    Add this to pom where plugin is actually used. see e.g. groovybooking-jee project
                                    see: http://communitymapbuilder.org/pages/viewpage.action?pageId=110166073
                                    see: http://btilford.blogspot.com/2010_02_01_archive.html
                                  -->
					<!--
                                  <executions>
                                    <execution>
                                      <goals>
                                        <goal>compile</goal>
                                        <goal>testCompile</goal>
                                        <goal>generateStubs</goal>
                                        <goal>generateTestStubs</goal>
                                      </goals>
                                    </execution>
                                  </executions>
                                  -->
					<executions>
						<execution>
							<id>groovy compile</id>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<sources>
									<fileset>
										<directory>${basedir}/src/main/groovy</directory>
										<includes>
											<include>**/*.groovy</include>
										</includes>
									</fileset>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>groovy test compile</id>
							<goals>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<sources>
									<fileset>
										<directory>${basedir}/src/test/groovy</directory>
										<includes>
											<include>**/*.groovy</include>
										</includes>
									</fileset>
								</sources>
							</configuration>
						</execution>
					</executions>
					<!--
                                    By default, GMaven 1.3 will always use Groovy 1.7.0 for compilation, no matter which
                                    Groovy version you have on the class path. This is here to to configure GMaven to use a
                                    different Groovy version, see e.g.
                                      http://code.google.com/p/spock/source/browse/branches/groovy-1.7/spock-example/pom.xml
                                   -->
					<dependencies>
						<dependency>
							<groupId>org.codehaus.gmaven.runtime</groupId>
							<artifactId>gmaven-runtime-${gmaven.runtime.number.version}</artifactId>
							<version>${gmaven.runtime.version}</version>
							<exclusions>
								<exclusion>
									<artifactId>groovy-all</artifactId>
									<groupId>org.codehaus.groovy</groupId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>${groovy.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<providerSelection>2.0</providerSelection>
						<debug>${maven.compile  r.debug}</debug>
						<stacktrace>${maven.compiler.debug}</stacktrace>
						<targetBytecode>${jdkLevel}</targetBytecode>
						<!-- is the value to compile for a JDK 1.5 or later JVM. -->
						<verbose>true</verbose>
						<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					</configuration>
				</plugin>
				<!-- groovydoc -->
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${maven.gmavenplus.plugin.version}</version>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<goals>
								<goal>groovydoc</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>jline</groupId>
							<artifactId>jline</artifactId>
							<version>${jline.version}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>${groovy.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<groovydocJavaSources>false</groovydocJavaSources>
						<groovydocOutputDirectory>${documentation.output.directory}/${groovydoc.directory.name}</groovydocOutputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>selenium-maven-plugin</artifactId>
					<version>${maven.selenium.plugin.version}</version>
					<!--
                                    <configuration>
                                        <browser>*firefox</browser>
                                        <suite>src/test/selenium/SimpleSTest.html</suite>
                                        <startURL>http://localhost:9090</startURL>
                                    </configuration>
                                    -->
					<executions>
						<execution>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start-server</goal>
							</goals>
							<configuration>
								<background>true</background>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>groovy-maven-plugin</artifactId>
					<version>${maven.groovy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xdoclet-maven-plugin</artifactId>
					<version>${maven.xdoclet.plugin.version}</version>
					<executions>
						<execution>
							<id>xdoclet</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>xdoclet</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>xdoclet</groupId>
							<artifactId>xjavadoc</artifactId>
							<version>1.5-050611</version>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${maven.ejb.plugin.version}</version>
					<configuration>
						<!--<ejbVersion>2.1</ejbVersion>-->
						<ejbVersion>3.0</ejbVersion>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<generateClient>true</generateClient> -->
						<generateClient>false</generateClient>
						<!--
                                                        <clientIncludes> <clientInclude>**/ejb/**</clientInclude>
                                                        <clientInclude>**/exceptions/**</clientInclude>
                                                        <clientInclude>**/events/**</clientInclude>
                                                        <clientInclude>**/util/**</clientInclude>
                                                        <clientInclude>**/filters/**</clientInclude>
                                                        <clientInclude>**/mask/**</clientInclude> </clientIncludes>
                                                        <clientExcludes> <clientExclude>**/meta-inf/**</clientExclude>
                                                        <clientExclude>**/META-INF/**</clientExclude> </clientExcludes>
                                                -->
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Url>${project.url}</Url>
								<Specification-Title>${project.name}-${product.title}</Specification-Title>
								<Specification-Version>${product.version}</Specification-Version>
								<Specification-Vendor>${project.organization.name}</Specification-Vendor>
								<Implementation-Title>${project.name}-${product.title}</Implementation-Title>
								<Implementation-Version>${product.version}</Implementation-Version>
								<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
								<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
								<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
								<Implementation-SCM-Revision-Number>${env.BUILD_NUMBER}</Implementation-SCM-Revision-Number>
								<Implementation-SCM-Revision-Date>${maven.build.timestamp}</Implementation-SCM-Revision-Date>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Implementation-Date>${maven.build.timestamp}</Implementation-Date>
								<Implementation-Timestamp>${maven.build.timestamp}</Implementation-Timestamp>
								<Implementation-DatePattern>${maven.build.timestamp.format}</Implementation-DatePattern>
								<Implementation-Full-Version>${product.version}</Implementation-Full-Version>
								<!--<Built-Host>${env.HOSTNAME}</Built-Host>-->
								<Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
								<!--<Built-By>${env.USER}</Built-By>-->
								<!--<Build-Machine>${env.COMPUTERNAME}</Build-Machine>-->
								<Build-Date>${maven.build.timestamp}</Build-Date>
								<Build-Revision>${env.BUILD_NUMBER}</Build-Revision>
								<!--<Maven-Version>${build.maven.version}</Maven-Version>-->
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
								<X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>
								<Mode>${environment}</Mode>
							</manifestEntries>
						</archive>
						<includeJar>false</includeJar>
						<excludes>
							<exclude>**/*.ref</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>axistools-maven-plugin</artifactId>
					<version>${maven.axistools.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${maven.ear.plugin.version}</version>
					<configuration>
						<!--
                                            MNGECLIPSE-1541:
                                            During the import of a mavenized ear project (File > Import... > General > Maven Projects)
                                            an application.xml file is generated in src/main/application/META-INF/application.xml.
                                            https://issues.sonatype.org/browse/MNGECLIPSE-1541

                                            MNGECLIPSE-2145:
                                            Generated application.xml doesn't contain final names
                                            https://issues.sonatype.org/browse/MNGECLIPSE-2145

                                            To fix this we excludes the eclipse generated application.xml during mvn package
                                          -->
						<earSourceExcludes>**/application.xml</earSourceExcludes>
						<!-- Use maven generated application.xml -->
						<generateApplicationXml>true</generateApplicationXml>
						<version>5</version>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<encoding>${project.build.sourceEncoding}</encoding>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Url>${project.url}</Url>
								<Specification-Title>${project.name}-${product.title}</Specification-Title>
								<Specification-Version>${product.version}</Specification-Version>
								<Specification-Vendor>${project.organization.name}</Specification-Vendor>
								<Implementation-Title>${project.name}-${product.title}</Implementation-Title>
								<Implementation-Version>${product.version}</Implementation-Version>
								<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
								<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
								<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
								<Implementation-SCM-Revision-Number>${env.BUILD_NUMBER}</Implementation-SCM-Revision-Number>
								<Implementation-SCM-Revision-Date>${maven.build.timestamp}</Implementation-SCM-Revision-Date>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Implementation-Date>${maven.build.timestamp}</Implementation-Date>
								<Implementation-Timestamp>${maven.build.timestamp}</Implementation-Timestamp>
								<Implementation-DatePattern>${maven.build.timestamp.format}</Implementation-DatePattern>
								<Implementation-Full-Version>${product.version}</Implementation-Full-Version>
								<!--<Built-Host>${env.HOSTNAME}</Built-Host>-->
								<Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
								<!--<Built-By>${env.USER}</Built-By>-->
								<!--<Build-Machine>${env.COMPUTERNAME}</Build-Machine>-->
								<Build-Date>${maven.build.timestamp}</Build-Date>
								<Build-Revision>${env.BUILD_NUMBER}</Build-Revision>
								<!--<Maven-Version>${build.maven.version}</Maven-Version>-->
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
								<X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>
								<Mode>${environment}</Mode>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/*.ref</exclude>
						</excludes>
						<encoding>${project.build.sourceEncoding}</encoding>
						<archive>
							<!--

                                                                ! prevent maven from adding pom meta-data to our jars. ! See:
                                                                http://maven.apache.org/guides/mini/guide-archive-configuration.html
                                                                ! for info on the archiver configuration properties. ! NOTE:
                                                                <addMavenDescriptor> requires v 2.1 or greater archive plugin.
                                                        -->
							<!-- do not generate files that disturb jar diff between version -->
							<addMavenDescriptor>false</addMavenDescriptor>
							<pomPropertiesFile>false</pomPropertiesFile>
							<!--
                                                                Disabled for http://mule.mulesource.org/jira/browse/MULE-1153
                                                                and http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4408526

                                                                <index>false</index>
                                                        -->
							<!--
                                                                <index>true</index>
                                                        -->
							<!-- List dependencies in the MANIFEST.MF -->
							<!--<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>-->
							<!-- for maven-bundle-plugin -->
							<manifest>
								<addClasspath>true</addClasspath>
								<!--
                                                                        <mainClass>
                                                                        com.sgcib.services.extract.eoleextract.FullExtract</mainClass>
                                                                        <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
                                                                        <addDefaultImplementationEntries>false</addDefaultImplementationEntries>
                                                                -->
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<!--
                                                                        <addExtensions>true</addExtensions>
                                                                -->
								<!--
                                                                        DO NOT USE classpathMavenRepositoryLayout TO OVERIDE KARMA
                                                                        <classpathMavenRepositoryLayout>true</classpathMavenRepositoryLayout>
                                                                -->
							</manifest>
							<!-- Custom Entries -->
							<manifestEntries>
								<Url>${project.url}</Url>
								<Specification-Title>${project.name}-${product.title}</Specification-Title>
								<Specification-Version>${product.version}</Specification-Version>
								<Specification-Vendor>${project.organization.name}</Specification-Vendor>
								<Implementation-Title>${project.name}-${product.title}</Implementation-Title>
								<Implementation-Version>${product.version}</Implementation-Version>
								<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
								<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
								<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
								<Implementation-SCM-Revision-Number>${env.BUILD_NUMBER}</Implementation-SCM-Revision-Number>
								<Implementation-SCM-Revision-Date>${maven.build.timestamp}</Implementation-SCM-Revision-Date>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Implementation-Date>${maven.build.timestamp}</Implementation-Date>
								<Implementation-Timestamp>${maven.build.timestamp}</Implementation-Timestamp>
								<Implementation-DatePattern>${maven.build.timestamp.format}</Implementation-DatePattern>
								<Implementation-Full-Version>${product.version}</Implementation-Full-Version>
								<!--<Built-Host>${env.HOSTNAME}</Built-Host>-->
								<Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
								<!--<Built-By>${env.USER}</Built-By>-->
								<!--<Build-Machine>${env.COMPUTERNAME}</Build-Machine>-->
								<Build-Date>${maven.build.timestamp}</Build-Date>
								<Build-Revision>${env.BUILD_NUMBER}</Build-Revision>
								<!--<Maven-Version>${build.maven.version}</Maven-Version>-->
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
								<X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>
								<Mode>${environment}</Mode>
							</manifestEntries>
							<!--
                                                                This would work if this issue gets closed:
                                                                http://jira.codehaus.org/browse/MNG-1832
                                                        -->
							<!-- Build-Date>${mvn.timestamp.yyyy-MM-dd-HH:mm:ss}</Build-Date -->
							<!--  include repository revision from buildnumber plugin -->
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ant-plugin</artifactId>
					<version>${maven.ant.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.antlr</groupId>
					<artifactId>antlr3-maven-plugin</artifactId>
					<version>${maven.antlr3.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>antlr</goal>
							</goals>
							<configuration>
								<goals>
									<goal>antlr</goal>
								</goals>
								<conversionTimeout>10000</conversionTimeout>
								<debug>false</debug>
								<dfa>false</dfa>
								<nfa>false</nfa>
								<libDirectory>src/main/antlr3/imports</libDirectory>
								<messageFormat>antlr</messageFormat>
								<outputDirectory>target/generated-sources/antlr3</outputDirectory>
								<printGrammar>false</printGrammar>
								<profile>false</profile>
								<report>false</report>
								<sourceDirectory>src/main/antlr3</sourceDirectory>
								<trace>true</trace>
								<verbose>true</verbose>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<version>${maven.native2ascii.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jalopy-maven-plugin</artifactId>
					<version>${maven.jalopy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>${maven.rar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${maven.build.helper.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven.help.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
						<webResources>
							<webResource>
								<directory>${basedir}/src/main/webapp/WEB-INF</directory>
								<targetPath>WEB-INF</targetPath>
								<filtering>true</filtering>
							</webResource>
						</webResources>
						<archive>
							<!-- do not generate files that disturb jar diff between version -->
							<addMavenDescriptor>false</addMavenDescriptor>
							<pomPropertiesFile>false</pomPropertiesFile>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Url>${project.url}</Url>
								<Specification-Title>${project.name}-${product.title}</Specification-Title>
								<Specification-Version>${product.version}</Specification-Version>
								<Specification-Vendor>${project.organization.name}</Specification-Vendor>
								<Implementation-Title>${project.name}-${product.title}</Implementation-Title>
								<Implementation-Version>${product.version}</Implementation-Version>
								<Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
								<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
								<Implementation-Build>${maven.build.timestamp}</Implementation-Build>
								<Implementation-SCM-Revision-Number>${env.BUILD_NUMBER}</Implementation-SCM-Revision-Number>
								<Implementation-SCM-Revision-Date>${maven.build.timestamp}</Implementation-SCM-Revision-Date>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Implementation-Date>${maven.build.timestamp}</Implementation-Date>
								<Implementation-Timestamp>${maven.build.timestamp}</Implementation-Timestamp>
								<Implementation-DatePattern>${maven.build.timestamp.format}</Implementation-DatePattern>
								<Implementation-Full-Version>${product.version}</Implementation-Full-Version>
								<!--<Built-Host>${env.HOSTNAME}</Built-Host>-->
								<Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
								<!--<Built-By>${env.USER}</Built-By>-->
								<!--<Build-Machine>${env.COMPUTERNAME}</Build-Machine>-->
								<Build-Date>${maven.build.timestamp}</Build-Date>
								<Build-Revision>${env.BUILD_NUMBER}</Build-Revision>
								<!--<Maven-Version>${build.maven.version}</Maven-Version>-->
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<X-Compile-Source-JDK>${jdkLevel}</X-Compile-Source-JDK>
								<X-Compile-Target-JDK>${jdkLevel}</X-Compile-Target-JDK>
								<Mode>${environment}</Mode>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>ro.isdc.wro4j</groupId>
					<artifactId>wro4j-maven-plugin</artifactId>
					<version>${maven.wro4j.plugin.version}</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<targetGroups>style</targetGroups>
						<destinationFolder>${project.build.directory}/${project.build.finalName}</destinationFolder>
						<cssDestinationFolder>${project.build.directory}/${project.build.finalName}/css/</cssDestinationFolder>
						<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven.plugin.plugin.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-remote-resources-plugin</artifactId>
					<version>${maven.remote.resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven.invoker.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.samaxes.maven</groupId>
					<artifactId>maven-minify-plugin</artifactId>
					<version>${maven.minify.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-one-plugin</artifactId>
					<version>${maven.one.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-patch-plugin</artifactId>
					<version>${maven.patch.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>clirr-maven-plugin</artifactId>
					<version>${maven.clirr.plugin.version}</version>
					<configuration>
						<minSeverity>info</minSeverity>
						<comparisonVersion>1.0</comparisonVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven.versions.plugin.version}</version>
					<configuration>
						<parentVersion>${project.version}</parentVersion>
						<allowSnapshots>true</allowSnapshots>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven.project.info.reports.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.report.plugin.version}</version>
				</plugin>
				<!-- attach-javadocs -->
				<!-- do not add maven-javadoc-plugin definition because attach-javadocs will not work properly -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-core</artifactId>
							<version>${doxia.core.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-site-renderer</artifactId>
							<version>${doxia.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.httpcomponents</groupId>
							<artifactId>httpcore</artifactId>
							<version>${httpcore.version}</version>
						</dependency>
						<dependency>
							<groupId>org.umlgraph</groupId>
							<artifactId>umlgraph</artifactId>
							<version>${org.umlgraph.umlgraph.version}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>clirr-maven-plugin</artifactId>
							<version>${maven.clirr.plugin.version}</version>
						</dependency>
						<dependency>
							<groupId>com.nabla.project</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0.1-SNAPSHOT</version>
						</dependency>
					</dependencies>
					<configuration>
						<stylesheetfile>project/javadoc-stylesheet.css</stylesheetfile>
						<!--<stylesheet>maven</stylesheet>-->
						<!--
                                                        <minmemory>128m</minmemory> <maxmemory>512m</maxmemory>
                                                -->
						<!--
                                                <minmemory>128m</minmemory>
                                                <maxmemory>2g</maxmemory>
                                                <maxmemory>512m</maxmemory>
                                                <maxmemory>1548m</maxmemory>
                                                -->
						<!--
                                                <show>package</show>
                                                <show>private</show>
                                                -->
						<show>public</show>
						<version>true</version>
						<failOnError>false</failOnError>
						<javadocVersion>${jdkVersion}</javadocVersion>
						<linksource>true</linksource>
						<serialwarn>true</serialwarn>
						<docfilessubdirs>true</docfilessubdirs>
						<detectLinks>false</detectLinks>
						<detectOfflineLinks>false</detectOfflineLinks>
						<detectJavaApiLink>true</detectJavaApiLink>
						<charset>${project.build.sourceEncoding}</charset>
						<docencoding>${project.build.sourceEncoding}</docencoding>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<sourcepath>${basedir}/src/main/java;${basedir}/src/generated/main/java</sourcepath>-->
						<!--
                                                <doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
                                                <docletArtifact>
                                                        <groupId>gr.spinellis</groupId>
                                                        <artifactId>UmlGraph</artifactId>
                                                        <version>${gr.spinellis.UmlGraph.version}</version>
                                                </docletArtifact>
                                                <additionalparam> -inferrel -inferdep -quiet -hide java.* -hide
                                                        com.nabla.gui.* -collpackages java.util.* -collpackages
                                                        com.nabla.logical.*
                                                        -collpackages
                                                        com.nabla.utils.* -qualify
                                                        -postfixpackage
                                                        -nodefontsize 9 -nodefontpackagesize 7
                                                        -outputencoding utf8</additionalparam>
                                                <excludePackageNames>com.nabla.andromda.cartridges.technical.karma.*:com.nabla.andromda.cartridges.technical..unittest:*.cartridges.*</excludePackageNames>
                                                -->
						<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
						<docletArtifact>
							<groupId>org.umlgraph</groupId>
							<artifactId>umlgraph</artifactId>
							<version>${org.umlgraph.umlgraph.version}</version>
						</docletArtifact>
						<useStandardDocletOptions>true</useStandardDocletOptions>
						<additionalparam>-views</additionalparam>
						<additionalparam>-operations</additionalparam>
						<additionalparam>-qualify</additionalparam>
						<additionalparam>-types</additionalparam>
						<additionalparam>-visibility</additionalparam>
						<additionalparam>-collpackages</additionalparam>
						<!--<additionalparam>-Xdoclint:none</additionalparam>-->
						<additionalOptions>
							<!--<additionalOption>-Xdoclint:none</additionalOption>-->
							<additionalOption>--allow-script-in-comments</additionalOption>
						</additionalOptions>
						<links>
							<link>http://docs.oracle.com/javase/8/docs/api/</link>
							<link>http://docs.oracle.com/javaee/7/api/</link>
							<link>http://junit.org/junit4/javadoc/latest</link>
							<link>http://download.eclipse.org/jetty/stable-9/apidocs/</link>
						</links>
						<tags>
							<tag>
								<name>org.apache.xbean.XBean</name>
								<placement>X</placement>
								<head></head>
							</tag>
							<tag>
								<name>phase</name>
								<placement>t</placement>
								<head>Phase:</head>
							</tag>
							<tag>
								<name>goal</name>
								<placement>t</placement>
								<head>Goal:</head>
							</tag>
							<tag>
								<name>description</name>
								<placement>a</placement>
								<head>Description:</head>
							</tag>
							<tag>
								<name>parameter</name>
								<placement>f</placement>
								<head>Parameter:</head>
							</tag>
							<tag>
								<name>required</name>
								<placement>f</placement>
								<head>Required:</head>
							</tag>
							<tag>
								<name>readonly</name>
								<placement>f</placement>
								<head>Read-Only:</head>
							</tag>
							<tag>
								<name>execute</name>
								<placement>X</placement>
								<head></head>
							</tag>
							<tag>
								<name>requiresDependencyResolution</name>
								<placement>X</placement>
								<head></head>
							</tag>
							<tag>
								<name>requiresProject</name>
								<placement>X</placement>
								<head></head>
							</tag>
							<tag>
								<name>threadSafe</name>
								<placement>X</placement>
								<head></head>
							</tag>
						</tags>
						<header><![CDATA[<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-56011797-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
                        </script>]]></header>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven.scm.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>${maven.scm.provider.jgit.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven.jxr.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>${maven.taglist.plugin.version}</version>
					<configuration>
						<tagListOptions>
							<tagClasses>
								<tagClass>
									<displayName>Todo Work</displayName>
									<tags>
										<tag>
											<matchString>todo</matchString>
											<matchType>ignoreCase</matchType>
										</tag>
										<tag>
											<matchString>FIXME</matchString>
											<matchType>exact</matchType>
										</tag>
										<tag>
											<matchString>XXX</matchString>
											<matchType>exact</matchType>
										</tag>
										<tag>
											<matchString>@deprecated</matchString>
											<matchType>exact</matchType>
										</tag>
									</tags>
								</tagClass>
							</tagClasses>
						</tagListOptions>
					</configuration>
				</plugin>
				<!-- java.lang.OutOfMemoryError -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${maven.findbugs.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.nabla.project</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0.1-SNAPSHOT</version>
						</dependency>
					</dependencies>
					<configuration>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<xmlOutput>true</xmlOutput>
						<fork>${maven.compiler.fork}</fork>
						<threshold>High</threshold>
						<effort>Default</effort>
						<failOnError>false</failOnError>
						<excludeFilterFile>project/findbugs-exclude-filters.xml</excludeFilterFile>
						<maxHeap>2048</maxHeap>
						<timeout>1200000</timeout>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${maven.spotbugs.plugin.version}</version>
					<dependencies>
						<!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
						<dependency>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs</artifactId>
							<version>3.1.12</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>com.mobilvox.ossi.mojo</groupId>
					<artifactId>maven-js-plugin</artifactId>
					<version>${maven.js.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>gr.abiss.mvn.plugins</groupId>
					<artifactId>maven-jstools-plugin</artifactId>
					<version>${maven.jstools.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven.cobertura.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.ow2.asm</groupId>
							<artifactId>asm</artifactId>
							<version>${asm.ow2.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${maven.jacoco.plugin.version}</version>
					<configuration>
						<!-- includes>
                                            <include>com.nabla.project.**</include>
                                        </includes -->
						<dumpOnExit>true</dumpOnExit>
						<append>true</append>
						<output>file</output>
						<!--classDumpDir>${project.build.directory}/jacoco-instrumented</classDumpDir-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>codenarc-maven-plugin</artifactId>
					<version>${maven.codenarc.plugin.version}</version>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<goals>
								<goal>codenarc</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<sourceDirectory>${project.basedir}/src/main/groovy</sourceDirectory>
						<!--
                                        <maxPriority1Violations>0</maxPriority1Violations>
                                        <maxPriority2Violations>0</maxPriority2Violations>
                                        <maxPriority3Violations>0</maxPriority3Violations>
                                        -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>${maven.dependency.check.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
								<!--<report>aggregate</report>-->
							</goals>
						</execution>
					</executions>
					<configuration>
						<!--<failBuildOnCVSS>8</failBuildOnCVSS>-->
						<format>XML</format>
						<skipProvidedScope>true</skipProvidedScope>
						<skipRuntimeScope>true</skipRuntimeScope>
						<skipSystemScope>true</skipSystemScope>
						<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
						<centralAnalyzerEnabled>false</centralAnalyzerEnabled>
						<nexusAnalyzerEnabled>false</nexusAnalyzerEnabled>
						<!--
                        <nexusUrl>http://albandrieu.com:8081/nexus</nexusUrl>
                        <cveUrl12Modified>http://home.nabla.mobi/download/nist/nvdcve-Modified.xml.gz</cveUrl12Modified>
                        <cveUrl20Modified>http://home.nabla.mobi/download/nist/nvdcve-2.0-Modified.xml.gz</cveUrl20Modified>
                        <cveUrl12Base>http://home.nabla.mobi/download/nist/nvdcve-%d.xml</cveUrl12Base>
                        <cveUrl20Base>http://home.nabla.mobi/download/nist/nvdcve-2.0-%d.xml</cveUrl20Base>
                        -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.checkmarx.maven</groupId>
					<artifactId>checkmarx-maven-plugin</artifactId>
					<version>${maven.checkmarx.plugin.version}</version>
					<configuration>
						<!--
                        <url>http://localhost</url>
                        <username>user@org</username>
                        <password>Org123456</password>
                        <highSeveritiesThreshold>1</highSeveritiesThreshold>
                        <mediumSeveritiesThreshold>20</mediumSeveritiesThreshold>
                        <lowSeveritiesThreshold>30</lowSeveritiesThreshold>
                        -->
						<isIncrementalScan>false</isIncrementalScan>
						<preset>all</preset>
						<!--
                        <fileExclusions>file1, file2</fileExclusions>
                        <folderExclusions></folderExclusions>
                        <fullTeamPath>CxServer\SP</fullTeamPath>
                        -->
						<generatePDFReport>true</generatePDFReport>
						<isSynchronous>true</isSynchronous>
						<!--
                        <outputDirectory>c:\users\tmp</outputDirectory>
                        <projectName>Project 22 (Maven)</projectName>
                        -->
						<scanTimeoutInMinutes>10</scanTimeoutInMinutes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.versioneye</groupId>
					<artifactId>versioneye-maven-plugin</artifactId>
					<version>${maven.versioneye.plugin.version}</version>
					<configuration>
						<apiKey>b61c27b9c7842af2f2a4</apiKey>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.whitesource</groupId>
					<artifactId>whitesource-maven-plugin</artifactId>
					<version>${maven.whitesource.plugin.version}</version>
					<configuration>
						<orgToken>27651afa-9e00-4c57-9f0e-7df9358e6750</orgToken>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dashboard-maven-plugin</artifactId>
					<version>${maven.dashboard.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-changelog-plugin</artifactId>
					<version>${maven.changelog.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-changes-plugin</artifactId>
					<version>${maven.changes.plugin.version}</version>
				</plugin>
				<!-- TODO does not work jdepend:generate -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>${maven.jdepend.plugin.version}</version>
				</plugin>
				<!--
                                <plugin>
                                        <groupId>org.apache.rat</groupId>
                                        <artifactId>apache-rat-plugin</artifactId>
                                        <version>${maven.apache.rat.plugin.version}</version>
                                                <configuration>
                                                  <licenses>
                                                    <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
                                                      <licenseFamilyCategory>YASL1</licenseFamilyCategory>
                                                      <licenseFamilyName>Yet Another Software License (YASL) 1.0</licenseFamilyName>
                                                      <notes></notes>
                                                      <patterns>
                                                        <pattern>Copyright (c) 2002-2004, Nabla</pattern>
                                                      </patterns>
                                                    </license>
                                                  </licenses>
                                                  <licenseFamilies>
                                                    <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
                                                      <familyName>Yet Another Software License</familyName>
                                                    </licenseFamily>
                                                  </licenseFamilies>
                                                </configuration>
                                </plugin>
                                -->
				<!-- TODO javancss:report does not work -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>${maven.javancss.plugin.version}</version>
					<configuration>
						<!--
                                          <failOnViolation>true</failOnViolation>
                                          <ccnLimit>12</ccnLimit>
                                          <ncssLimit>90</ncssLimit>
                                        -->
						<excludes>
							<exclude>**/generated/**/*</exclude>
							<exclude>**/clover/**/*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven.pmd.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.nabla.project</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0.1-SNAPSHOT</version>
						</dependency>
					</dependencies>
					<configuration>
						<targetJdk>${jdkLevel}</targetJdk>
						<linkXRef>true</linkXRef>
						<!--
                                                <rulesets>
                                                        <ruleset>project/pmd_regles_nabla.xml</ruleset>
                                                </rulesets>
                                                -->
						<excludeRoots>
							<excludeRoot>${basedir}/${target.dir}/generated-sources</excludeRoot>
						</excludeRoots>
						<excludes>
							<exclude>**/*Bean.java</exclude>
							<exclude>**/generated/**/*</exclude>
							<exclude>**/clover/**/*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.nabla.project</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0.1-SNAPSHOT</version>
						</dependency>
						<!--
                                            <dependency>
                                                <groupId>com.puppycrawl.tools</groupId>
                                                <artifactId>checkstyle</artifactId>
                                                <version>6.3</version>
                                            </dependency>
                                            -->
					</dependencies>
					<configuration>
						<linkXref>true</linkXref>
						<charset>${project.build.sourceEncoding}</charset>
						<docencoding>${project.build.sourceEncoding}</docencoding>
						<encoding>${project.build.sourceEncoding}</encoding>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<configLocation>project/checkstyle_checks.xml</configLocation>
						<headerLocation>project/LICENSE-1.0.txt</headerLocation>
						<!--
                                            <configLocation>${home.dir}/build-tools/src/main/resources/project/checkstyle_checks.xml</configLocation>
                                            <headerLocation>${home.dir}/build-tools/src/main/resources/project/LICENSE-1.0.txt</headerLocation>
    -->
						<propertyExpansion>projectname=nabla</propertyExpansion>
						<excludes>**/generated/**/*</excludes>
						<excludes>**/clover/**/*</excludes>
					</configuration>
				</plugin>
				<!-- DEPRECATED, use sortpom-maven-plugin
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>${maven.sortpom.google.plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <sortDependencies>scope,groupId,artifactId</sortDependencies>
            <sortPlugins>groupId,artifactId</sortPlugins>
            <lineSeparator>\n</lineSeparator>
            <encoding>${project.build.sourceEncoding}</encoding>
            <sortProperties>true</sortProperties>
            <keepBlankLines>true</keepBlankLines>
            <nrOfIndentSpace>-1</nrOfIndentSpace>
            <verifyFail>Stop</verifyFail>
          </configuration>
        </plugin>
        -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dbunit-maven-plugin</artifactId>
					<version>${maven.dbunit.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
					<!--
                                        <configuration>
                                            <ignoreNonCompile>true</ignoreNonCompile>
                                        </configuration>
                                        -->
					<!-- for gridgain
                                        <executions>
                                            <execution>
                                                <id>copy</id>
                                                <phase>process-resources</phase>
                                                <goals>
                                                    <goal>copy</goal>
                                                </goals>
                                                <configuration>
                                                    <artifactitems>
                                                        <artifactitem>
                                                            <groupid>org.aspectj</groupid>
                                                            <artifactid>aspectjweaver</artifactid>
                                                            <version>${aspectj.weaver.version}</version>
                                                            <outputdirectory>${project.build.directory}/libs/</outputdirectory>
                                                        </artifactitem>
                                                    </artifactitems>
                                                </configuration>
                                            </execution>
                                        </executions>
                                        -->
				</plugin>
				<plugin>
					<groupId>org.databene</groupId>
					<artifactId>maven-benerator-plugin</artifactId>
					<version>${maven.benerator.plugin.version}</version>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<!--
                                    <configuration>
                                        <descriptor>src/test/benerator/nabla.ben.xml</descriptor>
                                        <encoding>iso-8859-1</encoding>
                                        <dbDriver>oracle.jdbc.driver.OracleDriver</dbDriver>
                                        <dbUrl>jdbc:oracle:thin:@localhost:1521:XE</dbUrl>
                                        <dbSchema>user</dbSchema>
                                        <dbUser>user</dbUser>
                                        <dbPassword>password</dbPassword>
                                    </configuration>
                                    -->
					<dependencies>
						<dependency>
							<groupId>oracle</groupId>
							<artifactId>ojdbc</artifactId>
							<version>${ojdbc.oracle.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.zaproxy.zapmavenplugin</groupId>
					<artifactId>zap-maven-plugin</artifactId>
					<version>${maven.zap.plugin.version}</version>
					<executions>
						<execution>
							<id>startZAP</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start-zap</goal>
							</goals>
						</execution>
						<execution>
							<id>processZAP</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>process-zap</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- Windows -->
						<!-- <zapProgram>C:\Program Files\OWASP\Zed Attack Proxy\zap.bat</zapProgram> -->
						<!-- Mac OS X -->
						<!-- <zapProgram>/Users/cryptable/Tools/ZAP/zap.sh</zapProgram> -->
						<!-- Linux -->
						<zapProgram>/usr/local/zap/zap-2/zap.sh</zapProgram>
						<!-- see ansible script at https://github.com/AlbanAndrieu/ansible-zap -->
						<zapProxyHost>localhost</zapProxyHost>
						<zapProxyPort>8080</zapProxyPort>
						<targetURL>http://localhost:8090/</targetURL>
						<saveSession>false</saveSession>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>${maven.clover.plugin.version}</version>
					<configuration>
						<jdk>${clover.jdkLevel}</jdk>
						<generateXml>true</generateXml>
						<generatePdf>true</generatePdf>
						<generateHtml>true</generateHtml>
						<!--<generateHistorical>true</generateHistorical>-->
						<!--<licenseLocation>${maven.clover.licenseLocation}</licenseLocation>-->
						<!-- see ~/.m2/settings.xml -->
						<!--<outputDirectory>${clover.reportPath}/clover-report</outputDirectory>-->
						<license><![CDATA[oonrQTwgsRtiBfTokftkfBGrqMXXebBtXWxKTBllSnQCfK
mi2Kkjwl7AS0<4V4PamB>FXc2KMtiE15RzOZe11<qE7akM
nRmnvTPmronONmQqRRptVrPNPnrqmNnnPRtvwVUuXWTnnm
pmUUnpvpstuummmmmUUnpvpstuummmmmUUEXYiXUUn]]></license>
						<excludes>
							<!-- GWT classes -->
							<exclude>**/client/**/*.java</exclude>
						</excludes>
					</configuration>
					<!--
                    <executions>
                        <execution>
                            <id>clover</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>instrument</goal>
                                <goal>check</goal>
                                <goal>clover</goal>
                            </goals>
                        </execution>
                    </executions>
                    -->
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-java2ws-plugin</artifactId>
					<version>${cxf.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-jaxws</artifactId>
							<version>${cxf.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.cxf</groupId>
							<artifactId>cxf-rt-frontend-simple</artifactId>
							<version>${cxf.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-doap-plugin</artifactId>
					<version>${maven.doap.plugin.version}</version>
					<configuration>
						<doapOptions>
							<programmingLanguage>java</programmingLanguage>
							<category>build-management</category>
						</doapOptions>
						<asfExtOptions>
							<included>false</included>
						</asfExtOptions>
					</configuration>
					<!--
                                        <executions>
                                          <execution>
                                            <id>site</id>
                                            <phase>site</phase>
                                            <goals>
                                              <goal>generate</goal>
                                            </goals>
                                          </execution>
                                        </executions>
                                        -->
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>${maven.tomcat7.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${maven.jetty.eclipse.plugin.version}</version>
					<!--
                                    <executions>
                                        <execution>
                                            <id>start-jetty</id>
                                            <phase>pre-integration-test</phase>
                                            <goals>
                                                <goal>run-war</goal>
                                            </goals>
                                            <configuration>
                                                <scanIntervalSeconds>0</scanIntervalSeconds>
                                                <daemon>true</daemon>
                                            </configuration>
                                        </execution>
                                        <execution>
                                            <id>stop-jetty</id>
                                            <phase>post-integration-test</phase>
                                            <goals>
                                                <goal>stop</goal>
                                            </goals>
                                        </execution>
                                    </executions>
                                    -->
					<dependencies>
						<dependency>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-client</artifactId>
							<version>${jetty9.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-servlets</artifactId>
							<version>${jetty9.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-http</artifactId>
							<version>${jetty9.version}</version>
						</dependency>
						<dependency>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-rewrite</artifactId>
							<version>${jetty9.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<!--<scanIntervalSeconds>10</scanIntervalSeconds>-->
						<scanIntervalSeconds>0</scanIntervalSeconds>
						<!-- for jrebel -->
						<!--
                                        <webApp>
                                            <contextPath>/nabla</contextPath>
                                        </webApp>
                                        -->
						<!--<useTestClasspath>true</useTestClasspath>-->
						<httpConnector>
							<!--host>localhost</host-->
							<port>${jetty.port}</port>
						</httpConnector>
						<stopPort>${jetty.stop.port}</stopPort>
						<stopKey>STOP</stopKey>
						<stopPort>9999</stopPort>
						<stopWait>10</stopWait>
						<!--
                                        <systemProperties>
                                            <systemProperty>
                                                <key>nabla.config</key>
                                                <value>../../../config/dev</value>
                                            </systemProperty>
                                            <systemProperty>
                                                <key>nabla.data</key>
                                                <value>${data.dir}</value>
                                            </systemProperty>
                                        </systemProperties>
                                        -->
					</configuration>
				</plugin>
				<!-- TODO already using jetty-maven-plugin -->
				<!-- please use instead org.eclipse.jetty -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>${maven.jetty.mortbay.plugin.version}</version>
					<configuration>
						<contextPath>/nabla</contextPath>
						<!--<scanIntervalSeconds>10</scanIntervalSeconds>-->
						<scanIntervalSeconds>0</scanIntervalSeconds>
						<!-- for jrebel -->
						<connectors>
							<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
								<port>${jetty.port}</port>
								<maxIdleTime>60000</maxIdleTime>
							</connector>
						</connectors>
						<stopPort>${jetty.stop.port}</stopPort>
						<stopKey>STOP</stopKey>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/webapp/WEB-INF</directory>
								<excludes>
									<exclude>**/*.jsp</exclude>
								</excludes>
								<includes>
									<include>**/*.properties</include>
									<include>**/*.xml</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.zeroturnaround</groupId>
					<artifactId>jrebel-maven-plugin</artifactId>
					<version>${maven.jrebel.plugin.version}</version>
					<executions>
						<execution>
							<id>generate-rebel-xml</id>
							<phase>process-resources</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- Need to get JRebel to ignore osgi packaging -->
						<packaging>jar</packaging>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${maven.exec.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${maven.org.liquibase.plugin.version}</version>
					<configuration>
						<propertyFileWillOverride>true</propertyFileWillOverride>
						<!--<propertyFile>target/classes/liquibase.properties</propertyFile>-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>hibernate3-maven-plugin</artifactId>
					<version>${hibernate3.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>${maven.sql.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>${maven.jboss.as.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>${maven.tomcat.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-packaging-maven-plugin</artifactId>
					<version>${maven.jboss.packaging.plugin.version}</version>
					<!-- Enable packaging types and lifecycle bindings. -->
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-maven-plugin</artifactId>
					<version>${maven.jboss.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${maven.gwt.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jboss.errai</groupId>
					<artifactId>jacoco-gwt-maven-plugin</artifactId>
					<version>${maven.jacoco.gwt.plugin.version}</version>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<phase>initialize</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>jacocoArgs</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>jacoco-site</id>
							<phase>site</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-maven-plugin</artifactId>
					<version>${maven.vaadin.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>${maven.aspectj.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<showWeaveInfo>true</showWeaveInfo>
								<source>${jdkLevel}</source>
								<target>${jdkLevel}</target>
								<!--Xlint>ignore</Xlint -->
								<!--verbose>true</verbose -->
								<complianceLevel>${compiler.version}</complianceLevel>
								<forceAjcCompile>false</forceAjcCompile>
								<maxmem>750m</maxmem>
							</configuration>
						</execution>
					</executions>
					<!-- Need to explicitly set the compiler dependencies for Java 1.7 (with
                                        plugin version 1.4) otherwise the plugin uses the dependencies defined in
                                        its pom (which are not good enough) -->
					<dependencies>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjrt</artifactId>
							<version>${aspectj.version}</version>
						</dependency>
						<dependency>
							<groupId>org.aspectj</groupId>
							<artifactId>aspectjtools</artifactId>
							<version>${aspectj.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>${maven.xml.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>classworlds</groupId>
							<artifactId>classworlds</artifactId>
							<version>${classworlds.version}</version>
						</dependency>
						<dependency>
							<groupId>net.sf.saxon</groupId>
							<artifactId>saxon</artifactId>
							<version>${saxon.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>${maven.processor.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.kelveden</groupId>
					<artifactId>maven-karma-plugin</artifactId>
					<version>${maven.karma.plugin.version}</version>
					<executions>
						<execution>
							<phase>test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<configFile>${basedir}/src/main/webapp/karma.conf.js</configFile>
						<junitReportFile>src/main/webapp/resources/test-results.xml</junitReportFile>
						<reportsDirectory>${project.build.directory}/karma-reports</reportsDirectory>
						<browsers>PhantomJS</browsers>
						<autoWatch>false</autoWatch>
						<singleRun>true</singleRun>
						<colors>true</colors>
						<skipKarma>${maven.test.skip}</skipKarma>
						<skipTests>${maven.test.skip}</skipTests>
						<karmaFailureIgnore>false</karmaFailureIgnore>
						<reporters>dots,junit,coverage</reporters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>pl.allegro</groupId>
					<artifactId>grunt-maven-plugin</artifactId>
					<version>${maven.grunt.plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-ui</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>npm</goal>
								<goal>grunt</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- the same directory for JavaScript compilation and build directory
                                            because we use "exploded" directory from war plugin -->
						<sourceDirectory>${project.build.directory}/${project.build.finalName}</sourceDirectory>
						<jsSourceDirectory>js</jsSourceDirectory>
						<gruntBuildDirectory>${project.build.directory}/${project.build.finalName}</gruntBuildDirectory>
						<gruntOptions>
							<gruntOption>--verbose</gruntOption>
						</gruntOptions>
						<filteredResources>
							<filteredResource>maven-properties.json</filteredResource>
						</filteredResources>
						<showColors>true</showColors>
						<target>build</target>
					</configuration>
				</plugin>
				<!--
                                <plugin>
                                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                                    <artifactId>maven-replacer-plugin</artifactId>
                                    <version>${maven.replacer.plugin.version}</version>
                                </plugin>
                                -->
				<plugin>
					<groupId>org.bitstrings.maven.plugins</groupId>
					<artifactId>dependencypath-maven-plugin</artifactId>
					<version>${maven.dependencypath.plugin.version}</version>
					<executions>
						<execution>
							<id>set-all</id>
							<goals>
								<goal>set</goal>
							</goals>
						</execution>
						<execution>
							<id>set-relative-builddir</id>
							<goals>
								<goal>set</goal>
							</goals>
							<configuration>
								<propertySets>
									<propertySet>
										<suffix>builddir</suffix>
										<relativeTo>${project.build.directory}</relativeTo>
										<transitive>false</transitive>
									</propertySet>
								</propertySets>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>nbm-maven-plugin</artifactId>
					<version>${maven.nbm.plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo.jspc</groupId>
					<artifactId>jspc-maven-plugin</artifactId>
					<version>${maven.jspc.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
					<!-- Use the Tomcat 6 JSP compiler -->
					<dependencies>
						<dependency>
							<groupId>org.codehaus.mojo.jspc</groupId>
							<artifactId>jspc-compiler-tomcat6</artifactId>
							<version>${jspc.compiler.tomcat6.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<source>${jdkLevel}</source>
						<target>${jdkLevel}</target>
						<includeInProject>false</includeInProject>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.adobe.ac</groupId>
					<artifactId>flex-pmd-cpd-maven-plugin</artifactId>
					<version>${maven.flex.pmd.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.adobe.ac</groupId>
					<artifactId>flex-pmd-maven-plugin</artifactId>
					<version>${maven.flex.pmd.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.adobe.ac</groupId>
					<artifactId>flex-pmd-metrics-maven-plugin</artifactId>
					<version>${maven.flex.pmd.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${maven.bundle.plugin.version}</version>
					<!--<extensions>true</extensions>-->
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<supportedProjectTypes>
							<supportedProjectType>jar</supportedProjectType>
							<supportedProjectType>bundle</supportedProjectType>
							<supportedProjectType>war</supportedProjectType>
						</supportedProjectTypes>
						<!--
                                      <instructions>
                                          <_include>osgi.bnd</_include>
                                      </instructions>
                                      -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.ops4j</groupId>
					<artifactId>maven-pax-plugin</artifactId>
					<version>${maven.pax.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.izpack</groupId>
					<artifactId>izpack-maven-plugin</artifactId>
					<version>${maven.izpack.plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>izpack</goal>
							</goals>
							<configuration>
								<izpackBasedir>${staging.dir}</izpackBasedir>
								<!--<installFile>${staging.dir}/x86Linux-install.xml</installFile>-->
								<comprLevel>9</comprLevel>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.izpack</groupId>
							<artifactId>izpack-compiler</artifactId>
							<version>${izpack.compiler.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven.failsafe.plugin.version}</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<phase>verify</phase>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<!--<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>-->
						<!--<argLine>${failsafe.argLine}</argLine>-->
						<skipTests>${maven.test.skip}</skipTests>
						<skipITs>${maven.test.it.skip}</skipITs>
						<parallel>classes</parallel>
						<threadCount>1</threadCount>
						<forkCount>1</forkCount>
						<reuseForks>false</reuseForks>
						<systemPropertyVariables>
							<cucumber.options><![CDATA[--tags ${cucumber.tags} ${cucumber.features.dir}/${cucumber.feature}]]></cucumber.options>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonatype.flexmojos</groupId>
					<artifactId>flexmojos-maven-plugin</artifactId>
					<version>${maven.flexmojos.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.adobe.flex</groupId>
							<artifactId>afe</artifactId>
							<version>${flex.sdk.version}</version>
						</dependency>
						<dependency>
							<groupId>com.adobe.flex</groupId>
							<artifactId>aglj40</artifactId>
							<version>${flex.sdk.version}</version>
						</dependency>
						<dependency>
							<groupId>com.adobe.flex</groupId>
							<artifactId>compiler</artifactId>
							<version>${flex.sdk.version}</version>
							<type>pom</type>
						</dependency>
						<dependency>
							<groupId>com.adobe.flex</groupId>
							<artifactId>flex-fontkit</artifactId>
							<version>${flex.sdk.version}</version>
						</dependency>
						<dependency>
							<groupId>com.adobe.flex</groupId>
							<artifactId>rideau</artifactId>
							<version>${flex.sdk.version}</version>
						</dependency>
						<dependency>
							<groupId>com.adobe.flex.compiler</groupId>
							<artifactId>asdoc</artifactId>
							<version>${flex.sdk.version}</version>
							<type>zip</type>
							<classifier>template</classifier>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>apt-maven-plugin</artifactId>
					<version>${maven.apt.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${maven.cargo.maven2.plugin.version}</version>
					<configuration>
						<skip>${maven.test.skip}</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.sinapsi.memtracker</groupId>
					<artifactId>mem-tracker-maven-plugin</artifactId>
					<version>${maven.mem.tracker.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<phase>integration-test</phase>
							<goals>
								<goal>track</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.edugility</groupId>
					<artifactId>h2-maven-plugin</artifactId>
					<version>${maven.h2.plugin.version}</version>
					<executions>
						<execution>
							<id>Spawn a new H2 TCP server</id>
							<goals>
								<goal>spawn</goal>
							</goals>
						</execution>
						<execution>
							<id>Stop a spawned H2 TCP server</id>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<port>5055</port>
						<baseDirectory>${basedir}/target</baseDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jax-ws-commons</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>${maven.jaxws.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.sun.xml.ws</groupId>
							<artifactId>jaxws-tools</artifactId>
							<version>${jaxws.tools.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${maven.pitest.plugin.version}</version>
					<configuration>
						<outputFormats>
							<outputFormat>HTML</outputFormat>
							<outputFormat>XML</outputFormat>
							<outputFormat>CSV</outputFormat>
						</outputFormats>
						<verbose>true</verbose>
						<failWhenNoMutations>false</failWhenNoMutations>
						<timestampedReports>false</timestampedReports>
						<!--
                                        <mutationThreshold>26</mutationThreshold>
                                        <coverageThreshold>80</coverageThreshold>
                                        <historyInputFile>${project.basedir}/pitest-history.xml</historyInputFile>
                                        <historyOutputFile>${project.build.directory}/pitest-history.xml</historyOutputFile>
                                        -->
						<!--<threads>4</threads>-->
						<excludedClasses>
							<param>com.nabla.todo.*</param>
							<param>com.nabla.generated.*</param>
							<param>com.nabla.project.visma.selenium.tests.*</param>
							<param>com.nabla.project.visma.cargo.*</param>
							<param>*ITest*</param>
							<param>**STest*</param>
						</excludedClasses>
						<avoidCallsTo>
							<avoidCallsTo>akka.event.LoggingAdapter</avoidCallsTo>
							<avoidCallsTo>java.util.logging</avoidCallsTo>
							<avoidCallsTo>org.apache.log4j</avoidCallsTo>
							<avoidCallsTo>org.slf4j</avoidCallsTo>
							<avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
						</avoidCallsTo>
						<jvmArgs>
							<value>-Xms256m</value>
							<value>-Xmx512m</value>
							<!--
                                            <value>-XX:PermSize=128m</value>
                                            <value>-XX:MaxPermSize=256m</value>
                                            -->
						</jvmArgs>
						<detectInlinedCode>true</detectInlinedCode>
						<targetClasses>
							<param>com.nabla*</param>
						</targetClasses>
						<targetTests>
							<param>com.nabla*</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
							<mutator>EXPERIMENTAL_MEMBER_VARIABLE</mutator>
							<mutator>REMOVE_CONDITIONALS</mutator>
							<mutator>INLINE_CONSTS</mutator>
							<mutator>NON_VOID_METHOD_CALLS</mutator>
							<mutator>CONSTRUCTOR_CALLS</mutator>
						</mutators>
						<!--<skip>true</skip>-->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cxx-maven-plugin</artifactId>
					<version>${maven.cxx.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${fabric8-docker-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- does not works with maven 3
                  <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${maven.buildnumber.plugin.version}</version>
                    <inherited>true</inherited>
                  </plugin>
                  -->
			<!-- dectivate : validation error in eclipse and does not work with maven-bundle-plugin
                  <plugin>
                    <groupId>de.smartics.maven.plugin</groupId>
                    <artifactId>maven-buildmetadata-plugin</artifactId>
                    <version>${maven.buildmetadata.plugin.version}</version>
                    <executions>
                      <execution>
                        <phase>initialize</phase>
                        <goals>
                          <goal>provide-buildmetadata</goal>
                        </goals>
                      </execution>
                    </executions>
                    <configuration>
                      <addProjectInfo>true</addProjectInfo>
                      <propertyOutputFileMapping>
                        <fileMapping>
                          <packaging>war</packaging>
                          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>ear</packaging>
                          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>sar</packaging>
                          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>rar</packaging>
                          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>par</packaging>
                          <outputFile>${project.build.directory}/${project.build.finalName}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>bundle</packaging>
                          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>jar</packaging>
                          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>ejb</packaging>
                          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>maven-archetype</packaging>
                          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>maven-plugin</packaging>
                          <outputFile>${project.build.outputDirectory}/META-INF/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>eclipse-plugin</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>eclipse-feature</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>eclipse-repository</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>eclipse-update-site</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>targetplatform</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                        <fileMapping>
                          <packaging>pom</packaging>
                          <outputFile>${project.build.directory}/build.properties</outputFile>
                        </fileMapping>
                      </propertyOutputFileMapping>
                    </configuration>
                  </plugin>
                  -->
			<plugin>
				<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
				<artifactId>maven-java-formatter-plugin</artifactId>
				<version>${maven.java.formatter.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.nabla.project</groupId>
						<artifactId>build-tools</artifactId>
						<version>1.0.1-SNAPSHOT</version>
					</dependency>
				</dependencies>
				<configuration>
					<!--<configFile>${home.dir}/build-tools/src/main/resources/project/jalopy_regles_nabla_eclipse.xml</configFile>-->
					<configFile>/project/jalopy_regles_nabla_eclipse.xml</configFile>
					<overrideConfigCompilerVersion>true</overrideConfigCompilerVersion>
					<compilerSource>${jdkLevel}</compilerSource>
					<compilerCompliance>${jdkLevel}</compilerCompliance>
					<compilerTargetPlatform>${jdkLevel}</compilerTargetPlatform>
					<lineEnding>LF</lineEnding>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<version>${maven.sortpom.plugin.version}</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<lineSeparator>\n</lineSeparator>
					<encoding>${project.build.sourceEncoding}</encoding>
					<sortProperties>true</sortProperties>
					<keepBlankLines>true</keepBlankLines>
					<sortDependencies>scope</sortDependencies>
					<nrOfIndentSpace>-1</nrOfIndentSpace>
				</configuration>
			</plugin>
			<!--
      <plugin>
        <groupId>com.cloudbees</groupId>
        <artifactId>bees-maven-plugin</artifactId>
        <version>${maven.bees.plugin.version}</version>
      </plugin>
      -->
		</plugins>
	</build>
	<profiles>
		<!-- profile for https://github.com/jenkinsci/parallel-test-executor-plugin/tree/master/demo -->
		<profile>
			<!-- if ./exclusions.txt is present, use that as the exclusion list. Useful when skipping tests. -->
			<id>exclusions</id>
			<activation>
				<file>
					<exists>exclusions.txt</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludesFile>exclusions.txt</excludesFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- if ./inclusions.txt is present, use that as the inclusion list. Useful when skipping tests. -->
			<id>inclusions</id>
			<activation>
				<file>
					<exists>inclusions.txt</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includesFile>inclusions.txt</includesFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- ================= START Environment Profiles ================= -->
		<!-- Add this profile when you want to debug unit tests in Eclipse e.g.
                $> mvn install -Pdebugtest -Dmaven.surefire.debug=true -->
		<profile>
			<id>debugtest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<inherited>true</inherited>
						<configuration>
							<argLine>-Xms256m -Xmx512m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=5000 -Dfile.encoding=${project.build.sourceEncoding}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>debugtest-nosuspend</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<inherited>true</inherited>
						<!--
                        <configuration>
                            <argLine>-Xms256m -Xmx512m -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=5000,suspend=n -Dsuppress.jrisk.properties.logging=true -Dfile.encoding=${project.build.sourceEncoding}</argLine>
                        </configuration>
                        -->
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>profiletest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<inherited>true</inherited>
						<configuration>
							<argLine>-Xms256m -Xmx512m -agentlib:yjpagent -Dsuppress.jrisk.properties.logging=true -Dfile.encoding=${project.build.sourceEncoding}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- This profile houses the m2e config for bypassed maven plugins, activated by m2e -->
		<!-- https://stackoverflow.com/questions/7409823/m2e-lifecycle-mapping-not-found -->
		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${maven.resources.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>${lifecycle.mapping.version}</version>
						<configuration>
							<mappingId>customizable</mappingId>
							<configurators>
								<configurator id="org.maven.ide.eclipse.configuration.wtp.configurator"></configurator>
							</configurators>
							<mojoExecutions>
								<mojoExecution>org.apache.maven.plugins:maven-resources-plugin::</mojoExecution>
							</mojoExecutions>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>env.WORKSPACE.default</id>
			<activation>
				<property>
					<name>!env.WORKSPACE</name>
				</property>
			</activation>
			<properties>
				<env.WORKSPACE>${env.HOME}</env.WORKSPACE>
			</properties>
		</profile>
		<profile>
			<id>env.GRIDGAIN_HOME.default</id>
			<activation>
				<property>
					<name>!env.GRIDGAIN_HOME</name>
				</property>
			</activation>
			<properties>
				<env.GRIDGAIN_HOME>${project.build.directory}/gridgain</env.GRIDGAIN_HOME>
			</properties>
		</profile>
		<profile>
			<!-- e.g: mvn initialize -Pshow-properties -->
			<id>show-properties</id>
			<activation>
				<property>
					<name>profile.activation</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<version>${maven.gmaven.plugin.version}</version>
						<executions>
							<execution>
								<id>g-show-properties</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source><![CDATA[def profiles = project.getActiveProfiles();
                                log.info "========================================================================"
                                log.info "Active profiles:"
                                log.info "========================================================================"
                                if(profiles.size > 0) {
                                  profiles.each{ profile ->
                                    log.info profile.id;
                                  }
                                }
                                else {
                                  log.info "No active profiles"
                                }

                                // Pattern to match ${property} placeholders
                                def placeholderPattern = ~/\$\{(.*?)\}/;
                                log.info ""
                                log.info "========================================================================"
                                log.info "Maven project.properties:"
                                log.info "========================================================================"
                                if (project.parent) log.info "project.parent.basedir  = $project.parent.basedir";
                                log.info "project.basedir       = $project.basedir";
                                log.info "project.artifactId      = $project.artifactId";
                                log.info "project.build.directory = $project.build.directory";
                                log.info "project.build.finalName = $project.build.finalName";

                                project.properties.sort{it.key}.each { key, value ->
                                  def matcher = placeholderPattern.matcher(value);
                                  if(matcher)
                                    log.warn "NON EXISTING PROPERTY IN PLACEHOLDER: $key = $value"
                                  else
                                    log.info "$key = $value";
                                }
                                log.info "========================================================================"]]></source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- ================= END Environment Profiles ================= -->
		<profile>
			<id>sonar-cxx</id>
			<!--
                    <activation>
                            <property>
                                    <name>!profile.activation</name>
                            </property>
                    </activation>
                    -->
			<properties>
				<!-- Sonar properties -->
				<sonar.language>c++</sonar.language>
			</properties>
		</profile>
		<profile>
			<id>maven-3-site</id>
			<activation>
				<file>
					<!-- This employs that the basedir expression is only recognized by
                                                Maven 3.x (see MNG-2363) -->
					<exists>${basedir}</exists>
				</file>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>${maven.site.plugin.version}</version>
							<dependencies>
								<dependency>
									<groupId>org.apache.maven.doxia</groupId>
									<artifactId>doxia-core</artifactId>
									<version>${doxia.core.version}</version>
								</dependency>
								<dependency>
									<groupId>org.apache.maven.doxia</groupId>
									<artifactId>doxia-site-renderer</artifactId>
									<version>${doxia.version}</version>
								</dependency>
								<dependency>
									<groupId>com.nabla.project</groupId>
									<artifactId>skin</artifactId>
									<version>1.0.1-SNAPSHOT</version>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<properties>
				<lastModifiedCheck>true</lastModifiedCheck>
				<maven.test.skip>false</maven.test.skip>
				<!-- for mvn site to work with andromda-cartridge-plugin -->
			</properties>
		</profile>
	</profiles>
</project>
